// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: handler/LLOneBot/protos/handler/response/response.proto

package response

import (
	handler "github.com/nanachi-sh/susubot-code/handler/LLOneBot/protos/handler"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *handler.MessageType      `protobuf:"varint,1,opt,name=Type,proto3,enum=define.MessageType,oneof" json:"Type,omitempty"`
	Private *Response_Message_Private `protobuf:"bytes,2,opt,name=Private,proto3,oneof" json:"Private,omitempty"`
	Group   *Response_Message_Group   `protobuf:"bytes,3,opt,name=Group,proto3,oneof" json:"Group,omitempty"`
}

func (x *Response_Message) Reset() {
	*x = Response_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message) ProtoMessage() {}

func (x *Response_Message) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message.ProtoReflect.Descriptor instead.
func (*Response_Message) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{0}
}

func (x *Response_Message) GetType() handler.MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.MessageType(0)
}

func (x *Response_Message) GetPrivate() *Response_Message_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *Response_Message) GetGroup() *Response_Message_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type Response_Message_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                        `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string                       `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                        `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                         `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                        `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	MessageChain []*handler.MessageChainObject `protobuf:"bytes,6,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_Message_Private) Reset() {
	*x = Response_Message_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message_Private) ProtoMessage() {}

func (x *Response_Message_Private) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message_Private.ProtoReflect.Descriptor instead.
func (*Response_Message_Private) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{1}
}

func (x *Response_Message_Private) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_Message_Private) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_Message_Private) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_Message_Private) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_Message_Private) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_Message_Private) GetMessageChain() []*handler.MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_Message_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                        `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string                       `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                        `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                         `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                        `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	GroupId      string                        `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	SenderRole   *handler.GroupRole            `protobuf:"varint,7,opt,name=SenderRole,proto3,enum=define.GroupRole,oneof" json:"SenderRole,omitempty"`
	BotRole      *handler.GroupRole            `protobuf:"varint,8,opt,name=BotRole,proto3,enum=define.GroupRole,oneof" json:"BotRole,omitempty"`
	MessageChain []*handler.MessageChainObject `protobuf:"bytes,9,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_Message_Group) Reset() {
	*x = Response_Message_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message_Group) ProtoMessage() {}

func (x *Response_Message_Group) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message_Group.ProtoReflect.Descriptor instead.
func (*Response_Message_Group) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{2}
}

func (x *Response_Message_Group) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_Message_Group) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_Message_Group) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_Message_Group) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_Message_Group) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_Message_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_Message_Group) GetSenderRole() handler.GroupRole {
	if x != nil && x.SenderRole != nil {
		return *x.SenderRole
	}
	return handler.GroupRole(0)
}

func (x *Response_Message_Group) GetBotRole() handler.GroupRole {
	if x != nil && x.BotRole != nil {
		return *x.BotRole
	}
	return handler.GroupRole(0)
}

func (x *Response_Message_Group) GetMessageChain() []*handler.MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_QQEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          *handler.QQEventType            `protobuf:"varint,1,opt,name=Type,proto3,enum=define.QQEventType,oneof" json:"Type,omitempty"`
	GroupAdd      *Response_QQEvent_GroupAdd      `protobuf:"bytes,2,opt,name=GroupAdd,proto3,oneof" json:"GroupAdd,omitempty"`
	GroupRemove   *Response_QQEvent_GroupRemove   `protobuf:"bytes,3,opt,name=GroupRemove,proto3,oneof" json:"GroupRemove,omitempty"`
	GroupMute     *Response_QQEvent_GroupMute     `protobuf:"bytes,4,opt,name=GroupMute,proto3,oneof" json:"GroupMute,omitempty"`
	GroupUnmute   *Response_QQEvent_GroupUnmute   `protobuf:"bytes,5,opt,name=GroupUnmute,proto3,oneof" json:"GroupUnmute,omitempty"`
	MessageRecall *Response_QQEvent_MessageRecall `protobuf:"bytes,6,opt,name=MessageRecall,proto3,oneof" json:"MessageRecall,omitempty"`
}

func (x *Response_QQEvent) Reset() {
	*x = Response_QQEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent) ProtoMessage() {}

func (x *Response_QQEvent) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent.ProtoReflect.Descriptor instead.
func (*Response_QQEvent) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{3}
}

func (x *Response_QQEvent) GetType() handler.QQEventType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.QQEventType(0)
}

func (x *Response_QQEvent) GetGroupAdd() *Response_QQEvent_GroupAdd {
	if x != nil {
		return x.GroupAdd
	}
	return nil
}

func (x *Response_QQEvent) GetGroupRemove() *Response_QQEvent_GroupRemove {
	if x != nil {
		return x.GroupRemove
	}
	return nil
}

func (x *Response_QQEvent) GetGroupMute() *Response_QQEvent_GroupMute {
	if x != nil {
		return x.GroupMute
	}
	return nil
}

func (x *Response_QQEvent) GetGroupUnmute() *Response_QQEvent_GroupUnmute {
	if x != nil {
		return x.GroupUnmute
	}
	return nil
}

func (x *Response_QQEvent) GetMessageRecall() *Response_QQEvent_MessageRecall {
	if x != nil {
		return x.MessageRecall
	}
	return nil
}

type Response_QQEvent_GroupAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *handler.QQEventType_GroupAddType `protobuf:"varint,1,opt,name=Type,proto3,enum=define.QQEventType_GroupAddType,oneof" json:"Type,omitempty"`
	Direct *Response_QQEvent_GroupAdd_Direct `protobuf:"bytes,2,opt,name=Direct,proto3,oneof" json:"Direct,omitempty"`
	Invite *Response_QQEvent_GroupAdd_Invite `protobuf:"bytes,3,opt,name=Invite,proto3,oneof" json:"Invite,omitempty"`
}

func (x *Response_QQEvent_GroupAdd) Reset() {
	*x = Response_QQEvent_GroupAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupAdd) ProtoMessage() {}

func (x *Response_QQEvent_GroupAdd) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupAdd.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupAdd) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{4}
}

func (x *Response_QQEvent_GroupAdd) GetType() handler.QQEventType_GroupAddType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.QQEventType_GroupAddType(0)
}

func (x *Response_QQEvent_GroupAdd) GetDirect() *Response_QQEvent_GroupAdd_Direct {
	if x != nil {
		return x.Direct
	}
	return nil
}

func (x *Response_QQEvent_GroupAdd) GetInvite() *Response_QQEvent_GroupAdd_Invite {
	if x != nil {
		return x.Invite
	}
	return nil
}

type Response_QQEvent_GroupAdd_Direct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinerId     string  `protobuf:"bytes,1,opt,name=JoinerId,proto3" json:"JoinerId,omitempty"` //新加入成员Id
	JoinerName   *string `protobuf:"bytes,2,opt,name=JoinerName,proto3,oneof" json:"JoinerName,omitempty"`
	GroupId      string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp    int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
	ApproverId   string  `protobuf:"bytes,6,opt,name=ApproverId,proto3" json:"ApproverId,omitempty"`
	ApproverName *string `protobuf:"bytes,7,opt,name=ApproverName,proto3,oneof" json:"ApproverName,omitempty"`
}

func (x *Response_QQEvent_GroupAdd_Direct) Reset() {
	*x = Response_QQEvent_GroupAdd_Direct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupAdd_Direct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupAdd_Direct) ProtoMessage() {}

func (x *Response_QQEvent_GroupAdd_Direct) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupAdd_Direct.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupAdd_Direct) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{5}
}

func (x *Response_QQEvent_GroupAdd_Direct) GetJoinerId() string {
	if x != nil {
		return x.JoinerId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetJoinerName() string {
	if x != nil && x.JoinerName != nil {
		return *x.JoinerName
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupAdd_Direct) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetApproverName() string {
	if x != nil && x.ApproverName != nil {
		return *x.ApproverName
	}
	return ""
}

type Response_QQEvent_GroupAdd_Invite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinerId     string  `protobuf:"bytes,1,opt,name=JoinerId,proto3" json:"JoinerId,omitempty"` //新加入成员Id
	JoinerName   *string `protobuf:"bytes,2,opt,name=JoinerName,proto3,oneof" json:"JoinerName,omitempty"`
	GroupId      string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp    int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
	InviterId    string  `protobuf:"bytes,6,opt,name=InviterId,proto3" json:"InviterId,omitempty"` //邀请者Id
	InviterName  *string `protobuf:"bytes,7,opt,name=InviterName,proto3,oneof" json:"InviterName,omitempty"`
	ApproverId   string  `protobuf:"bytes,8,opt,name=ApproverId,proto3" json:"ApproverId,omitempty"` //审核者Id
	ApproverName *string `protobuf:"bytes,9,opt,name=ApproverName,proto3,oneof" json:"ApproverName,omitempty"`
}

func (x *Response_QQEvent_GroupAdd_Invite) Reset() {
	*x = Response_QQEvent_GroupAdd_Invite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupAdd_Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupAdd_Invite) ProtoMessage() {}

func (x *Response_QQEvent_GroupAdd_Invite) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupAdd_Invite.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupAdd_Invite) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{6}
}

func (x *Response_QQEvent_GroupAdd_Invite) GetJoinerId() string {
	if x != nil {
		return x.JoinerId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetJoinerName() string {
	if x != nil && x.JoinerName != nil {
		return *x.JoinerName
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupAdd_Invite) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetInviterId() string {
	if x != nil {
		return x.InviterId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetInviterName() string {
	if x != nil && x.InviterName != nil {
		return *x.InviterName
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetApproverName() string {
	if x != nil && x.ApproverName != nil {
		return *x.ApproverName
	}
	return ""
}

type Response_QQEvent_GroupRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *handler.QQEventType_GroupRemoveType `protobuf:"varint,1,opt,name=Type,proto3,enum=define.QQEventType_GroupRemoveType,oneof" json:"Type,omitempty"`
	Manual *Response_QQEvent_GroupRemove_Manual `protobuf:"bytes,2,opt,name=Manual,proto3,oneof" json:"Manual,omitempty"`
	Kick   *Response_QQEvent_GroupRemove_Kick   `protobuf:"bytes,3,opt,name=Kick,proto3,oneof" json:"Kick,omitempty"`
}

func (x *Response_QQEvent_GroupRemove) Reset() {
	*x = Response_QQEvent_GroupRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupRemove) ProtoMessage() {}

func (x *Response_QQEvent_GroupRemove) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupRemove.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupRemove) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{7}
}

func (x *Response_QQEvent_GroupRemove) GetType() handler.QQEventType_GroupRemoveType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.QQEventType_GroupRemoveType(0)
}

func (x *Response_QQEvent_GroupRemove) GetManual() *Response_QQEvent_GroupRemove_Manual {
	if x != nil {
		return x.Manual
	}
	return nil
}

func (x *Response_QQEvent_GroupRemove) GetKick() *Response_QQEvent_GroupRemove_Kick {
	if x != nil {
		return x.Kick
	}
	return nil
}

type Response_QQEvent_GroupRemove_Manual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuiterId   string  `protobuf:"bytes,1,opt,name=QuiterId,proto3" json:"QuiterId,omitempty"` //退出者Id
	QuiterName *string `protobuf:"bytes,2,opt,name=QuiterName,proto3,oneof" json:"QuiterName,omitempty"`
	GroupId    string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp  int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId      string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_QQEvent_GroupRemove_Manual) Reset() {
	*x = Response_QQEvent_GroupRemove_Manual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupRemove_Manual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupRemove_Manual) ProtoMessage() {}

func (x *Response_QQEvent_GroupRemove_Manual) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupRemove_Manual.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupRemove_Manual) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{8}
}

func (x *Response_QQEvent_GroupRemove_Manual) GetQuiterId() string {
	if x != nil {
		return x.QuiterId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Manual) GetQuiterName() string {
	if x != nil && x.QuiterName != nil {
		return *x.QuiterName
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Manual) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Manual) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupRemove_Manual) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type Response_QQEvent_GroupRemove_Kick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"` //被踢出者Id
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	GroupId      string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp    int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
	OperatorId   string  `protobuf:"bytes,6,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,7,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
}

func (x *Response_QQEvent_GroupRemove_Kick) Reset() {
	*x = Response_QQEvent_GroupRemove_Kick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupRemove_Kick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupRemove_Kick) ProtoMessage() {}

func (x *Response_QQEvent_GroupRemove_Kick) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupRemove_Kick.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupRemove_Kick) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{9}
}

func (x *Response_QQEvent_GroupRemove_Kick) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupRemove_Kick) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

type Response_QQEvent_GroupMute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	OperatorId   string  `protobuf:"bytes,4,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,5,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
	Duration     int32   `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
	GroupId      string  `protobuf:"bytes,7,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BotId        string  `protobuf:"bytes,8,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_QQEvent_GroupMute) Reset() {
	*x = Response_QQEvent_GroupMute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupMute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupMute) ProtoMessage() {}

func (x *Response_QQEvent_GroupMute) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupMute.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupMute) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{10}
}

func (x *Response_QQEvent_GroupMute) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupMute) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Response_QQEvent_GroupMute) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type Response_QQEvent_GroupUnmute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	OperatorId   string  `protobuf:"bytes,4,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,5,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
	GroupId      string  `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BotId        string  `protobuf:"bytes,7,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_QQEvent_GroupUnmute) Reset() {
	*x = Response_QQEvent_GroupUnmute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupUnmute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupUnmute) ProtoMessage() {}

func (x *Response_QQEvent_GroupUnmute) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupUnmute.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupUnmute) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{11}
}

func (x *Response_QQEvent_GroupUnmute) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupUnmute) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type Response_QQEvent_MessageRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *handler.QQEventType_MessageRecallType  `protobuf:"varint,1,opt,name=Type,proto3,enum=define.QQEventType_MessageRecallType,oneof" json:"Type,omitempty"`
	Group   *Response_QQEvent_MessageRecall_Group   `protobuf:"bytes,2,opt,name=Group,proto3,oneof" json:"Group,omitempty"`
	Private *Response_QQEvent_MessageRecall_Private `protobuf:"bytes,3,opt,name=Private,proto3,oneof" json:"Private,omitempty"`
}

func (x *Response_QQEvent_MessageRecall) Reset() {
	*x = Response_QQEvent_MessageRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_MessageRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_MessageRecall) ProtoMessage() {}

func (x *Response_QQEvent_MessageRecall) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_MessageRecall.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_MessageRecall) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{12}
}

func (x *Response_QQEvent_MessageRecall) GetType() handler.QQEventType_MessageRecallType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.QQEventType_MessageRecallType(0)
}

func (x *Response_QQEvent_MessageRecall) GetGroup() *Response_QQEvent_MessageRecall_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Response_QQEvent_MessageRecall) GetPrivate() *Response_QQEvent_MessageRecall_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

type Response_QQEvent_MessageRecall_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	OperatorId   string  `protobuf:"bytes,4,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,5,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
	GroupId      string  `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BotId        string  `protobuf:"bytes,7,opt,name=BotId,proto3" json:"BotId,omitempty"`
	MessageId    string  `protobuf:"bytes,8,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
}

func (x *Response_QQEvent_MessageRecall_Group) Reset() {
	*x = Response_QQEvent_MessageRecall_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_MessageRecall_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_MessageRecall_Group) ProtoMessage() {}

func (x *Response_QQEvent_MessageRecall_Group) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_MessageRecall_Group.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_MessageRecall_Group) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{13}
}

func (x *Response_QQEvent_MessageRecall_Group) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_MessageRecall_Group) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type Response_QQEvent_MessageRecall_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecallerId   string  `protobuf:"bytes,1,opt,name=RecallerId,proto3" json:"RecallerId,omitempty"`
	RecallerName *string `protobuf:"bytes,2,opt,name=RecallerName,proto3,oneof" json:"RecallerName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,4,opt,name=BotId,proto3" json:"BotId,omitempty"`
	MessageId    string  `protobuf:"bytes,5,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
}

func (x *Response_QQEvent_MessageRecall_Private) Reset() {
	*x = Response_QQEvent_MessageRecall_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_MessageRecall_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_MessageRecall_Private) ProtoMessage() {}

func (x *Response_QQEvent_MessageRecall_Private) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_MessageRecall_Private.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_MessageRecall_Private) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{14}
}

func (x *Response_QQEvent_MessageRecall_Private) GetRecallerId() string {
	if x != nil {
		return x.RecallerId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Private) GetRecallerName() string {
	if x != nil && x.RecallerName != nil {
		return *x.RecallerName
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Private) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_MessageRecall_Private) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Private) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type Response_CmdEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               *handler.CmdEventType                 `protobuf:"varint,1,opt,name=Type,proto3,enum=define.CmdEventType,oneof" json:"Type,omitempty"`
	Echo               string                                `protobuf:"bytes,2,opt,name=Echo,proto3" json:"Echo,omitempty"`
	GetGroupInfo       *Response_CmdEvent_GetGroupInfo       `protobuf:"bytes,3,opt,name=GetGroupInfo,proto3,oneof" json:"GetGroupInfo,omitempty"`
	GetGroupMemberInfo *Response_CmdEvent_GetGroupMemberInfo `protobuf:"bytes,4,opt,name=GetGroupMemberInfo,proto3,oneof" json:"GetGroupMemberInfo,omitempty"`
	GetMessage         *Response_CmdEvent_GetMessage         `protobuf:"bytes,5,opt,name=GetMessage,proto3,oneof" json:"GetMessage,omitempty"`
	GetFriendList      *Response_CmdEvent_GetFriendList      `protobuf:"bytes,6,opt,name=GetFriendList,proto3,oneof" json:"GetFriendList,omitempty"`
}

func (x *Response_CmdEvent) Reset() {
	*x = Response_CmdEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent) ProtoMessage() {}

func (x *Response_CmdEvent) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{15}
}

func (x *Response_CmdEvent) GetType() handler.CmdEventType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.CmdEventType(0)
}

func (x *Response_CmdEvent) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

func (x *Response_CmdEvent) GetGetGroupInfo() *Response_CmdEvent_GetGroupInfo {
	if x != nil {
		return x.GetGroupInfo
	}
	return nil
}

func (x *Response_CmdEvent) GetGetGroupMemberInfo() *Response_CmdEvent_GetGroupMemberInfo {
	if x != nil {
		return x.GetGroupMemberInfo
	}
	return nil
}

func (x *Response_CmdEvent) GetGetMessage() *Response_CmdEvent_GetMessage {
	if x != nil {
		return x.GetMessage
	}
	return nil
}

func (x *Response_CmdEvent) GetGetFriendList() *Response_CmdEvent_GetFriendList {
	if x != nil {
		return x.GetFriendList
	}
	return nil
}

type Response_CmdEvent_GetGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK        bool    `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode   *string `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	GroupId   string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	GroupName string  `protobuf:"bytes,4,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	MemberMax int32   `protobuf:"varint,5,opt,name=MemberMax,proto3" json:"MemberMax,omitempty"`
	MemberNow int32   `protobuf:"varint,6,opt,name=MemberNow,proto3" json:"MemberNow,omitempty"`
}

func (x *Response_CmdEvent_GetGroupInfo) Reset() {
	*x = Response_CmdEvent_GetGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetGroupInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetGroupInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetGroupInfo) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{16}
}

func (x *Response_CmdEvent_GetGroupInfo) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetGroupInfo) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupInfo) GetMemberMax() int32 {
	if x != nil {
		return x.MemberMax
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupInfo) GetMemberNow() int32 {
	if x != nil {
		return x.MemberNow
	}
	return 0
}

type Response_CmdEvent_GetGroupMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK             bool              `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode        *string           `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	GroupId        string            `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	UserId         string            `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName       string            `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Card           *string           `protobuf:"bytes,6,opt,name=Card,proto3,oneof" json:"Card,omitempty"` //群内自定义名称
	JoinTime       *int64            `protobuf:"varint,7,opt,name=JoinTime,proto3,oneof" json:"JoinTime,omitempty"`
	LastActiveTime *int64            `protobuf:"varint,8,opt,name=LastActiveTime,proto3,oneof" json:"LastActiveTime,omitempty"` //上次操作时间
	LastSentTime   *int64            `protobuf:"varint,9,opt,name=LastSentTime,proto3,oneof" json:"LastSentTime,omitempty"`     //上次发送信息时间
	Role           handler.GroupRole `protobuf:"varint,10,opt,name=Role,proto3,enum=define.GroupRole" json:"Role,omitempty"`
}

func (x *Response_CmdEvent_GetGroupMemberInfo) Reset() {
	*x = Response_CmdEvent_GetGroupMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetGroupMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetGroupMemberInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetGroupMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetGroupMemberInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetGroupMemberInfo) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{17}
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetCard() string {
	if x != nil && x.Card != nil {
		return *x.Card
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetJoinTime() int64 {
	if x != nil && x.JoinTime != nil {
		return *x.JoinTime
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetLastActiveTime() int64 {
	if x != nil && x.LastActiveTime != nil {
		return *x.LastActiveTime
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetLastSentTime() int64 {
	if x != nil && x.LastSentTime != nil {
		return *x.LastSentTime
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetRole() handler.GroupRole {
	if x != nil {
		return x.Role
	}
	return handler.GroupRole(0)
}

type Response_CmdEvent_GetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK      bool                       `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode *string                    `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	Message *Response_CmdEvent_Message `protobuf:"bytes,3,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *Response_CmdEvent_GetMessage) Reset() {
	*x = Response_CmdEvent_GetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetMessage) ProtoMessage() {}

func (x *Response_CmdEvent_GetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetMessage.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetMessage) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{18}
}

func (x *Response_CmdEvent_GetMessage) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetMessage) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetMessage) GetMessage() *Response_CmdEvent_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Response_CmdEvent_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *handler.MessageType               `protobuf:"varint,1,opt,name=Type,proto3,enum=define.MessageType,oneof" json:"Type,omitempty"`
	Private *Response_CmdEvent_Message_Private `protobuf:"bytes,2,opt,name=Private,proto3,oneof" json:"Private,omitempty"`
	Group   *Response_CmdEvent_Message_Group   `protobuf:"bytes,3,opt,name=Group,proto3,oneof" json:"Group,omitempty"`
}

func (x *Response_CmdEvent_Message) Reset() {
	*x = Response_CmdEvent_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_Message) ProtoMessage() {}

func (x *Response_CmdEvent_Message) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_Message.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_Message) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{19}
}

func (x *Response_CmdEvent_Message) GetType() handler.MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.MessageType(0)
}

func (x *Response_CmdEvent_Message) GetPrivate() *Response_CmdEvent_Message_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *Response_CmdEvent_Message) GetGroup() *Response_CmdEvent_Message_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type Response_CmdEvent_Message_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                        `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string                       `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                        `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                         `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                        `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	MessageChain []*handler.MessageChainObject `protobuf:"bytes,6,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_CmdEvent_Message_Private) Reset() {
	*x = Response_CmdEvent_Message_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_Message_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_Message_Private) ProtoMessage() {}

func (x *Response_CmdEvent_Message_Private) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_Message_Private.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_Message_Private) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{20}
}

func (x *Response_CmdEvent_Message_Private) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_CmdEvent_Message_Private) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetMessageChain() []*handler.MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_CmdEvent_Message_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                        `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string                       `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                        `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                         `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                        `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	GroupId      string                        `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	SenderRole   *handler.GroupRole            `protobuf:"varint,7,opt,name=SenderRole,proto3,enum=define.GroupRole,oneof" json:"SenderRole,omitempty"`
	BotRole      *handler.GroupRole            `protobuf:"varint,8,opt,name=BotRole,proto3,enum=define.GroupRole,oneof" json:"BotRole,omitempty"`
	MessageChain []*handler.MessageChainObject `protobuf:"bytes,9,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_CmdEvent_Message_Group) Reset() {
	*x = Response_CmdEvent_Message_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_Message_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_Message_Group) ProtoMessage() {}

func (x *Response_CmdEvent_Message_Group) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_Message_Group.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_Message_Group) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{21}
}

func (x *Response_CmdEvent_Message_Group) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_CmdEvent_Message_Group) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetSenderRole() handler.GroupRole {
	if x != nil && x.SenderRole != nil {
		return *x.SenderRole
	}
	return handler.GroupRole(0)
}

func (x *Response_CmdEvent_Message_Group) GetBotRole() handler.GroupRole {
	if x != nil && x.BotRole != nil {
		return *x.BotRole
	}
	return handler.GroupRole(0)
}

func (x *Response_CmdEvent_Message_Group) GetMessageChain() []*handler.MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_CmdEvent_GetFriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK      bool                                          `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode *string                                       `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	Friends []*Response_CmdEvent_GetFriendList_FriendInfo `protobuf:"bytes,3,rep,name=Friends,proto3" json:"Friends,omitempty"`
}

func (x *Response_CmdEvent_GetFriendList) Reset() {
	*x = Response_CmdEvent_GetFriendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetFriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetFriendList) ProtoMessage() {}

func (x *Response_CmdEvent_GetFriendList) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetFriendList.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetFriendList) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{22}
}

func (x *Response_CmdEvent_GetFriendList) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetFriendList) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendList) GetFriends() []*Response_CmdEvent_GetFriendList_FriendInfo {
	if x != nil {
		return x.Friends
	}
	return nil
}

type Response_BotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *handler.BotEventType          `protobuf:"varint,1,opt,name=Type,proto3,enum=define.BotEventType,oneof" json:"Type,omitempty"`
	HeartPacket *Response_BotEvent_HeartPacket `protobuf:"bytes,2,opt,name=HeartPacket,proto3,oneof" json:"HeartPacket,omitempty"`
	Connected   *Response_BotEvent_Connected   `protobuf:"bytes,3,opt,name=Connected,proto3,oneof" json:"Connected,omitempty"`
}

func (x *Response_BotEvent) Reset() {
	*x = Response_BotEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent) ProtoMessage() {}

func (x *Response_BotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent.ProtoReflect.Descriptor instead.
func (*Response_BotEvent) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{23}
}

func (x *Response_BotEvent) GetType() handler.BotEventType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.BotEventType(0)
}

func (x *Response_BotEvent) GetHeartPacket() *Response_BotEvent_HeartPacket {
	if x != nil {
		return x.HeartPacket
	}
	return nil
}

func (x *Response_BotEvent) GetConnected() *Response_BotEvent_Connected {
	if x != nil {
		return x.Connected
	}
	return nil
}

type Response_BotEvent_HeartPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64                                `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId     string                               `protobuf:"bytes,2,opt,name=BotId,proto3" json:"BotId,omitempty"`
	Interval  int64                                `protobuf:"varint,3,opt,name=Interval,proto3" json:"Interval,omitempty"` //每隔多久发送一次心跳包(ms)
	Status    *Response_BotEvent_HeartPacketStatus `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Response_BotEvent_HeartPacket) Reset() {
	*x = Response_BotEvent_HeartPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent_HeartPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent_HeartPacket) ProtoMessage() {}

func (x *Response_BotEvent_HeartPacket) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent_HeartPacket.ProtoReflect.Descriptor instead.
func (*Response_BotEvent_HeartPacket) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{24}
}

func (x *Response_BotEvent_HeartPacket) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_BotEvent_HeartPacket) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_BotEvent_HeartPacket) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Response_BotEvent_HeartPacket) GetStatus() *Response_BotEvent_HeartPacketStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type Response_BotEvent_Connected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId     string `protobuf:"bytes,2,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_BotEvent_Connected) Reset() {
	*x = Response_BotEvent_Connected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent_Connected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent_Connected) ProtoMessage() {}

func (x *Response_BotEvent_Connected) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent_Connected.ProtoReflect.Descriptor instead.
func (*Response_BotEvent_Connected) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{25}
}

func (x *Response_BotEvent_Connected) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_BotEvent_Connected) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type UnmarshalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buf          []byte                `protobuf:"bytes,1,opt,name=Buf,proto3" json:"Buf,omitempty"`
	Type         *handler.ResponseType `protobuf:"varint,2,opt,name=Type,proto3,enum=define.ResponseType,oneof" json:"Type,omitempty"`
	CmdEventType *handler.CmdEventType `protobuf:"varint,3,opt,name=CmdEventType,proto3,enum=define.CmdEventType,oneof" json:"CmdEventType,omitempty"` //ResponseType == CmdEvent need
	ExtraInfo    bool                  `protobuf:"varint,4,opt,name=ExtraInfo,proto3" json:"ExtraInfo,omitempty"`
}

func (x *UnmarshalRequest) Reset() {
	*x = UnmarshalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmarshalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmarshalRequest) ProtoMessage() {}

func (x *UnmarshalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmarshalRequest.ProtoReflect.Descriptor instead.
func (*UnmarshalRequest) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{26}
}

func (x *UnmarshalRequest) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *UnmarshalRequest) GetType() handler.ResponseType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.ResponseType(0)
}

func (x *UnmarshalRequest) GetCmdEventType() handler.CmdEventType {
	if x != nil && x.CmdEventType != nil {
		return *x.CmdEventType
	}
	return handler.CmdEventType(0)
}

func (x *UnmarshalRequest) GetExtraInfo() bool {
	if x != nil {
		return x.ExtraInfo
	}
	return false
}

type UnmarshalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *handler.ResponseType `protobuf:"varint,1,opt,name=Type,proto3,enum=define.ResponseType,oneof" json:"Type,omitempty"`
	Message  *Response_Message     `protobuf:"bytes,2,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
	QQEvent  *Response_QQEvent     `protobuf:"bytes,3,opt,name=QQEvent,proto3,oneof" json:"QQEvent,omitempty"`
	CmdEvent *Response_CmdEvent    `protobuf:"bytes,4,opt,name=CmdEvent,proto3,oneof" json:"CmdEvent,omitempty"`
	BotEvent *Response_BotEvent    `protobuf:"bytes,5,opt,name=BotEvent,proto3,oneof" json:"BotEvent,omitempty"`
}

func (x *UnmarshalResponse) Reset() {
	*x = UnmarshalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmarshalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmarshalResponse) ProtoMessage() {}

func (x *UnmarshalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmarshalResponse.ProtoReflect.Descriptor instead.
func (*UnmarshalResponse) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{27}
}

func (x *UnmarshalResponse) GetType() handler.ResponseType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return handler.ResponseType(0)
}

func (x *UnmarshalResponse) GetMessage() *Response_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *UnmarshalResponse) GetQQEvent() *Response_QQEvent {
	if x != nil {
		return x.QQEvent
	}
	return nil
}

func (x *UnmarshalResponse) GetCmdEvent() *Response_CmdEvent {
	if x != nil {
		return x.CmdEvent
	}
	return nil
}

func (x *UnmarshalResponse) GetBotEvent() *Response_BotEvent {
	if x != nil {
		return x.BotEvent
	}
	return nil
}

type Response_CmdEvent_GetFriendList_FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string  `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserId   string  `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Remark   *string `protobuf:"bytes,3,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) Reset() {
	*x = Response_CmdEvent_GetFriendList_FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetFriendList_FriendInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetFriendList_FriendInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetFriendList_FriendInfo) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{22, 0}
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type Response_BotEvent_HeartPacketStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online bool `protobuf:"varint,1,opt,name=Online,proto3" json:"Online,omitempty"`
	Good   bool `protobuf:"varint,2,opt,name=Good,proto3" json:"Good,omitempty"`
}

func (x *Response_BotEvent_HeartPacketStatus) Reset() {
	*x = Response_BotEvent_HeartPacketStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent_HeartPacketStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent_HeartPacketStatus) ProtoMessage() {}

func (x *Response_BotEvent_HeartPacketStatus) ProtoReflect() protoreflect.Message {
	mi := &file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent_HeartPacketStatus.ProtoReflect.Descriptor instead.
func (*Response_BotEvent_HeartPacketStatus) Descriptor() ([]byte, []int) {
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP(), []int{24, 0}
}

func (x *Response_BotEvent_HeartPacketStatus) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Response_BotEvent_HeartPacketStatus) GetGood() bool {
	if x != nil {
		return x.Good
	}
	return false
}

var File_handler_LLOneBot_protos_handler_response_response_proto protoreflect.FileDescriptor

var file_handler_LLOneBot_protos_handler_response_response_proto_rawDesc = []byte{
	0x0a, 0x37, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x4c, 0x4c, 0x4f, 0x6e, 0x65, 0x42,
	0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x2f, 0x4c, 0x4c, 0x4f, 0x6e, 0x65, 0x42, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcd, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x48, 0x01, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x02, 0x52, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xfc, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x99, 0x03, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x02, 0x52, 0x07, 0x42, 0x6f,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x42, 0x6f, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x22, 0xeb, 0x03, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x51,
	0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x48, 0x01, 0x52, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x48, 0x03, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x48, 0x04, 0x52, 0x0b,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a,
	0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x48, 0x05, 0x52, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x22, 0xf5, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x12, 0x39,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x06, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x48, 0x01, 0x52, 0x06,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x06, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x48, 0x02, 0x52, 0x06,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x20, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x20, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf9, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x06, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x06,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x04, 0x4b, 0x69, 0x63,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x48, 0x02, 0x52, 0x04, 0x4b,
	0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4b,
	0x69, 0x63, 0x6b, 0x22, 0xc3, 0x01, 0x0a, 0x23, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x51,
	0x75, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x51,
	0x75, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x51, 0x75, 0x69, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x51,
	0x75, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x51,
	0x75, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x21, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a,
	0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x1c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f,
	0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x3e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x51, 0x51,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x01, 0x52, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x48, 0x02, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22,
	0xbc, 0x02, 0x0a, 0x24, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f,
	0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd4,
	0x01, 0x0a, 0x26, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52,
	0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x03, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x63,
	0x68, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x48,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x02, 0x52, 0x12, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x04, 0x52, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x52,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x77, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa0, 0x03, 0x0a, 0x24, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x04, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x4a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x4c, 0x61, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x03, 0x52, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52, 0x0c,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x25, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x43, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x4c, 0x61, 0x73,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a,
	0x1c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a,
	0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xe8, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x07, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x48, 0x01, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b,
	0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48,
	0x02, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x85, 0x02, 0x0a, 0x21, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f,
	0x74, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0xa2, 0x03, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x42,
	0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48,
	0x02, 0x52, 0x07, 0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x07, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x1a, 0x68, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xf1, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0b,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x48, 0x01, 0x52, 0x0b, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x48, 0x02, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xe4, 0x01, 0x0a, 0x1d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3d, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x34, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x47, 0x6f,
	0x6f, 0x64, 0x22, 0x51, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42,
	0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x42, 0x6f, 0x74, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73,
	0x68, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x75,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x42, 0x75, 0x66, 0x12, 0x2d, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x0c, 0x43,
	0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x0c, 0x43, 0x6d, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x22, 0xcb, 0x02, 0x0a, 0x11, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x51, 0x51, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x02, 0x52,
	0x07, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x08, 0x43,
	0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x03, 0x52, 0x08, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x33, 0x0a, 0x08, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x04, 0x52, 0x08, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x51,
	0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x32, 0x45, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x09, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c,
	0x12, 0x11, 0x2e, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x61, 0x6e, 0x61, 0x63, 0x68, 0x69, 0x2d, 0x73, 0x68,
	0x2f, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x2f, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x4c, 0x4c, 0x4f, 0x6e, 0x65, 0x42, 0x6f, 0x74, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_handler_LLOneBot_protos_handler_response_response_proto_rawDescOnce sync.Once
	file_handler_LLOneBot_protos_handler_response_response_proto_rawDescData = file_handler_LLOneBot_protos_handler_response_response_proto_rawDesc
)

func file_handler_LLOneBot_protos_handler_response_response_proto_rawDescGZIP() []byte {
	file_handler_LLOneBot_protos_handler_response_response_proto_rawDescOnce.Do(func() {
		file_handler_LLOneBot_protos_handler_response_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_handler_LLOneBot_protos_handler_response_response_proto_rawDescData)
	})
	return file_handler_LLOneBot_protos_handler_response_response_proto_rawDescData
}

var file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_handler_LLOneBot_protos_handler_response_response_proto_goTypes = []any{
	(*Response_Message)(nil),                           // 0: Response_Message
	(*Response_Message_Private)(nil),                   // 1: Response_Message_Private
	(*Response_Message_Group)(nil),                     // 2: Response_Message_Group
	(*Response_QQEvent)(nil),                           // 3: Response_QQEvent
	(*Response_QQEvent_GroupAdd)(nil),                  // 4: Response_QQEvent_GroupAdd
	(*Response_QQEvent_GroupAdd_Direct)(nil),           // 5: Response_QQEvent_GroupAdd_Direct
	(*Response_QQEvent_GroupAdd_Invite)(nil),           // 6: Response_QQEvent_GroupAdd_Invite
	(*Response_QQEvent_GroupRemove)(nil),               // 7: Response_QQEvent_GroupRemove
	(*Response_QQEvent_GroupRemove_Manual)(nil),        // 8: Response_QQEvent_GroupRemove_Manual
	(*Response_QQEvent_GroupRemove_Kick)(nil),          // 9: Response_QQEvent_GroupRemove_Kick
	(*Response_QQEvent_GroupMute)(nil),                 // 10: Response_QQEvent_GroupMute
	(*Response_QQEvent_GroupUnmute)(nil),               // 11: Response_QQEvent_GroupUnmute
	(*Response_QQEvent_MessageRecall)(nil),             // 12: Response_QQEvent_MessageRecall
	(*Response_QQEvent_MessageRecall_Group)(nil),       // 13: Response_QQEvent_MessageRecall_Group
	(*Response_QQEvent_MessageRecall_Private)(nil),     // 14: Response_QQEvent_MessageRecall_Private
	(*Response_CmdEvent)(nil),                          // 15: Response_CmdEvent
	(*Response_CmdEvent_GetGroupInfo)(nil),             // 16: Response_CmdEvent_GetGroupInfo
	(*Response_CmdEvent_GetGroupMemberInfo)(nil),       // 17: Response_CmdEvent_GetGroupMemberInfo
	(*Response_CmdEvent_GetMessage)(nil),               // 18: Response_CmdEvent_GetMessage
	(*Response_CmdEvent_Message)(nil),                  // 19: Response_CmdEvent_Message
	(*Response_CmdEvent_Message_Private)(nil),          // 20: Response_CmdEvent_Message_Private
	(*Response_CmdEvent_Message_Group)(nil),            // 21: Response_CmdEvent_Message_Group
	(*Response_CmdEvent_GetFriendList)(nil),            // 22: Response_CmdEvent_GetFriendList
	(*Response_BotEvent)(nil),                          // 23: Response_BotEvent
	(*Response_BotEvent_HeartPacket)(nil),              // 24: Response_BotEvent_HeartPacket
	(*Response_BotEvent_Connected)(nil),                // 25: Response_BotEvent_Connected
	(*UnmarshalRequest)(nil),                           // 26: UnmarshalRequest
	(*UnmarshalResponse)(nil),                          // 27: UnmarshalResponse
	(*Response_CmdEvent_GetFriendList_FriendInfo)(nil), // 28: Response_CmdEvent_GetFriendList.FriendInfo
	(*Response_BotEvent_HeartPacketStatus)(nil),        // 29: Response_BotEvent_HeartPacket.status
	(handler.MessageType)(0),                           // 30: define.MessageType
	(*handler.MessageChainObject)(nil),                 // 31: define.MessageChainObject
	(handler.GroupRole)(0),                             // 32: define.GroupRole
	(handler.QQEventType)(0),                           // 33: define.QQEventType
	(handler.QQEventType_GroupAddType)(0),              // 34: define.QQEventType_GroupAddType
	(handler.QQEventType_GroupRemoveType)(0),           // 35: define.QQEventType_GroupRemoveType
	(handler.QQEventType_MessageRecallType)(0),         // 36: define.QQEventType_MessageRecallType
	(handler.CmdEventType)(0),                          // 37: define.CmdEventType
	(handler.BotEventType)(0),                          // 38: define.BotEventType
	(handler.ResponseType)(0),                          // 39: define.ResponseType
}
var file_handler_LLOneBot_protos_handler_response_response_proto_depIdxs = []int32{
	30, // 0: Response_Message.Type:type_name -> define.MessageType
	1,  // 1: Response_Message.Private:type_name -> Response_Message_Private
	2,  // 2: Response_Message.Group:type_name -> Response_Message_Group
	31, // 3: Response_Message_Private.MessageChain:type_name -> define.MessageChainObject
	32, // 4: Response_Message_Group.SenderRole:type_name -> define.GroupRole
	32, // 5: Response_Message_Group.BotRole:type_name -> define.GroupRole
	31, // 6: Response_Message_Group.MessageChain:type_name -> define.MessageChainObject
	33, // 7: Response_QQEvent.Type:type_name -> define.QQEventType
	4,  // 8: Response_QQEvent.GroupAdd:type_name -> Response_QQEvent_GroupAdd
	7,  // 9: Response_QQEvent.GroupRemove:type_name -> Response_QQEvent_GroupRemove
	10, // 10: Response_QQEvent.GroupMute:type_name -> Response_QQEvent_GroupMute
	11, // 11: Response_QQEvent.GroupUnmute:type_name -> Response_QQEvent_GroupUnmute
	12, // 12: Response_QQEvent.MessageRecall:type_name -> Response_QQEvent_MessageRecall
	34, // 13: Response_QQEvent_GroupAdd.Type:type_name -> define.QQEventType_GroupAddType
	5,  // 14: Response_QQEvent_GroupAdd.Direct:type_name -> Response_QQEvent_GroupAdd_Direct
	6,  // 15: Response_QQEvent_GroupAdd.Invite:type_name -> Response_QQEvent_GroupAdd_Invite
	35, // 16: Response_QQEvent_GroupRemove.Type:type_name -> define.QQEventType_GroupRemoveType
	8,  // 17: Response_QQEvent_GroupRemove.Manual:type_name -> Response_QQEvent_GroupRemove_Manual
	9,  // 18: Response_QQEvent_GroupRemove.Kick:type_name -> Response_QQEvent_GroupRemove_Kick
	36, // 19: Response_QQEvent_MessageRecall.Type:type_name -> define.QQEventType_MessageRecallType
	13, // 20: Response_QQEvent_MessageRecall.Group:type_name -> Response_QQEvent_MessageRecall_Group
	14, // 21: Response_QQEvent_MessageRecall.Private:type_name -> Response_QQEvent_MessageRecall_Private
	37, // 22: Response_CmdEvent.Type:type_name -> define.CmdEventType
	16, // 23: Response_CmdEvent.GetGroupInfo:type_name -> Response_CmdEvent_GetGroupInfo
	17, // 24: Response_CmdEvent.GetGroupMemberInfo:type_name -> Response_CmdEvent_GetGroupMemberInfo
	18, // 25: Response_CmdEvent.GetMessage:type_name -> Response_CmdEvent_GetMessage
	22, // 26: Response_CmdEvent.GetFriendList:type_name -> Response_CmdEvent_GetFriendList
	32, // 27: Response_CmdEvent_GetGroupMemberInfo.Role:type_name -> define.GroupRole
	19, // 28: Response_CmdEvent_GetMessage.Message:type_name -> Response_CmdEvent_Message
	30, // 29: Response_CmdEvent_Message.Type:type_name -> define.MessageType
	20, // 30: Response_CmdEvent_Message.Private:type_name -> Response_CmdEvent_Message_Private
	21, // 31: Response_CmdEvent_Message.Group:type_name -> Response_CmdEvent_Message_Group
	31, // 32: Response_CmdEvent_Message_Private.MessageChain:type_name -> define.MessageChainObject
	32, // 33: Response_CmdEvent_Message_Group.SenderRole:type_name -> define.GroupRole
	32, // 34: Response_CmdEvent_Message_Group.BotRole:type_name -> define.GroupRole
	31, // 35: Response_CmdEvent_Message_Group.MessageChain:type_name -> define.MessageChainObject
	28, // 36: Response_CmdEvent_GetFriendList.Friends:type_name -> Response_CmdEvent_GetFriendList.FriendInfo
	38, // 37: Response_BotEvent.Type:type_name -> define.BotEventType
	24, // 38: Response_BotEvent.HeartPacket:type_name -> Response_BotEvent_HeartPacket
	25, // 39: Response_BotEvent.Connected:type_name -> Response_BotEvent_Connected
	29, // 40: Response_BotEvent_HeartPacket.Status:type_name -> Response_BotEvent_HeartPacket.status
	39, // 41: UnmarshalRequest.Type:type_name -> define.ResponseType
	37, // 42: UnmarshalRequest.CmdEventType:type_name -> define.CmdEventType
	39, // 43: UnmarshalResponse.Type:type_name -> define.ResponseType
	0,  // 44: UnmarshalResponse.Message:type_name -> Response_Message
	3,  // 45: UnmarshalResponse.QQEvent:type_name -> Response_QQEvent
	15, // 46: UnmarshalResponse.CmdEvent:type_name -> Response_CmdEvent
	23, // 47: UnmarshalResponse.BotEvent:type_name -> Response_BotEvent
	26, // 48: ResponseHandler.Unmarshal:input_type -> UnmarshalRequest
	27, // 49: ResponseHandler.Unmarshal:output_type -> UnmarshalResponse
	49, // [49:50] is the sub-list for method output_type
	48, // [48:49] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_handler_LLOneBot_protos_handler_response_response_proto_init() }
func file_handler_LLOneBot_protos_handler_response_response_proto_init() {
	if File_handler_LLOneBot_protos_handler_response_response_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Response_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Response_Message_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Response_Message_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupAdd_Direct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupAdd_Invite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupRemove_Manual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupRemove_Kick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupMute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupUnmute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_MessageRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_MessageRecall_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_MessageRecall_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetGroupMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_Message_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_Message_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetFriendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent_HeartPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent_Connected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*UnmarshalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*UnmarshalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetFriendList_FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent_HeartPacketStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[0].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[1].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[2].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[3].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[4].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[5].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[6].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[7].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[8].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[9].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[10].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[11].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[12].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[13].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[14].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[15].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[16].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[17].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[18].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[19].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[20].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[21].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[22].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[23].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[26].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[27].OneofWrappers = []any{}
	file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes[28].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_handler_LLOneBot_protos_handler_response_response_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_handler_LLOneBot_protos_handler_response_response_proto_goTypes,
		DependencyIndexes: file_handler_LLOneBot_protos_handler_response_response_proto_depIdxs,
		MessageInfos:      file_handler_LLOneBot_protos_handler_response_response_proto_msgTypes,
	}.Build()
	File_handler_LLOneBot_protos_handler_response_response_proto = out.File
	file_handler_LLOneBot_protos_handler_response_response_proto_rawDesc = nil
	file_handler_LLOneBot_protos_handler_response_response_proto_goTypes = nil
	file_handler_LLOneBot_protos_handler_response_response_proto_depIdxs = nil
}
