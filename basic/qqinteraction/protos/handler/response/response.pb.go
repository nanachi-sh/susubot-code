// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.2
// source: basic/handler/protos/handler/response/response.proto

package response

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseType int32

const (
	ResponseType_ResponseType_Message  ResponseType = 0 //消息事件
	ResponseType_ResponseType_QQEvent  ResponseType = 1 //QQ事件
	ResponseType_ResponseType_CmdEvent ResponseType = 2 //命令响应
	ResponseType_ResponseType_BotEvent ResponseType = 3 //机器人事件
)

// Enum value maps for ResponseType.
var (
	ResponseType_name = map[int32]string{
		0: "ResponseType_Message",
		1: "ResponseType_QQEvent",
		2: "ResponseType_CmdEvent",
		3: "ResponseType_BotEvent",
	}
	ResponseType_value = map[string]int32{
		"ResponseType_Message":  0,
		"ResponseType_QQEvent":  1,
		"ResponseType_CmdEvent": 2,
		"ResponseType_BotEvent": 3,
	}
)

func (x ResponseType) Enum() *ResponseType {
	p := new(ResponseType)
	*p = x
	return p
}

func (x ResponseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResponseType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[0].Descriptor()
}

func (ResponseType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[0]
}

func (x ResponseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResponseType.Descriptor instead.
func (ResponseType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{0}
}

type MessageType int32

const (
	MessageType_MessageType_Private MessageType = 0 //私聊消息
	MessageType_MessageType_Group   MessageType = 1 //群组消息
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "MessageType_Private",
		1: "MessageType_Group",
	}
	MessageType_value = map[string]int32{
		"MessageType_Private": 0,
		"MessageType_Group":   1,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[1].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[1]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{1}
}

type MessageChainType int32

const (
	MessageChainType_MessageChainType_Text  MessageChainType = 0 //纯文本
	MessageChainType_MessageChainType_Image MessageChainType = 1 //图片 or 动图
	MessageChainType_MessageChainType_Voice MessageChainType = 2 //语音
	MessageChainType_MessageChainType_Video MessageChainType = 3 //视频
	MessageChainType_MessageChainType_At    MessageChainType = 4 //At
	MessageChainType_MessageChainType_Reply MessageChainType = 5 //回复
)

// Enum value maps for MessageChainType.
var (
	MessageChainType_name = map[int32]string{
		0: "MessageChainType_Text",
		1: "MessageChainType_Image",
		2: "MessageChainType_Voice",
		3: "MessageChainType_Video",
		4: "MessageChainType_At",
		5: "MessageChainType_Reply",
	}
	MessageChainType_value = map[string]int32{
		"MessageChainType_Text":  0,
		"MessageChainType_Image": 1,
		"MessageChainType_Voice": 2,
		"MessageChainType_Video": 3,
		"MessageChainType_At":    4,
		"MessageChainType_Reply": 5,
	}
)

func (x MessageChainType) Enum() *MessageChainType {
	p := new(MessageChainType)
	*p = x
	return p
}

func (x MessageChainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageChainType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[2].Descriptor()
}

func (MessageChainType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[2]
}

func (x MessageChainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageChainType.Descriptor instead.
func (MessageChainType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{2}
}

type QQEventType int32

const (
	QQEventType_QQEventType_GroupAdd      QQEventType = 0 //群聊成员增加
	QQEventType_QQEventType_GroupRemove   QQEventType = 1 //群聊成员减少
	QQEventType_QQEventType_GroupMute     QQEventType = 2 //群聊成员被禁言
	QQEventType_QQEventType_GroupUnmute   QQEventType = 3 //群聊成员被解除禁言
	QQEventType_QQEventType_MessageRecall QQEventType = 4 //消息撤回
)

// Enum value maps for QQEventType.
var (
	QQEventType_name = map[int32]string{
		0: "QQEventType_GroupAdd",
		1: "QQEventType_GroupRemove",
		2: "QQEventType_GroupMute",
		3: "QQEventType_GroupUnmute",
		4: "QQEventType_MessageRecall",
	}
	QQEventType_value = map[string]int32{
		"QQEventType_GroupAdd":      0,
		"QQEventType_GroupRemove":   1,
		"QQEventType_GroupMute":     2,
		"QQEventType_GroupUnmute":   3,
		"QQEventType_MessageRecall": 4,
	}
)

func (x QQEventType) Enum() *QQEventType {
	p := new(QQEventType)
	*p = x
	return p
}

func (x QQEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QQEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[3].Descriptor()
}

func (QQEventType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[3]
}

func (x QQEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QQEventType.Descriptor instead.
func (QQEventType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{3}
}

type QQEventType_GroupAddType int32

const (
	QQEventType_GroupAddType_QQEventType_GroupAddType_Direct QQEventType_GroupAddType = 0 //直接加入群聊
	QQEventType_GroupAddType_QQEventType_GroupAddType_Invite QQEventType_GroupAddType = 1 //群聊成员邀请加入
)

// Enum value maps for QQEventType_GroupAddType.
var (
	QQEventType_GroupAddType_name = map[int32]string{
		0: "QQEventType_GroupAddType_Direct",
		1: "QQEventType_GroupAddType_Invite",
	}
	QQEventType_GroupAddType_value = map[string]int32{
		"QQEventType_GroupAddType_Direct": 0,
		"QQEventType_GroupAddType_Invite": 1,
	}
)

func (x QQEventType_GroupAddType) Enum() *QQEventType_GroupAddType {
	p := new(QQEventType_GroupAddType)
	*p = x
	return p
}

func (x QQEventType_GroupAddType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QQEventType_GroupAddType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[4].Descriptor()
}

func (QQEventType_GroupAddType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[4]
}

func (x QQEventType_GroupAddType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QQEventType_GroupAddType.Descriptor instead.
func (QQEventType_GroupAddType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{4}
}

type QQEventType_GroupRemoveType int32

const (
	QQEventType_GroupRemoveType_QQEventType_GroupRemoveType_Manual QQEventType_GroupRemoveType = 0 //主动退出群聊
	QQEventType_GroupRemoveType_QQEventType_GroupRemoveType_Kick   QQEventType_GroupRemoveType = 1 //被踢出群聊
)

// Enum value maps for QQEventType_GroupRemoveType.
var (
	QQEventType_GroupRemoveType_name = map[int32]string{
		0: "QQEventType_GroupRemoveType_Manual",
		1: "QQEventType_GroupRemoveType_Kick",
	}
	QQEventType_GroupRemoveType_value = map[string]int32{
		"QQEventType_GroupRemoveType_Manual": 0,
		"QQEventType_GroupRemoveType_Kick":   1,
	}
)

func (x QQEventType_GroupRemoveType) Enum() *QQEventType_GroupRemoveType {
	p := new(QQEventType_GroupRemoveType)
	*p = x
	return p
}

func (x QQEventType_GroupRemoveType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QQEventType_GroupRemoveType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[5].Descriptor()
}

func (QQEventType_GroupRemoveType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[5]
}

func (x QQEventType_GroupRemoveType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QQEventType_GroupRemoveType.Descriptor instead.
func (QQEventType_GroupRemoveType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{5}
}

type QQEventType_MessageRecallType int32

const (
	QQEventType_MessageRecallType_QQEventType_MessageRecallType_Group   QQEventType_MessageRecallType = 0 //群聊消息撤回
	QQEventType_MessageRecallType_QQEventType_MessageRecallType_Private QQEventType_MessageRecallType = 1 //私聊消息撤回
)

// Enum value maps for QQEventType_MessageRecallType.
var (
	QQEventType_MessageRecallType_name = map[int32]string{
		0: "QQEventType_MessageRecallType_Group",
		1: "QQEventType_MessageRecallType_Private",
	}
	QQEventType_MessageRecallType_value = map[string]int32{
		"QQEventType_MessageRecallType_Group":   0,
		"QQEventType_MessageRecallType_Private": 1,
	}
)

func (x QQEventType_MessageRecallType) Enum() *QQEventType_MessageRecallType {
	p := new(QQEventType_MessageRecallType)
	*p = x
	return p
}

func (x QQEventType_MessageRecallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QQEventType_MessageRecallType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[6].Descriptor()
}

func (QQEventType_MessageRecallType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[6]
}

func (x QQEventType_MessageRecallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QQEventType_MessageRecallType.Descriptor instead.
func (QQEventType_MessageRecallType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{6}
}

type CmdEventType int32

const (
	CmdEventType_CmdEventType_GetGroupInfo       CmdEventType = 0 //获取指定群聊信息
	CmdEventType_CmdEventType_GetGroupMemberInfo CmdEventType = 1 //获取指定群聊指定成员信息
	CmdEventType_CmdEventType_GetMessage         CmdEventType = 2 //获取消息事件(通过MessageId)
	CmdEventType_CmdEventType_GetFriendList      CmdEventType = 3 //获取所有好友信息
	CmdEventType_CmdEventType_GetFriendInfo      CmdEventType = 4 //
)

// Enum value maps for CmdEventType.
var (
	CmdEventType_name = map[int32]string{
		0: "CmdEventType_GetGroupInfo",
		1: "CmdEventType_GetGroupMemberInfo",
		2: "CmdEventType_GetMessage",
		3: "CmdEventType_GetFriendList",
		4: "CmdEventType_GetFriendInfo",
	}
	CmdEventType_value = map[string]int32{
		"CmdEventType_GetGroupInfo":       0,
		"CmdEventType_GetGroupMemberInfo": 1,
		"CmdEventType_GetMessage":         2,
		"CmdEventType_GetFriendList":      3,
		"CmdEventType_GetFriendInfo":      4,
	}
)

func (x CmdEventType) Enum() *CmdEventType {
	p := new(CmdEventType)
	*p = x
	return p
}

func (x CmdEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CmdEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[7].Descriptor()
}

func (CmdEventType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[7]
}

func (x CmdEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CmdEventType.Descriptor instead.
func (CmdEventType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{7}
}

type BotEventType int32

const (
	BotEventType_BotEventType_HeartPacket BotEventType = 0
	BotEventType_BotEventType_Connected   BotEventType = 1
)

// Enum value maps for BotEventType.
var (
	BotEventType_name = map[int32]string{
		0: "BotEventType_HeartPacket",
		1: "BotEventType_Connected",
	}
	BotEventType_value = map[string]int32{
		"BotEventType_HeartPacket": 0,
		"BotEventType_Connected":   1,
	}
)

func (x BotEventType) Enum() *BotEventType {
	p := new(BotEventType)
	*p = x
	return p
}

func (x BotEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BotEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[8].Descriptor()
}

func (BotEventType) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[8]
}

func (x BotEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BotEventType.Descriptor instead.
func (BotEventType) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{8}
}

type GroupRole int32

const (
	GroupRole_GroupRole_Member GroupRole = 0 //普通成员
	GroupRole_GroupRole_Admin  GroupRole = 1 //管理员
	GroupRole_GroupRole_Owner  GroupRole = 2 //群主
)

// Enum value maps for GroupRole.
var (
	GroupRole_name = map[int32]string{
		0: "GroupRole_Member",
		1: "GroupRole_Admin",
		2: "GroupRole_Owner",
	}
	GroupRole_value = map[string]int32{
		"GroupRole_Member": 0,
		"GroupRole_Admin":  1,
		"GroupRole_Owner":  2,
	}
)

func (x GroupRole) Enum() *GroupRole {
	p := new(GroupRole)
	*p = x
	return p
}

func (x GroupRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GroupRole) Descriptor() protoreflect.EnumDescriptor {
	return file_basic_handler_protos_handler_response_response_proto_enumTypes[9].Descriptor()
}

func (GroupRole) Type() protoreflect.EnumType {
	return &file_basic_handler_protos_handler_response_response_proto_enumTypes[9]
}

func (x GroupRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GroupRole.Descriptor instead.
func (GroupRole) EnumDescriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{9}
}

type MessageChainObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  *MessageChainType   `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.MessageChainType,oneof" json:"Type,omitempty"`
	Text  *MessageChain_Text  `protobuf:"bytes,2,opt,name=Text,proto3,oneof" json:"Text,omitempty"`
	Image *MessageChain_Image `protobuf:"bytes,3,opt,name=Image,proto3,oneof" json:"Image,omitempty"`
	Voice *MessageChain_Voice `protobuf:"bytes,4,opt,name=Voice,proto3,oneof" json:"Voice,omitempty"`
	Video *MessageChain_Video `protobuf:"bytes,5,opt,name=Video,proto3,oneof" json:"Video,omitempty"`
	At    *MessageChain_At    `protobuf:"bytes,6,opt,name=At,proto3,oneof" json:"At,omitempty"`
	Reply *MessageChain_Reply `protobuf:"bytes,7,opt,name=Reply,proto3,oneof" json:"Reply,omitempty"`
}

func (x *MessageChainObject) Reset() {
	*x = MessageChainObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChainObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChainObject) ProtoMessage() {}

func (x *MessageChainObject) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChainObject.ProtoReflect.Descriptor instead.
func (*MessageChainObject) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{0}
}

func (x *MessageChainObject) GetType() MessageChainType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MessageChainType_MessageChainType_Text
}

func (x *MessageChainObject) GetText() *MessageChain_Text {
	if x != nil {
		return x.Text
	}
	return nil
}

func (x *MessageChainObject) GetImage() *MessageChain_Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *MessageChainObject) GetVoice() *MessageChain_Voice {
	if x != nil {
		return x.Voice
	}
	return nil
}

func (x *MessageChainObject) GetVideo() *MessageChain_Video {
	if x != nil {
		return x.Video
	}
	return nil
}

func (x *MessageChainObject) GetAt() *MessageChain_At {
	if x != nil {
		return x.At
	}
	return nil
}

func (x *MessageChainObject) GetReply() *MessageChain_Reply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type MessageChain_Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=Text,proto3" json:"Text,omitempty"`
}

func (x *MessageChain_Text) Reset() {
	*x = MessageChain_Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChain_Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChain_Text) ProtoMessage() {}

func (x *MessageChain_Text) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChain_Text.ProtoReflect.Descriptor instead.
func (*MessageChain_Text) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{1}
}

func (x *MessageChain_Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type MessageChain_Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *MessageChain_Image) Reset() {
	*x = MessageChain_Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChain_Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChain_Image) ProtoMessage() {}

func (x *MessageChain_Image) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChain_Image.ProtoReflect.Descriptor instead.
func (*MessageChain_Image) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{2}
}

func (x *MessageChain_Image) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type MessageChain_Voice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *MessageChain_Voice) Reset() {
	*x = MessageChain_Voice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChain_Voice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChain_Voice) ProtoMessage() {}

func (x *MessageChain_Voice) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChain_Voice.ProtoReflect.Descriptor instead.
func (*MessageChain_Voice) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{3}
}

func (x *MessageChain_Voice) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type MessageChain_Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *MessageChain_Video) Reset() {
	*x = MessageChain_Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChain_Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChain_Video) ProtoMessage() {}

func (x *MessageChain_Video) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChain_Video.ProtoReflect.Descriptor instead.
func (*MessageChain_Video) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{4}
}

func (x *MessageChain_Video) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type MessageChain_At struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId string `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
}

func (x *MessageChain_At) Reset() {
	*x = MessageChain_At{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChain_At) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChain_At) ProtoMessage() {}

func (x *MessageChain_At) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChain_At.ProtoReflect.Descriptor instead.
func (*MessageChain_At) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{5}
}

func (x *MessageChain_At) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type MessageChain_Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
}

func (x *MessageChain_Reply) Reset() {
	*x = MessageChain_Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageChain_Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageChain_Reply) ProtoMessage() {}

func (x *MessageChain_Reply) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageChain_Reply.ProtoReflect.Descriptor instead.
func (*MessageChain_Reply) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{6}
}

func (x *MessageChain_Reply) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type Response_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *MessageType              `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.MessageType,oneof" json:"Type,omitempty"`
	Private *Response_Message_Private `protobuf:"bytes,2,opt,name=Private,proto3,oneof" json:"Private,omitempty"`
	Group   *Response_Message_Group   `protobuf:"bytes,3,opt,name=Group,proto3,oneof" json:"Group,omitempty"`
}

func (x *Response_Message) Reset() {
	*x = Response_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message) ProtoMessage() {}

func (x *Response_Message) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message.ProtoReflect.Descriptor instead.
func (*Response_Message) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{7}
}

func (x *Response_Message) GetType() MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MessageType_MessageType_Private
}

func (x *Response_Message) GetPrivate() *Response_Message_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *Response_Message) GetGroup() *Response_Message_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type Response_Message_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string               `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                 `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	MessageChain []*MessageChainObject `protobuf:"bytes,6,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_Message_Private) Reset() {
	*x = Response_Message_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message_Private) ProtoMessage() {}

func (x *Response_Message_Private) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message_Private.ProtoReflect.Descriptor instead.
func (*Response_Message_Private) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{8}
}

func (x *Response_Message_Private) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_Message_Private) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_Message_Private) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_Message_Private) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_Message_Private) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_Message_Private) GetMessageChain() []*MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_Message_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string               `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                 `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	GroupId      string                `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	SenderRole   *GroupRole            `protobuf:"varint,7,opt,name=SenderRole,proto3,enum=susubot.basic.handler.response.GroupRole,oneof" json:"SenderRole,omitempty"`
	BotRole      *GroupRole            `protobuf:"varint,8,opt,name=BotRole,proto3,enum=susubot.basic.handler.response.GroupRole,oneof" json:"BotRole,omitempty"`
	MessageChain []*MessageChainObject `protobuf:"bytes,9,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_Message_Group) Reset() {
	*x = Response_Message_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_Message_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_Message_Group) ProtoMessage() {}

func (x *Response_Message_Group) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_Message_Group.ProtoReflect.Descriptor instead.
func (*Response_Message_Group) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{9}
}

func (x *Response_Message_Group) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_Message_Group) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_Message_Group) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_Message_Group) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_Message_Group) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_Message_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_Message_Group) GetSenderRole() GroupRole {
	if x != nil && x.SenderRole != nil {
		return *x.SenderRole
	}
	return GroupRole_GroupRole_Member
}

func (x *Response_Message_Group) GetBotRole() GroupRole {
	if x != nil && x.BotRole != nil {
		return *x.BotRole
	}
	return GroupRole_GroupRole_Member
}

func (x *Response_Message_Group) GetMessageChain() []*MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_QQEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          *QQEventType                    `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.QQEventType,oneof" json:"Type,omitempty"`
	GroupAdd      *Response_QQEvent_GroupAdd      `protobuf:"bytes,2,opt,name=GroupAdd,proto3,oneof" json:"GroupAdd,omitempty"`
	GroupRemove   *Response_QQEvent_GroupRemove   `protobuf:"bytes,3,opt,name=GroupRemove,proto3,oneof" json:"GroupRemove,omitempty"`
	GroupMute     *Response_QQEvent_GroupMute     `protobuf:"bytes,4,opt,name=GroupMute,proto3,oneof" json:"GroupMute,omitempty"`
	GroupUnmute   *Response_QQEvent_GroupUnmute   `protobuf:"bytes,5,opt,name=GroupUnmute,proto3,oneof" json:"GroupUnmute,omitempty"`
	MessageRecall *Response_QQEvent_MessageRecall `protobuf:"bytes,6,opt,name=MessageRecall,proto3,oneof" json:"MessageRecall,omitempty"`
}

func (x *Response_QQEvent) Reset() {
	*x = Response_QQEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent) ProtoMessage() {}

func (x *Response_QQEvent) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent.ProtoReflect.Descriptor instead.
func (*Response_QQEvent) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{10}
}

func (x *Response_QQEvent) GetType() QQEventType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return QQEventType_QQEventType_GroupAdd
}

func (x *Response_QQEvent) GetGroupAdd() *Response_QQEvent_GroupAdd {
	if x != nil {
		return x.GroupAdd
	}
	return nil
}

func (x *Response_QQEvent) GetGroupRemove() *Response_QQEvent_GroupRemove {
	if x != nil {
		return x.GroupRemove
	}
	return nil
}

func (x *Response_QQEvent) GetGroupMute() *Response_QQEvent_GroupMute {
	if x != nil {
		return x.GroupMute
	}
	return nil
}

func (x *Response_QQEvent) GetGroupUnmute() *Response_QQEvent_GroupUnmute {
	if x != nil {
		return x.GroupUnmute
	}
	return nil
}

func (x *Response_QQEvent) GetMessageRecall() *Response_QQEvent_MessageRecall {
	if x != nil {
		return x.MessageRecall
	}
	return nil
}

type Response_QQEvent_GroupAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *QQEventType_GroupAddType         `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.QQEventType_GroupAddType,oneof" json:"Type,omitempty"`
	Direct *Response_QQEvent_GroupAdd_Direct `protobuf:"bytes,2,opt,name=Direct,proto3,oneof" json:"Direct,omitempty"`
	Invite *Response_QQEvent_GroupAdd_Invite `protobuf:"bytes,3,opt,name=Invite,proto3,oneof" json:"Invite,omitempty"`
}

func (x *Response_QQEvent_GroupAdd) Reset() {
	*x = Response_QQEvent_GroupAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupAdd) ProtoMessage() {}

func (x *Response_QQEvent_GroupAdd) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupAdd.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupAdd) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{11}
}

func (x *Response_QQEvent_GroupAdd) GetType() QQEventType_GroupAddType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return QQEventType_GroupAddType_QQEventType_GroupAddType_Direct
}

func (x *Response_QQEvent_GroupAdd) GetDirect() *Response_QQEvent_GroupAdd_Direct {
	if x != nil {
		return x.Direct
	}
	return nil
}

func (x *Response_QQEvent_GroupAdd) GetInvite() *Response_QQEvent_GroupAdd_Invite {
	if x != nil {
		return x.Invite
	}
	return nil
}

type Response_QQEvent_GroupAdd_Direct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinerId     string  `protobuf:"bytes,1,opt,name=JoinerId,proto3" json:"JoinerId,omitempty"` //新加入成员Id
	JoinerName   *string `protobuf:"bytes,2,opt,name=JoinerName,proto3,oneof" json:"JoinerName,omitempty"`
	GroupId      string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp    int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
	ApproverId   string  `protobuf:"bytes,6,opt,name=ApproverId,proto3" json:"ApproverId,omitempty"`
	ApproverName *string `protobuf:"bytes,7,opt,name=ApproverName,proto3,oneof" json:"ApproverName,omitempty"`
}

func (x *Response_QQEvent_GroupAdd_Direct) Reset() {
	*x = Response_QQEvent_GroupAdd_Direct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupAdd_Direct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupAdd_Direct) ProtoMessage() {}

func (x *Response_QQEvent_GroupAdd_Direct) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupAdd_Direct.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupAdd_Direct) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{12}
}

func (x *Response_QQEvent_GroupAdd_Direct) GetJoinerId() string {
	if x != nil {
		return x.JoinerId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetJoinerName() string {
	if x != nil && x.JoinerName != nil {
		return *x.JoinerName
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupAdd_Direct) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Direct) GetApproverName() string {
	if x != nil && x.ApproverName != nil {
		return *x.ApproverName
	}
	return ""
}

type Response_QQEvent_GroupAdd_Invite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinerId     string  `protobuf:"bytes,1,opt,name=JoinerId,proto3" json:"JoinerId,omitempty"` //新加入成员Id
	JoinerName   *string `protobuf:"bytes,2,opt,name=JoinerName,proto3,oneof" json:"JoinerName,omitempty"`
	GroupId      string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp    int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
	InviterId    string  `protobuf:"bytes,6,opt,name=InviterId,proto3" json:"InviterId,omitempty"` //邀请者Id
	InviterName  *string `protobuf:"bytes,7,opt,name=InviterName,proto3,oneof" json:"InviterName,omitempty"`
	ApproverId   string  `protobuf:"bytes,8,opt,name=ApproverId,proto3" json:"ApproverId,omitempty"` //审核者Id
	ApproverName *string `protobuf:"bytes,9,opt,name=ApproverName,proto3,oneof" json:"ApproverName,omitempty"`
}

func (x *Response_QQEvent_GroupAdd_Invite) Reset() {
	*x = Response_QQEvent_GroupAdd_Invite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupAdd_Invite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupAdd_Invite) ProtoMessage() {}

func (x *Response_QQEvent_GroupAdd_Invite) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupAdd_Invite.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupAdd_Invite) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{13}
}

func (x *Response_QQEvent_GroupAdd_Invite) GetJoinerId() string {
	if x != nil {
		return x.JoinerId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetJoinerName() string {
	if x != nil && x.JoinerName != nil {
		return *x.JoinerName
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupAdd_Invite) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetInviterId() string {
	if x != nil {
		return x.InviterId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetInviterName() string {
	if x != nil && x.InviterName != nil {
		return *x.InviterName
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetApproverId() string {
	if x != nil {
		return x.ApproverId
	}
	return ""
}

func (x *Response_QQEvent_GroupAdd_Invite) GetApproverName() string {
	if x != nil && x.ApproverName != nil {
		return *x.ApproverName
	}
	return ""
}

type Response_QQEvent_GroupRemove struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   *QQEventType_GroupRemoveType         `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.QQEventType_GroupRemoveType,oneof" json:"Type,omitempty"`
	Manual *Response_QQEvent_GroupRemove_Manual `protobuf:"bytes,2,opt,name=Manual,proto3,oneof" json:"Manual,omitempty"`
	Kick   *Response_QQEvent_GroupRemove_Kick   `protobuf:"bytes,3,opt,name=Kick,proto3,oneof" json:"Kick,omitempty"`
}

func (x *Response_QQEvent_GroupRemove) Reset() {
	*x = Response_QQEvent_GroupRemove{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupRemove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupRemove) ProtoMessage() {}

func (x *Response_QQEvent_GroupRemove) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupRemove.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupRemove) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{14}
}

func (x *Response_QQEvent_GroupRemove) GetType() QQEventType_GroupRemoveType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return QQEventType_GroupRemoveType_QQEventType_GroupRemoveType_Manual
}

func (x *Response_QQEvent_GroupRemove) GetManual() *Response_QQEvent_GroupRemove_Manual {
	if x != nil {
		return x.Manual
	}
	return nil
}

func (x *Response_QQEvent_GroupRemove) GetKick() *Response_QQEvent_GroupRemove_Kick {
	if x != nil {
		return x.Kick
	}
	return nil
}

type Response_QQEvent_GroupRemove_Manual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuiterId   string  `protobuf:"bytes,1,opt,name=QuiterId,proto3" json:"QuiterId,omitempty"` //退出者Id
	QuiterName *string `protobuf:"bytes,2,opt,name=QuiterName,proto3,oneof" json:"QuiterName,omitempty"`
	GroupId    string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp  int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId      string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_QQEvent_GroupRemove_Manual) Reset() {
	*x = Response_QQEvent_GroupRemove_Manual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupRemove_Manual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupRemove_Manual) ProtoMessage() {}

func (x *Response_QQEvent_GroupRemove_Manual) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupRemove_Manual.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupRemove_Manual) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{15}
}

func (x *Response_QQEvent_GroupRemove_Manual) GetQuiterId() string {
	if x != nil {
		return x.QuiterId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Manual) GetQuiterName() string {
	if x != nil && x.QuiterName != nil {
		return *x.QuiterName
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Manual) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Manual) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupRemove_Manual) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type Response_QQEvent_GroupRemove_Kick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"` //被踢出者Id
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	GroupId      string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	Timestamp    int64   `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"`
	OperatorId   string  `protobuf:"bytes,6,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,7,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
}

func (x *Response_QQEvent_GroupRemove_Kick) Reset() {
	*x = Response_QQEvent_GroupRemove_Kick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupRemove_Kick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupRemove_Kick) ProtoMessage() {}

func (x *Response_QQEvent_GroupRemove_Kick) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupRemove_Kick.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupRemove_Kick) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{16}
}

func (x *Response_QQEvent_GroupRemove_Kick) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupRemove_Kick) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_GroupRemove_Kick) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

type Response_QQEvent_GroupMute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	OperatorId   string  `protobuf:"bytes,4,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,5,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
	Duration     int32   `protobuf:"varint,6,opt,name=Duration,proto3" json:"Duration,omitempty"`
	GroupId      string  `protobuf:"bytes,7,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BotId        string  `protobuf:"bytes,8,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_QQEvent_GroupMute) Reset() {
	*x = Response_QQEvent_GroupMute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupMute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupMute) ProtoMessage() {}

func (x *Response_QQEvent_GroupMute) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupMute.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupMute) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{17}
}

func (x *Response_QQEvent_GroupMute) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupMute) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Response_QQEvent_GroupMute) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupMute) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type Response_QQEvent_GroupUnmute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	OperatorId   string  `protobuf:"bytes,4,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,5,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
	GroupId      string  `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BotId        string  `protobuf:"bytes,7,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_QQEvent_GroupUnmute) Reset() {
	*x = Response_QQEvent_GroupUnmute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_GroupUnmute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_GroupUnmute) ProtoMessage() {}

func (x *Response_QQEvent_GroupUnmute) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_GroupUnmute.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_GroupUnmute) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{18}
}

func (x *Response_QQEvent_GroupUnmute) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_GroupUnmute) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_GroupUnmute) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type Response_QQEvent_MessageRecall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *QQEventType_MessageRecallType          `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.QQEventType_MessageRecallType,oneof" json:"Type,omitempty"`
	Group   *Response_QQEvent_MessageRecall_Group   `protobuf:"bytes,2,opt,name=Group,proto3,oneof" json:"Group,omitempty"`
	Private *Response_QQEvent_MessageRecall_Private `protobuf:"bytes,3,opt,name=Private,proto3,oneof" json:"Private,omitempty"`
}

func (x *Response_QQEvent_MessageRecall) Reset() {
	*x = Response_QQEvent_MessageRecall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_MessageRecall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_MessageRecall) ProtoMessage() {}

func (x *Response_QQEvent_MessageRecall) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_MessageRecall.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_MessageRecall) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{19}
}

func (x *Response_QQEvent_MessageRecall) GetType() QQEventType_MessageRecallType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return QQEventType_MessageRecallType_QQEventType_MessageRecallType_Group
}

func (x *Response_QQEvent_MessageRecall) GetGroup() *Response_QQEvent_MessageRecall_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Response_QQEvent_MessageRecall) GetPrivate() *Response_QQEvent_MessageRecall_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

type Response_QQEvent_MessageRecall_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetId     string  `protobuf:"bytes,1,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
	TargetName   *string `protobuf:"bytes,2,opt,name=TargetName,proto3,oneof" json:"TargetName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	OperatorId   string  `protobuf:"bytes,4,opt,name=OperatorId,proto3" json:"OperatorId,omitempty"`
	OperatorName *string `protobuf:"bytes,5,opt,name=OperatorName,proto3,oneof" json:"OperatorName,omitempty"`
	GroupId      string  `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	BotId        string  `protobuf:"bytes,7,opt,name=BotId,proto3" json:"BotId,omitempty"`
	MessageId    string  `protobuf:"bytes,8,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
}

func (x *Response_QQEvent_MessageRecall_Group) Reset() {
	*x = Response_QQEvent_MessageRecall_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_MessageRecall_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_MessageRecall_Group) ProtoMessage() {}

func (x *Response_QQEvent_MessageRecall_Group) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_MessageRecall_Group.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_MessageRecall_Group) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{20}
}

func (x *Response_QQEvent_MessageRecall_Group) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetTargetName() string {
	if x != nil && x.TargetName != nil {
		return *x.TargetName
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_MessageRecall_Group) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetOperatorName() string {
	if x != nil && x.OperatorName != nil {
		return *x.OperatorName
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Group) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type Response_QQEvent_MessageRecall_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecallerId   string  `protobuf:"bytes,1,opt,name=RecallerId,proto3" json:"RecallerId,omitempty"`
	RecallerName *string `protobuf:"bytes,2,opt,name=RecallerName,proto3,oneof" json:"RecallerName,omitempty"`
	Timestamp    int64   `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string  `protobuf:"bytes,4,opt,name=BotId,proto3" json:"BotId,omitempty"`
	MessageId    string  `protobuf:"bytes,5,opt,name=MessageId,proto3" json:"MessageId,omitempty"`
}

func (x *Response_QQEvent_MessageRecall_Private) Reset() {
	*x = Response_QQEvent_MessageRecall_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_QQEvent_MessageRecall_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_QQEvent_MessageRecall_Private) ProtoMessage() {}

func (x *Response_QQEvent_MessageRecall_Private) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_QQEvent_MessageRecall_Private.ProtoReflect.Descriptor instead.
func (*Response_QQEvent_MessageRecall_Private) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{21}
}

func (x *Response_QQEvent_MessageRecall_Private) GetRecallerId() string {
	if x != nil {
		return x.RecallerId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Private) GetRecallerName() string {
	if x != nil && x.RecallerName != nil {
		return *x.RecallerName
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Private) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_QQEvent_MessageRecall_Private) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_QQEvent_MessageRecall_Private) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

type Response_CmdEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               *CmdEventType                         `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.CmdEventType,oneof" json:"Type,omitempty"`
	Echo               string                                `protobuf:"bytes,2,opt,name=Echo,proto3" json:"Echo,omitempty"`
	GetGroupInfo       *Response_CmdEvent_GetGroupInfo       `protobuf:"bytes,3,opt,name=GetGroupInfo,proto3,oneof" json:"GetGroupInfo,omitempty"`
	GetGroupMemberInfo *Response_CmdEvent_GetGroupMemberInfo `protobuf:"bytes,4,opt,name=GetGroupMemberInfo,proto3,oneof" json:"GetGroupMemberInfo,omitempty"`
	GetMessage         *Response_CmdEvent_GetMessage         `protobuf:"bytes,5,opt,name=GetMessage,proto3,oneof" json:"GetMessage,omitempty"`
	GetFriendList      *Response_CmdEvent_GetFriendList      `protobuf:"bytes,6,opt,name=GetFriendList,proto3,oneof" json:"GetFriendList,omitempty"`
	GetFriendInfo      *Response_CmdEvent_GetFriendInfo      `protobuf:"bytes,7,opt,name=GetFriendInfo,proto3,oneof" json:"GetFriendInfo,omitempty"`
}

func (x *Response_CmdEvent) Reset() {
	*x = Response_CmdEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent) ProtoMessage() {}

func (x *Response_CmdEvent) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{22}
}

func (x *Response_CmdEvent) GetType() CmdEventType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return CmdEventType_CmdEventType_GetGroupInfo
}

func (x *Response_CmdEvent) GetEcho() string {
	if x != nil {
		return x.Echo
	}
	return ""
}

func (x *Response_CmdEvent) GetGetGroupInfo() *Response_CmdEvent_GetGroupInfo {
	if x != nil {
		return x.GetGroupInfo
	}
	return nil
}

func (x *Response_CmdEvent) GetGetGroupMemberInfo() *Response_CmdEvent_GetGroupMemberInfo {
	if x != nil {
		return x.GetGroupMemberInfo
	}
	return nil
}

func (x *Response_CmdEvent) GetGetMessage() *Response_CmdEvent_GetMessage {
	if x != nil {
		return x.GetMessage
	}
	return nil
}

func (x *Response_CmdEvent) GetGetFriendList() *Response_CmdEvent_GetFriendList {
	if x != nil {
		return x.GetFriendList
	}
	return nil
}

func (x *Response_CmdEvent) GetGetFriendInfo() *Response_CmdEvent_GetFriendInfo {
	if x != nil {
		return x.GetFriendInfo
	}
	return nil
}

type Response_CmdEvent_GetGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK        bool    `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode   *string `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	GroupId   string  `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	GroupName string  `protobuf:"bytes,4,opt,name=GroupName,proto3" json:"GroupName,omitempty"`
	MemberMax int32   `protobuf:"varint,5,opt,name=MemberMax,proto3" json:"MemberMax,omitempty"`
	MemberNow int32   `protobuf:"varint,6,opt,name=MemberNow,proto3" json:"MemberNow,omitempty"`
}

func (x *Response_CmdEvent_GetGroupInfo) Reset() {
	*x = Response_CmdEvent_GetGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetGroupInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetGroupInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetGroupInfo) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{23}
}

func (x *Response_CmdEvent_GetGroupInfo) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetGroupInfo) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupInfo) GetMemberMax() int32 {
	if x != nil {
		return x.MemberMax
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupInfo) GetMemberNow() int32 {
	if x != nil {
		return x.MemberNow
	}
	return 0
}

type Response_CmdEvent_GetGroupMemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK             bool      `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode        *string   `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	GroupId        string    `protobuf:"bytes,3,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	UserId         string    `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserName       string    `protobuf:"bytes,5,opt,name=UserName,proto3" json:"UserName,omitempty"`
	Card           *string   `protobuf:"bytes,6,opt,name=Card,proto3,oneof" json:"Card,omitempty"` //群内自定义名称
	JoinTime       *int64    `protobuf:"varint,7,opt,name=JoinTime,proto3,oneof" json:"JoinTime,omitempty"`
	LastActiveTime *int64    `protobuf:"varint,8,opt,name=LastActiveTime,proto3,oneof" json:"LastActiveTime,omitempty"` //上次操作时间
	LastSentTime   *int64    `protobuf:"varint,9,opt,name=LastSentTime,proto3,oneof" json:"LastSentTime,omitempty"`     //上次发送信息时间
	Role           GroupRole `protobuf:"varint,10,opt,name=Role,proto3,enum=susubot.basic.handler.response.GroupRole" json:"Role,omitempty"`
}

func (x *Response_CmdEvent_GetGroupMemberInfo) Reset() {
	*x = Response_CmdEvent_GetGroupMemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetGroupMemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetGroupMemberInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetGroupMemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetGroupMemberInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetGroupMemberInfo) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{24}
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetCard() string {
	if x != nil && x.Card != nil {
		return *x.Card
	}
	return ""
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetJoinTime() int64 {
	if x != nil && x.JoinTime != nil {
		return *x.JoinTime
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetLastActiveTime() int64 {
	if x != nil && x.LastActiveTime != nil {
		return *x.LastActiveTime
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetLastSentTime() int64 {
	if x != nil && x.LastSentTime != nil {
		return *x.LastSentTime
	}
	return 0
}

func (x *Response_CmdEvent_GetGroupMemberInfo) GetRole() GroupRole {
	if x != nil {
		return x.Role
	}
	return GroupRole_GroupRole_Member
}

type Response_CmdEvent_GetMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK      bool                       `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode *string                    `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	Message *Response_CmdEvent_Message `protobuf:"bytes,3,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
}

func (x *Response_CmdEvent_GetMessage) Reset() {
	*x = Response_CmdEvent_GetMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetMessage) ProtoMessage() {}

func (x *Response_CmdEvent_GetMessage) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetMessage.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetMessage) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{25}
}

func (x *Response_CmdEvent_GetMessage) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetMessage) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetMessage) GetMessage() *Response_CmdEvent_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type Response_CmdEvent_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *MessageType                       `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.MessageType,oneof" json:"Type,omitempty"`
	Private *Response_CmdEvent_Message_Private `protobuf:"bytes,2,opt,name=Private,proto3,oneof" json:"Private,omitempty"`
	Group   *Response_CmdEvent_Message_Group   `protobuf:"bytes,3,opt,name=Group,proto3,oneof" json:"Group,omitempty"`
}

func (x *Response_CmdEvent_Message) Reset() {
	*x = Response_CmdEvent_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_Message) ProtoMessage() {}

func (x *Response_CmdEvent_Message) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_Message.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_Message) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{26}
}

func (x *Response_CmdEvent_Message) GetType() MessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MessageType_MessageType_Private
}

func (x *Response_CmdEvent_Message) GetPrivate() *Response_CmdEvent_Message_Private {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *Response_CmdEvent_Message) GetGroup() *Response_CmdEvent_Message_Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type Response_CmdEvent_Message_Private struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string               `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                 `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	MessageChain []*MessageChainObject `protobuf:"bytes,6,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_CmdEvent_Message_Private) Reset() {
	*x = Response_CmdEvent_Message_Private{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_Message_Private) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_Message_Private) ProtoMessage() {}

func (x *Response_CmdEvent_Message_Private) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_Message_Private.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_Message_Private) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{27}
}

func (x *Response_CmdEvent_Message_Private) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_CmdEvent_Message_Private) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Private) GetMessageChain() []*MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_CmdEvent_Message_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId     string                `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SenderName   *string               `protobuf:"bytes,2,opt,name=SenderName,proto3,oneof" json:"SenderName,omitempty"`
	MessageId    string                `protobuf:"bytes,3,opt,name=MessageId,proto3" json:"MessageId,omitempty"` //机器人核心内Id
	Timestamp    int64                 `protobuf:"varint,4,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId        string                `protobuf:"bytes,5,opt,name=BotId,proto3" json:"BotId,omitempty"` //机器人QQ号
	GroupId      string                `protobuf:"bytes,6,opt,name=GroupId,proto3" json:"GroupId,omitempty"`
	SenderRole   *GroupRole            `protobuf:"varint,7,opt,name=SenderRole,proto3,enum=susubot.basic.handler.response.GroupRole,oneof" json:"SenderRole,omitempty"`
	BotRole      *GroupRole            `protobuf:"varint,8,opt,name=BotRole,proto3,enum=susubot.basic.handler.response.GroupRole,oneof" json:"BotRole,omitempty"`
	MessageChain []*MessageChainObject `protobuf:"bytes,9,rep,name=MessageChain,proto3" json:"MessageChain,omitempty"`
}

func (x *Response_CmdEvent_Message_Group) Reset() {
	*x = Response_CmdEvent_Message_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_Message_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_Message_Group) ProtoMessage() {}

func (x *Response_CmdEvent_Message_Group) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_Message_Group.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_Message_Group) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{28}
}

func (x *Response_CmdEvent_Message_Group) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetSenderName() string {
	if x != nil && x.SenderName != nil {
		return *x.SenderName
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_CmdEvent_Message_Group) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *Response_CmdEvent_Message_Group) GetSenderRole() GroupRole {
	if x != nil && x.SenderRole != nil {
		return *x.SenderRole
	}
	return GroupRole_GroupRole_Member
}

func (x *Response_CmdEvent_Message_Group) GetBotRole() GroupRole {
	if x != nil && x.BotRole != nil {
		return *x.BotRole
	}
	return GroupRole_GroupRole_Member
}

func (x *Response_CmdEvent_Message_Group) GetMessageChain() []*MessageChainObject {
	if x != nil {
		return x.MessageChain
	}
	return nil
}

type Response_CmdEvent_GetFriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK      bool                                          `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode *string                                       `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	Friends []*Response_CmdEvent_GetFriendList_FriendInfo `protobuf:"bytes,3,rep,name=Friends,proto3" json:"Friends,omitempty"`
}

func (x *Response_CmdEvent_GetFriendList) Reset() {
	*x = Response_CmdEvent_GetFriendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetFriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetFriendList) ProtoMessage() {}

func (x *Response_CmdEvent_GetFriendList) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetFriendList.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetFriendList) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{29}
}

func (x *Response_CmdEvent_GetFriendList) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetFriendList) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendList) GetFriends() []*Response_CmdEvent_GetFriendList_FriendInfo {
	if x != nil {
		return x.Friends
	}
	return nil
}

type Response_CmdEvent_GetFriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK       bool    `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Retcode  *string `protobuf:"bytes,2,opt,name=Retcode,proto3,oneof" json:"Retcode,omitempty"`
	UserName string  `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserId   string  `protobuf:"bytes,4,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Remark   *string `protobuf:"bytes,5,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *Response_CmdEvent_GetFriendInfo) Reset() {
	*x = Response_CmdEvent_GetFriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetFriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetFriendInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetFriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetFriendInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetFriendInfo) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{30}
}

func (x *Response_CmdEvent_GetFriendInfo) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *Response_CmdEvent_GetFriendInfo) GetRetcode() string {
	if x != nil && x.Retcode != nil {
		return *x.Retcode
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendInfo) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type Response_BotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *BotEventType                  `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.BotEventType,oneof" json:"Type,omitempty"`
	HeartPacket *Response_BotEvent_HeartPacket `protobuf:"bytes,2,opt,name=HeartPacket,proto3,oneof" json:"HeartPacket,omitempty"`
	Connected   *Response_BotEvent_Connected   `protobuf:"bytes,3,opt,name=Connected,proto3,oneof" json:"Connected,omitempty"`
}

func (x *Response_BotEvent) Reset() {
	*x = Response_BotEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent) ProtoMessage() {}

func (x *Response_BotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent.ProtoReflect.Descriptor instead.
func (*Response_BotEvent) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{31}
}

func (x *Response_BotEvent) GetType() BotEventType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return BotEventType_BotEventType_HeartPacket
}

func (x *Response_BotEvent) GetHeartPacket() *Response_BotEvent_HeartPacket {
	if x != nil {
		return x.HeartPacket
	}
	return nil
}

func (x *Response_BotEvent) GetConnected() *Response_BotEvent_Connected {
	if x != nil {
		return x.Connected
	}
	return nil
}

type Response_BotEvent_HeartPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64                                `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId     string                               `protobuf:"bytes,2,opt,name=BotId,proto3" json:"BotId,omitempty"`
	Interval  int64                                `protobuf:"varint,3,opt,name=Interval,proto3" json:"Interval,omitempty"` //每隔多久发送一次心跳包(ms)
	Status    *Response_BotEvent_HeartPacketStatus `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *Response_BotEvent_HeartPacket) Reset() {
	*x = Response_BotEvent_HeartPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent_HeartPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent_HeartPacket) ProtoMessage() {}

func (x *Response_BotEvent_HeartPacket) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent_HeartPacket.ProtoReflect.Descriptor instead.
func (*Response_BotEvent_HeartPacket) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{32}
}

func (x *Response_BotEvent_HeartPacket) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_BotEvent_HeartPacket) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

func (x *Response_BotEvent_HeartPacket) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *Response_BotEvent_HeartPacket) GetStatus() *Response_BotEvent_HeartPacketStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type Response_BotEvent_Connected struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	BotId     string `protobuf:"bytes,2,opt,name=BotId,proto3" json:"BotId,omitempty"`
}

func (x *Response_BotEvent_Connected) Reset() {
	*x = Response_BotEvent_Connected{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent_Connected) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent_Connected) ProtoMessage() {}

func (x *Response_BotEvent_Connected) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent_Connected.ProtoReflect.Descriptor instead.
func (*Response_BotEvent_Connected) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{33}
}

func (x *Response_BotEvent_Connected) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Response_BotEvent_Connected) GetBotId() string {
	if x != nil {
		return x.BotId
	}
	return ""
}

type UnmarshalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buf            []byte        `protobuf:"bytes,1,opt,name=Buf,proto3" json:"Buf,omitempty"`
	Type           *ResponseType `protobuf:"varint,2,opt,name=Type,proto3,enum=susubot.basic.handler.response.ResponseType,oneof" json:"Type,omitempty"`
	CmdEventType   *CmdEventType `protobuf:"varint,3,opt,name=CmdEventType,proto3,enum=susubot.basic.handler.response.CmdEventType,oneof" json:"CmdEventType,omitempty"` //ResponseType == CmdEvent need
	ExtraInfo      bool          `protobuf:"varint,4,opt,name=ExtraInfo,proto3" json:"ExtraInfo,omitempty"`
	IgnoreCmdEvent bool          `protobuf:"varint,5,opt,name=IgnoreCmdEvent,proto3" json:"IgnoreCmdEvent,omitempty"`
}

func (x *UnmarshalRequest) Reset() {
	*x = UnmarshalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmarshalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmarshalRequest) ProtoMessage() {}

func (x *UnmarshalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmarshalRequest.ProtoReflect.Descriptor instead.
func (*UnmarshalRequest) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{34}
}

func (x *UnmarshalRequest) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *UnmarshalRequest) GetType() ResponseType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ResponseType_ResponseType_Message
}

func (x *UnmarshalRequest) GetCmdEventType() CmdEventType {
	if x != nil && x.CmdEventType != nil {
		return *x.CmdEventType
	}
	return CmdEventType_CmdEventType_GetGroupInfo
}

func (x *UnmarshalRequest) GetExtraInfo() bool {
	if x != nil {
		return x.ExtraInfo
	}
	return false
}

func (x *UnmarshalRequest) GetIgnoreCmdEvent() bool {
	if x != nil {
		return x.IgnoreCmdEvent
	}
	return false
}

type UnmarshalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     *ResponseType      `protobuf:"varint,1,opt,name=Type,proto3,enum=susubot.basic.handler.response.ResponseType,oneof" json:"Type,omitempty"`
	Message  *Response_Message  `protobuf:"bytes,2,opt,name=Message,proto3,oneof" json:"Message,omitempty"`
	QQEvent  *Response_QQEvent  `protobuf:"bytes,3,opt,name=QQEvent,proto3,oneof" json:"QQEvent,omitempty"`
	CmdEvent *Response_CmdEvent `protobuf:"bytes,4,opt,name=CmdEvent,proto3,oneof" json:"CmdEvent,omitempty"`
	BotEvent *Response_BotEvent `protobuf:"bytes,5,opt,name=BotEvent,proto3,oneof" json:"BotEvent,omitempty"`
}

func (x *UnmarshalResponse) Reset() {
	*x = UnmarshalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnmarshalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmarshalResponse) ProtoMessage() {}

func (x *UnmarshalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmarshalResponse.ProtoReflect.Descriptor instead.
func (*UnmarshalResponse) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{35}
}

func (x *UnmarshalResponse) GetType() ResponseType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ResponseType_ResponseType_Message
}

func (x *UnmarshalResponse) GetMessage() *Response_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *UnmarshalResponse) GetQQEvent() *Response_QQEvent {
	if x != nil {
		return x.QQEvent
	}
	return nil
}

func (x *UnmarshalResponse) GetCmdEvent() *Response_CmdEvent {
	if x != nil {
		return x.CmdEvent
	}
	return nil
}

func (x *UnmarshalResponse) GetBotEvent() *Response_BotEvent {
	if x != nil {
		return x.BotEvent
	}
	return nil
}

type Response_CmdEvent_GetFriendList_FriendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string  `protobuf:"bytes,1,opt,name=UserName,proto3" json:"UserName,omitempty"`
	UserId   string  `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Remark   *string `protobuf:"bytes,3,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) Reset() {
	*x = Response_CmdEvent_GetFriendList_FriendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_CmdEvent_GetFriendList_FriendInfo) ProtoMessage() {}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_CmdEvent_GetFriendList_FriendInfo.ProtoReflect.Descriptor instead.
func (*Response_CmdEvent_GetFriendList_FriendInfo) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{29, 0}
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Response_CmdEvent_GetFriendList_FriendInfo) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type Response_BotEvent_HeartPacketStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Online bool `protobuf:"varint,1,opt,name=Online,proto3" json:"Online,omitempty"`
	Good   bool `protobuf:"varint,2,opt,name=Good,proto3" json:"Good,omitempty"`
}

func (x *Response_BotEvent_HeartPacketStatus) Reset() {
	*x = Response_BotEvent_HeartPacketStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response_BotEvent_HeartPacketStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response_BotEvent_HeartPacketStatus) ProtoMessage() {}

func (x *Response_BotEvent_HeartPacketStatus) ProtoReflect() protoreflect.Message {
	mi := &file_basic_handler_protos_handler_response_response_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response_BotEvent_HeartPacketStatus.ProtoReflect.Descriptor instead.
func (*Response_BotEvent_HeartPacketStatus) Descriptor() ([]byte, []int) {
	return file_basic_handler_protos_handler_response_response_proto_rawDescGZIP(), []int{32, 0}
}

func (x *Response_BotEvent_HeartPacketStatus) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *Response_BotEvent_HeartPacketStatus) GetGood() bool {
	if x != nil {
		return x.Good
	}
	return false
}

var File_basic_handler_protos_handler_response_response_proto protoreflect.FileDescriptor

var file_basic_handler_protos_handler_response_response_proto_rawDesc = []byte{
	0x0a, 0x34, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xee, 0x04, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x49, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x48, 0x01, 0x52, 0x04, 0x54, 0x65, 0x78,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x02, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x03, 0x52, 0x05, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x04, 0x52, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x88, 0x01,
	0x01, 0x12, 0x44, 0x0a, 0x02, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x41, 0x74, 0x48, 0x05,
	0x52, 0x02, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x05, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x06, 0x52, 0x05, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x41, 0x74, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65, 0x78, 0x74,
	0x22, 0x26, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x26, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x22, 0x26, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x2d, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x12, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xa3, 0x02, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x44, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x48, 0x01, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x51, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x02, 0x52, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x22, 0x94, 0x02, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x56, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe1, 0x03, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48,
	0x01, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x48, 0x0a, 0x07, 0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x02, 0x52, 0x07,
	0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x0c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x9e, 0x05, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x44, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x2b, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x41, 0x64, 0x64, 0x48, 0x01, 0x52, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x63, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5d, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x75, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x48, 0x03, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x63, 0x0a, 0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x73,
	0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x48, 0x04, 0x52, 0x0b, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x69, 0x0a, 0x0d,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x48, 0x05, 0x52, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x22, 0xcb, 0x02,
	0x0a, 0x19, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x12, 0x51, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51, 0x51, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5d,
	0x0a, 0x06, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x48, 0x01, 0x52, 0x06, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x88, 0x01, 0x01, 0x12, 0x5d, 0x0a,
	0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x48,
	0x02, 0x52, 0x06, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0x9a, 0x02, 0x0a, 0x20,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xef, 0x02, 0x0a, 0x20, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0b, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xcf, 0x02, 0x0a, 0x1c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x54, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3b, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51, 0x51, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x60, 0x0a, 0x06, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x43, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x48, 0x01, 0x52, 0x06, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x04, 0x4b, 0x69, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x41, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x4b, 0x69, 0x63, 0x6b, 0x48, 0x02, 0x52, 0x04, 0x4b, 0x69, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x22, 0xc3, 0x01, 0x0a,
	0x23, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x51, 0x75, 0x69, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0a, 0x51, 0x75, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x51, 0x75, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f,
	0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x51, 0x75, 0x69, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x9b, 0x02, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xb0, 0x02, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e,
	0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27,
	0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f,
	0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x96, 0x02, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x02, 0x0a,
	0x1e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x12,
	0x56, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x51,
	0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5f, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x01, 0x52, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x65, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x46, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x48, 0x02, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0xbc,
	0x02, 0x0a, 0x24, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c,
	0x6c, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0c,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d,
	0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd4, 0x01,
	0x0a, 0x26, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x61,
	0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0c, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf1, 0x05, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x12, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x67, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0c, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x79,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x75, 0x73,
	0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x02, 0x52, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x61, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52, 0x0a, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x6a, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x04, 0x52, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x6a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3f, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x05, 0x52, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x15,
	0x0a, 0x13, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xcf, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52,
	0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x61, 0x78,
	0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x77, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x03, 0x0a, 0x24, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x4a, 0x6f, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x08, 0x4a,
	0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x4c, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x0e, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x48, 0x04, 0x52,
	0x0c, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x4c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6e,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x74, 0x63, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x60, 0x0a, 0x07, 0x50,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x73,
	0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x48,
	0x01, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a,
	0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x73,
	0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x48, 0x02, 0x52,
	0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x9d, 0x02, 0x0a, 0x21, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42,
	0x6f, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x56, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xea, 0x03, 0x0a, 0x1f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x01, 0x52, 0x0a, 0x53, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x07, 0x42, 0x6f, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x73, 0x75, 0x73,
	0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x6f, 0x6c, 0x65, 0x48, 0x02, 0x52, 0x07, 0x42, 0x6f, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x42, 0x6f,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65,
	0x74, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x07, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4a, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x1a, 0x68,
	0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x52, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22,
	0xc7, 0x02, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x64, 0x0a, 0x0b,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3d, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x48, 0x01, 0x52, 0x0b, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x5e, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x48, 0x02, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x1d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x5c, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x48,
	0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x34, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x47,
	0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x47, 0x6f, 0x6f, 0x64, 0x22,
	0x51, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x42, 0x6f, 0x74,
	0x49, 0x64, 0x22, 0xa2, 0x02, 0x0a, 0x10, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x75, 0x66, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x42, 0x75, 0x66, 0x12, 0x45, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x55, 0x0a, 0x0c, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x01, 0x52, 0x0c, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43,
	0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdf, 0x03, 0x0a, 0x11, 0x55, 0x6e, 0x6d, 0x61,
	0x72, 0x73, 0x68, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x07, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x02, 0x52, 0x07, 0x51, 0x51, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a, 0x08, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72,
	0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x03, 0x52, 0x08, 0x43,
	0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x52, 0x0a, 0x08, 0x42, 0x6f,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73,
	0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x04, 0x52, 0x08, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2a, 0x78, 0x0a, 0x0c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x43, 0x6d,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x10, 0x03, 0x2a, 0x3d, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x10, 0x01, 0x2a, 0xb6, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x54, 0x65, 0x78, 0x74,
	0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x01, 0x12, 0x1a,
	0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x41, 0x74, 0x10, 0x04, 0x12,
	0x1a, 0x0a, 0x16, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x10, 0x05, 0x2a, 0x9b, 0x01, 0x0a, 0x0b,
	0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x51,
	0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x64, 0x64, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x75, 0x74, 0x65, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x55, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x51, 0x51,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x10, 0x04, 0x2a, 0x64, 0x0a, 0x18, 0x51, 0x51, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x1f, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x51, 0x51,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x64, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x10, 0x01, 0x2a,
	0x6b, 0x0a, 0x1b, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x22, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4b, 0x69, 0x63, 0x6b, 0x10, 0x01, 0x2a, 0x73, 0x0a, 0x1d,
	0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x23, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x51, 0x51, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x63,
	0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x10,
	0x01, 0x2a, 0xaf, 0x01, 0x0a, 0x0c, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x10,
	0x00, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x10, 0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x6d, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x10, 0x04, 0x2a, 0x48, 0x0a, 0x0c, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x5f, 0x48, 0x65, 0x61, 0x72, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x01, 0x2a, 0x4b, 0x0a,
	0x09, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x00,
	0x12, 0x13, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f, 0x6c, 0x65, 0x5f, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x6f,
	0x6c, 0x65, 0x5f, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x10, 0x02, 0x32, 0x83, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x70,
	0x0a, 0x09, 0x55, 0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x12, 0x30, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x6d,
	0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2e, 0x68, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55,
	0x6e, 0x6d, 0x61, 0x72, 0x73, 0x68, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x19, 0x5a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_basic_handler_protos_handler_response_response_proto_rawDescOnce sync.Once
	file_basic_handler_protos_handler_response_response_proto_rawDescData = file_basic_handler_protos_handler_response_response_proto_rawDesc
)

func file_basic_handler_protos_handler_response_response_proto_rawDescGZIP() []byte {
	file_basic_handler_protos_handler_response_response_proto_rawDescOnce.Do(func() {
		file_basic_handler_protos_handler_response_response_proto_rawDescData = protoimpl.X.CompressGZIP(file_basic_handler_protos_handler_response_response_proto_rawDescData)
	})
	return file_basic_handler_protos_handler_response_response_proto_rawDescData
}

var file_basic_handler_protos_handler_response_response_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_basic_handler_protos_handler_response_response_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_basic_handler_protos_handler_response_response_proto_goTypes = []any{
	(ResponseType)(0),                                  // 0: susubot.basic.handler.response.ResponseType
	(MessageType)(0),                                   // 1: susubot.basic.handler.response.MessageType
	(MessageChainType)(0),                              // 2: susubot.basic.handler.response.MessageChainType
	(QQEventType)(0),                                   // 3: susubot.basic.handler.response.QQEventType
	(QQEventType_GroupAddType)(0),                      // 4: susubot.basic.handler.response.QQEventType_GroupAddType
	(QQEventType_GroupRemoveType)(0),                   // 5: susubot.basic.handler.response.QQEventType_GroupRemoveType
	(QQEventType_MessageRecallType)(0),                 // 6: susubot.basic.handler.response.QQEventType_MessageRecallType
	(CmdEventType)(0),                                  // 7: susubot.basic.handler.response.CmdEventType
	(BotEventType)(0),                                  // 8: susubot.basic.handler.response.BotEventType
	(GroupRole)(0),                                     // 9: susubot.basic.handler.response.GroupRole
	(*MessageChainObject)(nil),                         // 10: susubot.basic.handler.response.MessageChainObject
	(*MessageChain_Text)(nil),                          // 11: susubot.basic.handler.response.MessageChain_Text
	(*MessageChain_Image)(nil),                         // 12: susubot.basic.handler.response.MessageChain_Image
	(*MessageChain_Voice)(nil),                         // 13: susubot.basic.handler.response.MessageChain_Voice
	(*MessageChain_Video)(nil),                         // 14: susubot.basic.handler.response.MessageChain_Video
	(*MessageChain_At)(nil),                            // 15: susubot.basic.handler.response.MessageChain_At
	(*MessageChain_Reply)(nil),                         // 16: susubot.basic.handler.response.MessageChain_Reply
	(*Response_Message)(nil),                           // 17: susubot.basic.handler.response.Response_Message
	(*Response_Message_Private)(nil),                   // 18: susubot.basic.handler.response.Response_Message_Private
	(*Response_Message_Group)(nil),                     // 19: susubot.basic.handler.response.Response_Message_Group
	(*Response_QQEvent)(nil),                           // 20: susubot.basic.handler.response.Response_QQEvent
	(*Response_QQEvent_GroupAdd)(nil),                  // 21: susubot.basic.handler.response.Response_QQEvent_GroupAdd
	(*Response_QQEvent_GroupAdd_Direct)(nil),           // 22: susubot.basic.handler.response.Response_QQEvent_GroupAdd_Direct
	(*Response_QQEvent_GroupAdd_Invite)(nil),           // 23: susubot.basic.handler.response.Response_QQEvent_GroupAdd_Invite
	(*Response_QQEvent_GroupRemove)(nil),               // 24: susubot.basic.handler.response.Response_QQEvent_GroupRemove
	(*Response_QQEvent_GroupRemove_Manual)(nil),        // 25: susubot.basic.handler.response.Response_QQEvent_GroupRemove_Manual
	(*Response_QQEvent_GroupRemove_Kick)(nil),          // 26: susubot.basic.handler.response.Response_QQEvent_GroupRemove_Kick
	(*Response_QQEvent_GroupMute)(nil),                 // 27: susubot.basic.handler.response.Response_QQEvent_GroupMute
	(*Response_QQEvent_GroupUnmute)(nil),               // 28: susubot.basic.handler.response.Response_QQEvent_GroupUnmute
	(*Response_QQEvent_MessageRecall)(nil),             // 29: susubot.basic.handler.response.Response_QQEvent_MessageRecall
	(*Response_QQEvent_MessageRecall_Group)(nil),       // 30: susubot.basic.handler.response.Response_QQEvent_MessageRecall_Group
	(*Response_QQEvent_MessageRecall_Private)(nil),     // 31: susubot.basic.handler.response.Response_QQEvent_MessageRecall_Private
	(*Response_CmdEvent)(nil),                          // 32: susubot.basic.handler.response.Response_CmdEvent
	(*Response_CmdEvent_GetGroupInfo)(nil),             // 33: susubot.basic.handler.response.Response_CmdEvent_GetGroupInfo
	(*Response_CmdEvent_GetGroupMemberInfo)(nil),       // 34: susubot.basic.handler.response.Response_CmdEvent_GetGroupMemberInfo
	(*Response_CmdEvent_GetMessage)(nil),               // 35: susubot.basic.handler.response.Response_CmdEvent_GetMessage
	(*Response_CmdEvent_Message)(nil),                  // 36: susubot.basic.handler.response.Response_CmdEvent_Message
	(*Response_CmdEvent_Message_Private)(nil),          // 37: susubot.basic.handler.response.Response_CmdEvent_Message_Private
	(*Response_CmdEvent_Message_Group)(nil),            // 38: susubot.basic.handler.response.Response_CmdEvent_Message_Group
	(*Response_CmdEvent_GetFriendList)(nil),            // 39: susubot.basic.handler.response.Response_CmdEvent_GetFriendList
	(*Response_CmdEvent_GetFriendInfo)(nil),            // 40: susubot.basic.handler.response.Response_CmdEvent_GetFriendInfo
	(*Response_BotEvent)(nil),                          // 41: susubot.basic.handler.response.Response_BotEvent
	(*Response_BotEvent_HeartPacket)(nil),              // 42: susubot.basic.handler.response.Response_BotEvent_HeartPacket
	(*Response_BotEvent_Connected)(nil),                // 43: susubot.basic.handler.response.Response_BotEvent_Connected
	(*UnmarshalRequest)(nil),                           // 44: susubot.basic.handler.response.UnmarshalRequest
	(*UnmarshalResponse)(nil),                          // 45: susubot.basic.handler.response.UnmarshalResponse
	(*Response_CmdEvent_GetFriendList_FriendInfo)(nil), // 46: susubot.basic.handler.response.Response_CmdEvent_GetFriendList.FriendInfo
	(*Response_BotEvent_HeartPacketStatus)(nil),        // 47: susubot.basic.handler.response.Response_BotEvent_HeartPacket.status
}
var file_basic_handler_protos_handler_response_response_proto_depIdxs = []int32{
	2,  // 0: susubot.basic.handler.response.MessageChainObject.Type:type_name -> susubot.basic.handler.response.MessageChainType
	11, // 1: susubot.basic.handler.response.MessageChainObject.Text:type_name -> susubot.basic.handler.response.MessageChain_Text
	12, // 2: susubot.basic.handler.response.MessageChainObject.Image:type_name -> susubot.basic.handler.response.MessageChain_Image
	13, // 3: susubot.basic.handler.response.MessageChainObject.Voice:type_name -> susubot.basic.handler.response.MessageChain_Voice
	14, // 4: susubot.basic.handler.response.MessageChainObject.Video:type_name -> susubot.basic.handler.response.MessageChain_Video
	15, // 5: susubot.basic.handler.response.MessageChainObject.At:type_name -> susubot.basic.handler.response.MessageChain_At
	16, // 6: susubot.basic.handler.response.MessageChainObject.Reply:type_name -> susubot.basic.handler.response.MessageChain_Reply
	1,  // 7: susubot.basic.handler.response.Response_Message.Type:type_name -> susubot.basic.handler.response.MessageType
	18, // 8: susubot.basic.handler.response.Response_Message.Private:type_name -> susubot.basic.handler.response.Response_Message_Private
	19, // 9: susubot.basic.handler.response.Response_Message.Group:type_name -> susubot.basic.handler.response.Response_Message_Group
	10, // 10: susubot.basic.handler.response.Response_Message_Private.MessageChain:type_name -> susubot.basic.handler.response.MessageChainObject
	9,  // 11: susubot.basic.handler.response.Response_Message_Group.SenderRole:type_name -> susubot.basic.handler.response.GroupRole
	9,  // 12: susubot.basic.handler.response.Response_Message_Group.BotRole:type_name -> susubot.basic.handler.response.GroupRole
	10, // 13: susubot.basic.handler.response.Response_Message_Group.MessageChain:type_name -> susubot.basic.handler.response.MessageChainObject
	3,  // 14: susubot.basic.handler.response.Response_QQEvent.Type:type_name -> susubot.basic.handler.response.QQEventType
	21, // 15: susubot.basic.handler.response.Response_QQEvent.GroupAdd:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupAdd
	24, // 16: susubot.basic.handler.response.Response_QQEvent.GroupRemove:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupRemove
	27, // 17: susubot.basic.handler.response.Response_QQEvent.GroupMute:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupMute
	28, // 18: susubot.basic.handler.response.Response_QQEvent.GroupUnmute:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupUnmute
	29, // 19: susubot.basic.handler.response.Response_QQEvent.MessageRecall:type_name -> susubot.basic.handler.response.Response_QQEvent_MessageRecall
	4,  // 20: susubot.basic.handler.response.Response_QQEvent_GroupAdd.Type:type_name -> susubot.basic.handler.response.QQEventType_GroupAddType
	22, // 21: susubot.basic.handler.response.Response_QQEvent_GroupAdd.Direct:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupAdd_Direct
	23, // 22: susubot.basic.handler.response.Response_QQEvent_GroupAdd.Invite:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupAdd_Invite
	5,  // 23: susubot.basic.handler.response.Response_QQEvent_GroupRemove.Type:type_name -> susubot.basic.handler.response.QQEventType_GroupRemoveType
	25, // 24: susubot.basic.handler.response.Response_QQEvent_GroupRemove.Manual:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupRemove_Manual
	26, // 25: susubot.basic.handler.response.Response_QQEvent_GroupRemove.Kick:type_name -> susubot.basic.handler.response.Response_QQEvent_GroupRemove_Kick
	6,  // 26: susubot.basic.handler.response.Response_QQEvent_MessageRecall.Type:type_name -> susubot.basic.handler.response.QQEventType_MessageRecallType
	30, // 27: susubot.basic.handler.response.Response_QQEvent_MessageRecall.Group:type_name -> susubot.basic.handler.response.Response_QQEvent_MessageRecall_Group
	31, // 28: susubot.basic.handler.response.Response_QQEvent_MessageRecall.Private:type_name -> susubot.basic.handler.response.Response_QQEvent_MessageRecall_Private
	7,  // 29: susubot.basic.handler.response.Response_CmdEvent.Type:type_name -> susubot.basic.handler.response.CmdEventType
	33, // 30: susubot.basic.handler.response.Response_CmdEvent.GetGroupInfo:type_name -> susubot.basic.handler.response.Response_CmdEvent_GetGroupInfo
	34, // 31: susubot.basic.handler.response.Response_CmdEvent.GetGroupMemberInfo:type_name -> susubot.basic.handler.response.Response_CmdEvent_GetGroupMemberInfo
	35, // 32: susubot.basic.handler.response.Response_CmdEvent.GetMessage:type_name -> susubot.basic.handler.response.Response_CmdEvent_GetMessage
	39, // 33: susubot.basic.handler.response.Response_CmdEvent.GetFriendList:type_name -> susubot.basic.handler.response.Response_CmdEvent_GetFriendList
	40, // 34: susubot.basic.handler.response.Response_CmdEvent.GetFriendInfo:type_name -> susubot.basic.handler.response.Response_CmdEvent_GetFriendInfo
	9,  // 35: susubot.basic.handler.response.Response_CmdEvent_GetGroupMemberInfo.Role:type_name -> susubot.basic.handler.response.GroupRole
	36, // 36: susubot.basic.handler.response.Response_CmdEvent_GetMessage.Message:type_name -> susubot.basic.handler.response.Response_CmdEvent_Message
	1,  // 37: susubot.basic.handler.response.Response_CmdEvent_Message.Type:type_name -> susubot.basic.handler.response.MessageType
	37, // 38: susubot.basic.handler.response.Response_CmdEvent_Message.Private:type_name -> susubot.basic.handler.response.Response_CmdEvent_Message_Private
	38, // 39: susubot.basic.handler.response.Response_CmdEvent_Message.Group:type_name -> susubot.basic.handler.response.Response_CmdEvent_Message_Group
	10, // 40: susubot.basic.handler.response.Response_CmdEvent_Message_Private.MessageChain:type_name -> susubot.basic.handler.response.MessageChainObject
	9,  // 41: susubot.basic.handler.response.Response_CmdEvent_Message_Group.SenderRole:type_name -> susubot.basic.handler.response.GroupRole
	9,  // 42: susubot.basic.handler.response.Response_CmdEvent_Message_Group.BotRole:type_name -> susubot.basic.handler.response.GroupRole
	10, // 43: susubot.basic.handler.response.Response_CmdEvent_Message_Group.MessageChain:type_name -> susubot.basic.handler.response.MessageChainObject
	46, // 44: susubot.basic.handler.response.Response_CmdEvent_GetFriendList.Friends:type_name -> susubot.basic.handler.response.Response_CmdEvent_GetFriendList.FriendInfo
	8,  // 45: susubot.basic.handler.response.Response_BotEvent.Type:type_name -> susubot.basic.handler.response.BotEventType
	42, // 46: susubot.basic.handler.response.Response_BotEvent.HeartPacket:type_name -> susubot.basic.handler.response.Response_BotEvent_HeartPacket
	43, // 47: susubot.basic.handler.response.Response_BotEvent.Connected:type_name -> susubot.basic.handler.response.Response_BotEvent_Connected
	47, // 48: susubot.basic.handler.response.Response_BotEvent_HeartPacket.Status:type_name -> susubot.basic.handler.response.Response_BotEvent_HeartPacket.status
	0,  // 49: susubot.basic.handler.response.UnmarshalRequest.Type:type_name -> susubot.basic.handler.response.ResponseType
	7,  // 50: susubot.basic.handler.response.UnmarshalRequest.CmdEventType:type_name -> susubot.basic.handler.response.CmdEventType
	0,  // 51: susubot.basic.handler.response.UnmarshalResponse.Type:type_name -> susubot.basic.handler.response.ResponseType
	17, // 52: susubot.basic.handler.response.UnmarshalResponse.Message:type_name -> susubot.basic.handler.response.Response_Message
	20, // 53: susubot.basic.handler.response.UnmarshalResponse.QQEvent:type_name -> susubot.basic.handler.response.Response_QQEvent
	32, // 54: susubot.basic.handler.response.UnmarshalResponse.CmdEvent:type_name -> susubot.basic.handler.response.Response_CmdEvent
	41, // 55: susubot.basic.handler.response.UnmarshalResponse.BotEvent:type_name -> susubot.basic.handler.response.Response_BotEvent
	44, // 56: susubot.basic.handler.response.ResponseHandler.Unmarshal:input_type -> susubot.basic.handler.response.UnmarshalRequest
	45, // 57: susubot.basic.handler.response.ResponseHandler.Unmarshal:output_type -> susubot.basic.handler.response.UnmarshalResponse
	57, // [57:58] is the sub-list for method output_type
	56, // [56:57] is the sub-list for method input_type
	56, // [56:56] is the sub-list for extension type_name
	56, // [56:56] is the sub-list for extension extendee
	0,  // [0:56] is the sub-list for field type_name
}

func init() { file_basic_handler_protos_handler_response_response_proto_init() }
func file_basic_handler_protos_handler_response_response_proto_init() {
	if File_basic_handler_protos_handler_response_response_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_basic_handler_protos_handler_response_response_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChainObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChain_Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChain_Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChain_Voice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChain_Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChain_At); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MessageChain_Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Response_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Response_Message_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Response_Message_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupAdd_Direct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupAdd_Invite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupRemove); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupRemove_Manual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupRemove_Kick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupMute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_GroupUnmute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_MessageRecall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_MessageRecall_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*Response_QQEvent_MessageRecall_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetGroupMemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_Message_Private); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_Message_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetFriendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetFriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent_HeartPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent_Connected); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*UnmarshalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*UnmarshalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*Response_CmdEvent_GetFriendList_FriendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_basic_handler_protos_handler_response_response_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*Response_BotEvent_HeartPacketStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[0].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[7].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[8].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[9].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[10].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[11].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[12].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[13].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[14].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[15].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[16].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[17].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[18].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[19].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[20].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[21].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[22].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[23].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[24].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[25].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[26].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[27].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[28].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[29].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[30].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[31].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[34].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[35].OneofWrappers = []any{}
	file_basic_handler_protos_handler_response_response_proto_msgTypes[36].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_basic_handler_protos_handler_response_response_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_basic_handler_protos_handler_response_response_proto_goTypes,
		DependencyIndexes: file_basic_handler_protos_handler_response_response_proto_depIdxs,
		EnumInfos:         file_basic_handler_protos_handler_response_response_proto_enumTypes,
		MessageInfos:      file_basic_handler_protos_handler_response_response_proto_msgTypes,
	}.Build()
	File_basic_handler_protos_handler_response_response_proto = out.File
	file_basic_handler_protos_handler_response_response_proto_rawDesc = nil
	file_basic_handler_protos_handler_response_response_proto_goTypes = nil
	file_basic_handler_protos_handler_response_response_proto_depIdxs = nil
}
