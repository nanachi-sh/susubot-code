// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: qqverifier.WITHOUT.proto

package qqverifierclient

import (
	"context"

	"github.com/nanachi-sh/susubot-code/basic/jwt/pkg/protos/qqverifier"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	NewVerifyRequest  = qqverifier.NewVerifyRequest
	NewVerifyResponse = qqverifier.NewVerifyResponse
	VerifiedRequest   = qqverifier.VerifiedRequest
	VerifiedResponse  = qqverifier.VerifiedResponse
	VerifyRequest     = qqverifier.VerifyRequest
	VerifyResponse    = qqverifier.VerifyResponse

	Qqverifier interface {
		NewVerify(ctx context.Context, in *NewVerifyRequest, opts ...grpc.CallOption) (*NewVerifyResponse, error)
		Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
		Verified(ctx context.Context, in *VerifiedRequest, opts ...grpc.CallOption) (*VerifiedResponse, error)
	}

	defaultQqverifier struct {
		cli zrpc.Client
	}
)

func NewQqverifier(cli zrpc.Client) Qqverifier {
	return &defaultQqverifier{
		cli: cli,
	}
}

func (m *defaultQqverifier) NewVerify(ctx context.Context, in *NewVerifyRequest, opts ...grpc.CallOption) (*NewVerifyResponse, error) {
	client := qqverifier.NewQqverifierClient(m.cli.Conn())
	return client.NewVerify(ctx, in, opts...)
}

func (m *defaultQqverifier) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	client := qqverifier.NewQqverifierClient(m.cli.Conn())
	return client.Verify(ctx, in, opts...)
}

func (m *defaultQqverifier) Verified(ctx context.Context, in *VerifiedRequest, opts ...grpc.CallOption) (*VerifiedResponse, error) {
	client := qqverifier.NewQqverifierClient(m.cli.Conn())
	return client.Verified(ctx, in, opts...)
}
