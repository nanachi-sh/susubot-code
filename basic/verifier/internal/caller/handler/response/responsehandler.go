// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: response.proto

package responsehandler

import (
	"context"

	"github.com/nanachi-sh/susubot-code/basic/verifier/pkg/protos/handler/response"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MessageChainObject                         = response.MessageChainObject
	MessageChain_At                            = response.MessageChain_At
	MessageChain_Image                         = response.MessageChain_Image
	MessageChain_Reply                         = response.MessageChain_Reply
	MessageChain_Text                          = response.MessageChain_Text
	MessageChain_Video                         = response.MessageChain_Video
	MessageChain_Voice                         = response.MessageChain_Voice
	Response_BotEvent                          = response.Response_BotEvent
	Response_BotEvent_Connected                = response.Response_BotEvent_Connected
	Response_BotEvent_HeartPacket              = response.Response_BotEvent_HeartPacket
	Response_BotEvent_HeartPacketStatus        = response.Response_BotEvent_HeartPacketStatus
	Response_CmdEvent                          = response.Response_CmdEvent
	Response_CmdEvent_GetFriendInfo            = response.Response_CmdEvent_GetFriendInfo
	Response_CmdEvent_GetFriendList            = response.Response_CmdEvent_GetFriendList
	Response_CmdEvent_GetFriendList_FriendInfo = response.Response_CmdEvent_GetFriendList_FriendInfo
	Response_CmdEvent_GetGroupInfo             = response.Response_CmdEvent_GetGroupInfo
	Response_CmdEvent_GetGroupMemberInfo       = response.Response_CmdEvent_GetGroupMemberInfo
	Response_CmdEvent_GetMessage               = response.Response_CmdEvent_GetMessage
	Response_CmdEvent_Message                  = response.Response_CmdEvent_Message
	Response_CmdEvent_Message_Group            = response.Response_CmdEvent_Message_Group
	Response_CmdEvent_Message_Private          = response.Response_CmdEvent_Message_Private
	Response_Message                           = response.Response_Message
	Response_Message_Group                     = response.Response_Message_Group
	Response_Message_Private                   = response.Response_Message_Private
	Response_QQEvent                           = response.Response_QQEvent
	Response_QQEvent_GroupAdd                  = response.Response_QQEvent_GroupAdd
	Response_QQEvent_GroupAdd_Direct           = response.Response_QQEvent_GroupAdd_Direct
	Response_QQEvent_GroupAdd_Invite           = response.Response_QQEvent_GroupAdd_Invite
	Response_QQEvent_GroupMute                 = response.Response_QQEvent_GroupMute
	Response_QQEvent_GroupRemove               = response.Response_QQEvent_GroupRemove
	Response_QQEvent_GroupRemove_Kick          = response.Response_QQEvent_GroupRemove_Kick
	Response_QQEvent_GroupRemove_Manual        = response.Response_QQEvent_GroupRemove_Manual
	Response_QQEvent_GroupUnmute               = response.Response_QQEvent_GroupUnmute
	Response_QQEvent_MessageRecall             = response.Response_QQEvent_MessageRecall
	Response_QQEvent_MessageRecall_Group       = response.Response_QQEvent_MessageRecall_Group
	Response_QQEvent_MessageRecall_Private     = response.Response_QQEvent_MessageRecall_Private
	UnmarshalRequest                           = response.UnmarshalRequest
	UnmarshalResponse                          = response.UnmarshalResponse
	UnmarshalResponse_ResponseDefine           = response.UnmarshalResponse_ResponseDefine

	ResponseHandler interface {
		Unmarshal(ctx context.Context, in *UnmarshalRequest, opts ...grpc.CallOption) (*UnmarshalResponse, error)
	}

	defaultResponseHandler struct {
		cli zrpc.Client
	}
)

func NewResponseHandler(cli zrpc.Client) ResponseHandler {
	return &defaultResponseHandler{
		cli: cli,
	}
}

func (m *defaultResponseHandler) Unmarshal(ctx context.Context, in *UnmarshalRequest, opts ...grpc.CallOption) (*UnmarshalResponse, error) {
	client := response.NewResponseHandlerClient(m.cli.Conn())
	return client.Unmarshal(ctx, in, opts...)
}
