// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: plugin/uno/protos/uno/uno.proto

package uno

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stage int32

const (
	Stage_WaitingStart   Stage = 0
	Stage_ElectingBanker Stage = 1
	Stage_SendingCard    Stage = 2
)

// Enum value maps for Stage.
var (
	Stage_name = map[int32]string{
		0: "WaitingStart",
		1: "ElectingBanker",
		2: "SendingCard",
	}
	Stage_value = map[string]int32{
		"WaitingStart":   0,
		"ElectingBanker": 1,
		"SendingCard":    2,
	}
)

func (x Stage) Enum() *Stage {
	p := new(Stage)
	*p = x
	return p
}

func (x Stage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stage) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[0].Descriptor()
}

func (Stage) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[0]
}

func (x Stage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stage.Descriptor instead.
func (Stage) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{0}
}

type Errors int32

const (
	Errors_Unexpected                       Errors = 0  //意外错误
	Errors_RoomStarted                      Errors = 1  //房间已开始游戏
	Errors_RoomFull                         Errors = 2  //房间已满
	Errors_RoomExistPlayer                  Errors = 3  //玩家已存在房间内
	Errors_RoomNoReachPlayers               Errors = 4  //玩家数未达到
	Errors_RoomNoExistPlayer                Errors = 5  //玩家不存在房间内
	Errors_PlayerNoOperatorNow              Errors = 6  //玩家不是当前操作者
	Errors_PlayerCardNoExist                Errors = 7  //玩家卡牌不足
	Errors_PlayerCannotSendCard             Errors = 8  //玩家不能出牌
	Errors_SendCardColorORNumberNELastCard  Errors = 9  //所出牌颜色或数字与上一张牌不同
	Errors_RoomNoStart                      Errors = 10 //房间还未开始游戏
	Errors_PlayerAlreadyDrawCard            Errors = 11 //玩家已抽过牌
	Errors_PlayerNoDrawCard                 Errors = 12 //玩家还未抽牌
	Errors_PlayerCannotNoSendCard           Errors = 13 //玩家不能不出牌
	Errors_Challenged                       Errors = 14 //已挑战
	Errors_PlayerCannotCallUNO              Errors = 15 //玩家不能喊UNO
	Errors_RoomNoneSendCard                 Errors = 16 //房间还未出过牌
	Errors_CannotChallenge                  Errors = 17 //无法挑战
	Errors_RoomNoSendingCard                Errors = 18 //房间还未进入出牌阶段
	Errors_PlayerAlreadyCallUNO             Errors = 19 //玩家已喊UNO
	Errors_RoomNoExist                      Errors = 20 //房间不存在
	Errors_PlayerNoExistAnyRoom             Errors = 21 //玩家不在任意一个房间内
	Errors_PlayerCannotDrawCard             Errors = 22 //玩家不能摸牌
	Errors_PlayerCannotSendCardFromHandCard Errors = 23 //玩家不能从手牌中出牌
	Errors_BlackCardNoSpecifiedColor        Errors = 24 //黑牌未指定颜色
	Errors_PlayerIsOperatorNow              Errors = 25 //玩家为当前操作者
)

// Enum value maps for Errors.
var (
	Errors_name = map[int32]string{
		0:  "Unexpected",
		1:  "RoomStarted",
		2:  "RoomFull",
		3:  "RoomExistPlayer",
		4:  "RoomNoReachPlayers",
		5:  "RoomNoExistPlayer",
		6:  "PlayerNoOperatorNow",
		7:  "PlayerCardNoExist",
		8:  "PlayerCannotSendCard",
		9:  "SendCardColorORNumberNELastCard",
		10: "RoomNoStart",
		11: "PlayerAlreadyDrawCard",
		12: "PlayerNoDrawCard",
		13: "PlayerCannotNoSendCard",
		14: "Challenged",
		15: "PlayerCannotCallUNO",
		16: "RoomNoneSendCard",
		17: "CannotChallenge",
		18: "RoomNoSendingCard",
		19: "PlayerAlreadyCallUNO",
		20: "RoomNoExist",
		21: "PlayerNoExistAnyRoom",
		22: "PlayerCannotDrawCard",
		23: "PlayerCannotSendCardFromHandCard",
		24: "BlackCardNoSpecifiedColor",
		25: "PlayerIsOperatorNow",
	}
	Errors_value = map[string]int32{
		"Unexpected":                       0,
		"RoomStarted":                      1,
		"RoomFull":                         2,
		"RoomExistPlayer":                  3,
		"RoomNoReachPlayers":               4,
		"RoomNoExistPlayer":                5,
		"PlayerNoOperatorNow":              6,
		"PlayerCardNoExist":                7,
		"PlayerCannotSendCard":             8,
		"SendCardColorORNumberNELastCard":  9,
		"RoomNoStart":                      10,
		"PlayerAlreadyDrawCard":            11,
		"PlayerNoDrawCard":                 12,
		"PlayerCannotNoSendCard":           13,
		"Challenged":                       14,
		"PlayerCannotCallUNO":              15,
		"RoomNoneSendCard":                 16,
		"CannotChallenge":                  17,
		"RoomNoSendingCard":                18,
		"PlayerAlreadyCallUNO":             19,
		"RoomNoExist":                      20,
		"PlayerNoExistAnyRoom":             21,
		"PlayerCannotDrawCard":             22,
		"PlayerCannotSendCardFromHandCard": 23,
		"BlackCardNoSpecifiedColor":        24,
		"PlayerIsOperatorNow":              25,
	}
)

func (x Errors) Enum() *Errors {
	p := new(Errors)
	*p = x
	return p
}

func (x Errors) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Errors) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[1].Descriptor()
}

func (Errors) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[1]
}

func (x Errors) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Errors.Descriptor instead.
func (Errors) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{1}
}

type CardColor int32

const (
	CardColor_Blue   CardColor = 0
	CardColor_Yellow CardColor = 1
	CardColor_Red    CardColor = 2
	CardColor_Green  CardColor = 3
	CardColor_Black  CardColor = 4
)

// Enum value maps for CardColor.
var (
	CardColor_name = map[int32]string{
		0: "Blue",
		1: "Yellow",
		2: "Red",
		3: "Green",
		4: "Black",
	}
	CardColor_value = map[string]int32{
		"Blue":   0,
		"Yellow": 1,
		"Red":    2,
		"Green":  3,
		"Black":  4,
	}
)

func (x CardColor) Enum() *CardColor {
	p := new(CardColor)
	*p = x
	return p
}

func (x CardColor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardColor) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[2].Descriptor()
}

func (CardColor) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[2]
}

func (x CardColor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardColor.Descriptor instead.
func (CardColor) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{2}
}

type CardNumber int32

const (
	CardNumber_Zero  CardNumber = 0
	CardNumber_One   CardNumber = 1
	CardNumber_Two   CardNumber = 2
	CardNumber_Three CardNumber = 3
	CardNumber_Four  CardNumber = 4
	CardNumber_Five  CardNumber = 5
	CardNumber_Six   CardNumber = 6
	CardNumber_Seven CardNumber = 7
	CardNumber_Eight CardNumber = 8
	CardNumber_Nine  CardNumber = 9
)

// Enum value maps for CardNumber.
var (
	CardNumber_name = map[int32]string{
		0: "Zero",
		1: "One",
		2: "Two",
		3: "Three",
		4: "Four",
		5: "Five",
		6: "Six",
		7: "Seven",
		8: "Eight",
		9: "Nine",
	}
	CardNumber_value = map[string]int32{
		"Zero":  0,
		"One":   1,
		"Two":   2,
		"Three": 3,
		"Four":  4,
		"Five":  5,
		"Six":   6,
		"Seven": 7,
		"Eight": 8,
		"Nine":  9,
	}
)

func (x CardNumber) Enum() *CardNumber {
	p := new(CardNumber)
	*p = x
	return p
}

func (x CardNumber) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardNumber) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[3].Descriptor()
}

func (CardNumber) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[3]
}

func (x CardNumber) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardNumber.Descriptor instead.
func (CardNumber) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{3}
}

type FeatureCards int32

const (
	FeatureCards_Skip         FeatureCards = 0
	FeatureCards_Reverse      FeatureCards = 1
	FeatureCards_DrawTwo      FeatureCards = 2
	FeatureCards_Wild         FeatureCards = 3
	FeatureCards_WildDrawFour FeatureCards = 4
)

// Enum value maps for FeatureCards.
var (
	FeatureCards_name = map[int32]string{
		0: "Skip",
		1: "Reverse",
		2: "DrawTwo",
		3: "Wild",
		4: "WildDrawFour",
	}
	FeatureCards_value = map[string]int32{
		"Skip":         0,
		"Reverse":      1,
		"DrawTwo":      2,
		"Wild":         3,
		"WildDrawFour": 4,
	}
)

func (x FeatureCards) Enum() *FeatureCards {
	p := new(FeatureCards)
	*p = x
	return p
}

func (x FeatureCards) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FeatureCards) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[4].Descriptor()
}

func (FeatureCards) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[4]
}

func (x FeatureCards) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FeatureCards.Descriptor instead.
func (FeatureCards) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{4}
}

type SendCardActions int32

const (
	SendCardActions_Send   SendCardActions = 0
	SendCardActions_NoSend SendCardActions = 1
)

// Enum value maps for SendCardActions.
var (
	SendCardActions_name = map[int32]string{
		0: "Send",
		1: "NoSend",
	}
	SendCardActions_value = map[string]int32{
		"Send":   0,
		"NoSend": 1,
	}
)

func (x SendCardActions) Enum() *SendCardActions {
	p := new(SendCardActions)
	*p = x
	return p
}

func (x SendCardActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendCardActions) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[5].Descriptor()
}

func (SendCardActions) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[5]
}

func (x SendCardActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendCardActions.Descriptor instead.
func (SendCardActions) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{5}
}

type CardType int32

const (
	CardType_Normal  CardType = 0
	CardType_Feature CardType = 1
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0: "Normal",
		1: "Feature",
	}
	CardType_value = map[string]int32{
		"Normal":  0,
		"Feature": 1,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[6].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[6]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{6}
}

type WildDrawFourStatus int32

const (
	WildDrawFourStatus_ChallengerLose WildDrawFourStatus = 0 //挑战者失败
	WildDrawFourStatus_ChallengedLose WildDrawFourStatus = 1 //被挑战者失败
)

// Enum value maps for WildDrawFourStatus.
var (
	WildDrawFourStatus_name = map[int32]string{
		0: "ChallengerLose",
		1: "ChallengedLose",
	}
	WildDrawFourStatus_value = map[string]int32{
		"ChallengerLose": 0,
		"ChallengedLose": 1,
	}
)

func (x WildDrawFourStatus) Enum() *WildDrawFourStatus {
	p := new(WildDrawFourStatus)
	*p = x
	return p
}

func (x WildDrawFourStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WildDrawFourStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_plugin_uno_protos_uno_uno_proto_enumTypes[7].Descriptor()
}

func (WildDrawFourStatus) Type() protoreflect.EnumType {
	return &file_plugin_uno_protos_uno_uno_proto_enumTypes[7]
}

func (x WildDrawFourStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WildDrawFourStatus.Descriptor instead.
func (WildDrawFourStatus) EnumDescriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{7}
}

type SendCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId           string              `protobuf:"bytes,1,opt,name=SenderId,proto3" json:"SenderId,omitempty"`
	SendCard           *Card               `protobuf:"bytes,2,opt,name=SendCard,proto3" json:"SendCard,omitempty"`
	WildDrawFourStatus *WildDrawFourStatus `protobuf:"varint,3,opt,name=WildDrawFourStatus,proto3,enum=susubot.plugin.uno.WildDrawFourStatus,oneof" json:"WildDrawFourStatus,omitempty"`
	FeatureEffected    bool                `protobuf:"varint,4,opt,name=FeatureEffected,proto3" json:"FeatureEffected,omitempty"`
}

func (x *SendCard) Reset() {
	*x = SendCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCard) ProtoMessage() {}

func (x *SendCard) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCard.ProtoReflect.Descriptor instead.
func (*SendCard) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{0}
}

func (x *SendCard) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SendCard) GetSendCard() *Card {
	if x != nil {
		return x.SendCard
	}
	return nil
}

func (x *SendCard) GetWildDrawFourStatus() WildDrawFourStatus {
	if x != nil && x.WildDrawFourStatus != nil {
		return *x.WildDrawFourStatus
	}
	return WildDrawFourStatus_ChallengerLose
}

func (x *SendCard) GetFeatureEffected() bool {
	if x != nil {
		return x.FeatureEffected
	}
	return false
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NormalCard  *NormalCard  `protobuf:"bytes,1,opt,name=NormalCard,proto3,oneof" json:"NormalCard,omitempty"`
	FeatureCard *FeatureCard `protobuf:"bytes,2,opt,name=FeatureCard,proto3,oneof" json:"FeatureCard,omitempty"`
	Type        CardType     `protobuf:"varint,3,opt,name=Type,proto3,enum=susubot.plugin.uno.CardType" json:"Type,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{1}
}

func (x *Card) GetNormalCard() *NormalCard {
	if x != nil {
		return x.NormalCard
	}
	return nil
}

func (x *Card) GetFeatureCard() *FeatureCard {
	if x != nil {
		return x.FeatureCard
	}
	return nil
}

func (x *Card) GetType() CardType {
	if x != nil {
		return x.Type
	}
	return CardType_Normal
}

type NormalCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color  CardColor  `protobuf:"varint,1,opt,name=Color,proto3,enum=susubot.plugin.uno.CardColor" json:"Color,omitempty"`
	Number CardNumber `protobuf:"varint,2,opt,name=Number,proto3,enum=susubot.plugin.uno.CardNumber" json:"Number,omitempty"`
}

func (x *NormalCard) Reset() {
	*x = NormalCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NormalCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalCard) ProtoMessage() {}

func (x *NormalCard) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalCard.ProtoReflect.Descriptor instead.
func (*NormalCard) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{2}
}

func (x *NormalCard) GetColor() CardColor {
	if x != nil {
		return x.Color
	}
	return CardColor_Blue
}

func (x *NormalCard) GetNumber() CardNumber {
	if x != nil {
		return x.Number
	}
	return CardNumber_Zero
}

type FeatureCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color       CardColor    `protobuf:"varint,1,opt,name=Color,proto3,enum=susubot.plugin.uno.CardColor" json:"Color,omitempty"`
	FeatureCard FeatureCards `protobuf:"varint,2,opt,name=FeatureCard,proto3,enum=susubot.plugin.uno.FeatureCards" json:"FeatureCard,omitempty"`
}

func (x *FeatureCard) Reset() {
	*x = FeatureCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureCard) ProtoMessage() {}

func (x *FeatureCard) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureCard.ProtoReflect.Descriptor instead.
func (*FeatureCard) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{3}
}

func (x *FeatureCard) GetColor() CardColor {
	if x != nil {
		return x.Color
	}
	return CardColor_Blue
}

func (x *FeatureCard) GetFeatureCard() FeatureCards {
	if x != nil {
		return x.FeatureCard
	}
	return FeatureCards_Skip
}

type PlayerAccountInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *PlayerAccountInfo) Reset() {
	*x = PlayerAccountInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerAccountInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerAccountInfo) ProtoMessage() {}

func (x *PlayerAccountInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerAccountInfo.ProtoReflect.Descriptor instead.
func (*PlayerAccountInfo) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerAccountInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerAccountInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PlayerRoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomHash string  `protobuf:"bytes,1,opt,name=RoomHash,proto3" json:"RoomHash,omitempty"`
	Cards    []*Card `protobuf:"bytes,2,rep,name=Cards,proto3" json:"Cards,omitempty"`
	DrawCard *Card   `protobuf:"bytes,3,opt,name=DrawCard,proto3,oneof" json:"DrawCard,omitempty"`
}

func (x *PlayerRoomInfo) Reset() {
	*x = PlayerRoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerRoomInfo) ProtoMessage() {}

func (x *PlayerRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerRoomInfo.ProtoReflect.Descriptor instead.
func (*PlayerRoomInfo) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerRoomInfo) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

func (x *PlayerRoomInfo) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *PlayerRoomInfo) GetDrawCard() *Card {
	if x != nil {
		return x.DrawCard
	}
	return nil
}

type PlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerAccountInfo *PlayerAccountInfo `protobuf:"bytes,1,opt,name=PlayerAccountInfo,proto3" json:"PlayerAccountInfo,omitempty"`
	PlayerRoomInfo    *PlayerRoomInfo    `protobuf:"bytes,2,opt,name=PlayerRoomInfo,proto3,oneof" json:"PlayerRoomInfo,omitempty"`
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerInfo) GetPlayerAccountInfo() *PlayerAccountInfo {
	if x != nil {
		return x.PlayerAccountInfo
	}
	return nil
}

func (x *PlayerInfo) GetPlayerRoomInfo() *PlayerRoomInfo {
	if x != nil {
		return x.PlayerRoomInfo
	}
	return nil
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash        string        `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Stage       Stage         `protobuf:"varint,2,opt,name=Stage,proto3,enum=susubot.plugin.uno.Stage" json:"Stage,omitempty"`
	Banker      *PlayerInfo   `protobuf:"bytes,3,opt,name=Banker,proto3,oneof" json:"Banker,omitempty"`
	CardHeap    []*Card       `protobuf:"bytes,4,rep,name=CardHeap,proto3" json:"CardHeap,omitempty"`
	CardPool    []*SendCard   `protobuf:"bytes,5,rep,name=CardPool,proto3" json:"CardPool,omitempty"`
	OperatorNow *PlayerInfo   `protobuf:"bytes,6,opt,name=OperatorNow,proto3,oneof" json:"OperatorNow,omitempty"`
	Players     []*PlayerInfo `protobuf:"bytes,7,rep,name=Players,proto3" json:"Players,omitempty"`
}

func (x *Room) Reset() {
	*x = Room{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{7}
}

func (x *Room) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Room) GetStage() Stage {
	if x != nil {
		return x.Stage
	}
	return Stage_WaitingStart
}

func (x *Room) GetBanker() *PlayerInfo {
	if x != nil {
		return x.Banker
	}
	return nil
}

func (x *Room) GetCardHeap() []*Card {
	if x != nil {
		return x.CardHeap
	}
	return nil
}

func (x *Room) GetCardPool() []*SendCard {
	if x != nil {
		return x.CardPool
	}
	return nil
}

func (x *Room) GetOperatorNow() *PlayerInfo {
	if x != nil {
		return x.OperatorNow
	}
	return nil
}

func (x *Room) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{8}
}

type BasicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *Errors `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
}

func (x *BasicResponse) Reset() {
	*x = BasicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicResponse) ProtoMessage() {}

func (x *BasicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicResponse.ProtoReflect.Descriptor instead.
func (*BasicResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{9}
}

func (x *BasicResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomHash string `protobuf:"bytes,1,opt,name=RoomHash,proto3" json:"RoomHash,omitempty"`
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{10}
}

func (x *CreateRoomResponse) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type GetRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomHash string `protobuf:"bytes,1,opt,name=RoomHash,proto3" json:"RoomHash,omitempty"`
}

func (x *GetRoomRequest) Reset() {
	*x = GetRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomRequest) ProtoMessage() {}

func (x *GetRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomRequest.ProtoReflect.Descriptor instead.
func (*GetRoomRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{11}
}

func (x *GetRoomRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type GetRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err  *Errors `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	Info *Room   `protobuf:"bytes,2,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetRoomResponse) Reset() {
	*x = GetRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomResponse) ProtoMessage() {}

func (x *GetRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomResponse.ProtoReflect.Descriptor instead.
func (*GetRoomResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoomResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *GetRoomResponse) GetInfo() *Room {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetRoomsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*Room `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetRoomsResponse) Reset() {
	*x = GetRoomsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomsResponse) ProtoMessage() {}

func (x *GetRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomsResponse.ProtoReflect.Descriptor instead.
func (*GetRoomsResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoomsResponse) GetInfos() []*Room {
	if x != nil {
		return x.Infos
	}
	return nil
}

type JoinRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   string `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	RoomHash   string `protobuf:"bytes,3,opt,name=RoomHash,proto3" json:"RoomHash,omitempty"`
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{14}
}

func (x *JoinRoomRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *JoinRoomRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *JoinRoomRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type JoinRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     *Errors       `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	Players []*PlayerInfo `protobuf:"bytes,2,rep,name=Players,proto3" json:"Players,omitempty"`
}

func (x *JoinRoomResponse) Reset() {
	*x = JoinRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomResponse) ProtoMessage() {}

func (x *JoinRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinRoomResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{15}
}

func (x *JoinRoomResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *JoinRoomResponse) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type ExitRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
}

func (x *ExitRoomRequest) Reset() {
	*x = ExitRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomRequest) ProtoMessage() {}

func (x *ExitRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomRequest.ProtoReflect.Descriptor instead.
func (*ExitRoomRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{16}
}

func (x *ExitRoomRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type ExitRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     *Errors       `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	Players []*PlayerInfo `protobuf:"bytes,2,rep,name=Players,proto3" json:"Players,omitempty"`
}

func (x *ExitRoomResponse) Reset() {
	*x = ExitRoomResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomResponse) ProtoMessage() {}

func (x *ExitRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomResponse.ProtoReflect.Descriptor instead.
func (*ExitRoomResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{17}
}

func (x *ExitRoomResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *ExitRoomResponse) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

type StartRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId *string `protobuf:"bytes,1,opt,name=PlayerId,proto3,oneof" json:"PlayerId,omitempty"`
	RoomHash *string `protobuf:"bytes,2,opt,name=RoomHash,proto3,oneof" json:"RoomHash,omitempty"`
}

func (x *StartRoomRequest) Reset() {
	*x = StartRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRoomRequest) ProtoMessage() {}

func (x *StartRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRoomRequest.ProtoReflect.Descriptor instead.
func (*StartRoomRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{18}
}

func (x *StartRoomRequest) GetPlayerId() string {
	if x != nil && x.PlayerId != nil {
		return *x.PlayerId
	}
	return ""
}

func (x *StartRoomRequest) GetRoomHash() string {
	if x != nil && x.RoomHash != nil {
		return *x.RoomHash
	}
	return ""
}

type DrawCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
}

func (x *DrawCardRequest) Reset() {
	*x = DrawCardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardRequest) ProtoMessage() {}

func (x *DrawCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardRequest.ProtoReflect.Descriptor instead.
func (*DrawCardRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{19}
}

func (x *DrawCardRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type DrawCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err             *Errors                             `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	ElectBankerCard *Card                               `protobuf:"bytes,2,opt,name=ElectBankerCard,proto3,oneof" json:"ElectBankerCard,omitempty"` //仅抽庄家时
	PlayerCard      []*Card                             `protobuf:"bytes,3,rep,name=PlayerCard,proto3" json:"PlayerCard,omitempty"`                 //仅出牌阶段时
	DrawCard        *Card                               `protobuf:"bytes,9,opt,name=DrawCard,proto3,oneof" json:"DrawCard,omitempty"`               //仅出牌阶段时
	Stage           Stage                               `protobuf:"varint,4,opt,name=Stage,proto3,enum=susubot.plugin.uno.Stage" json:"Stage,omitempty"`
	IntoSendCard    bool                                `protobuf:"varint,6,opt,name=IntoSendCard,proto3" json:"IntoSendCard,omitempty"`
	IntoSendCardE   *DrawCardResponse_IntoSendCardEvent `protobuf:"bytes,7,opt,name=IntoSendCardE,proto3,oneof" json:"IntoSendCardE,omitempty"`
	Skipped         bool                                `protobuf:"varint,5,opt,name=Skipped,proto3" json:"Skipped,omitempty"`        //玩家被Draw two等牌跳过回合
	SkippedE        *DrawCardResponse_SkippedEvent      `protobuf:"bytes,8,opt,name=SkippedE,proto3,oneof" json:"SkippedE,omitempty"` //Skipped == true
}

func (x *DrawCardResponse) Reset() {
	*x = DrawCardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardResponse) ProtoMessage() {}

func (x *DrawCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardResponse.ProtoReflect.Descriptor instead.
func (*DrawCardResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{20}
}

func (x *DrawCardResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *DrawCardResponse) GetElectBankerCard() *Card {
	if x != nil {
		return x.ElectBankerCard
	}
	return nil
}

func (x *DrawCardResponse) GetPlayerCard() []*Card {
	if x != nil {
		return x.PlayerCard
	}
	return nil
}

func (x *DrawCardResponse) GetDrawCard() *Card {
	if x != nil {
		return x.DrawCard
	}
	return nil
}

func (x *DrawCardResponse) GetStage() Stage {
	if x != nil {
		return x.Stage
	}
	return Stage_WaitingStart
}

func (x *DrawCardResponse) GetIntoSendCard() bool {
	if x != nil {
		return x.IntoSendCard
	}
	return false
}

func (x *DrawCardResponse) GetIntoSendCardE() *DrawCardResponse_IntoSendCardEvent {
	if x != nil {
		return x.IntoSendCardE
	}
	return nil
}

func (x *DrawCardResponse) GetSkipped() bool {
	if x != nil {
		return x.Skipped
	}
	return false
}

func (x *DrawCardResponse) GetSkippedE() *DrawCardResponse_SkippedEvent {
	if x != nil {
		return x.SkippedE
	}
	return nil
}

type SendCardActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string          `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	SendCard *Card           `protobuf:"bytes,2,opt,name=SendCard,proto3" json:"SendCard,omitempty"`
	Action   SendCardActions `protobuf:"varint,3,opt,name=Action,proto3,enum=susubot.plugin.uno.SendCardActions" json:"Action,omitempty"`
}

func (x *SendCardActionRequest) Reset() {
	*x = SendCardActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCardActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardActionRequest) ProtoMessage() {}

func (x *SendCardActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardActionRequest.ProtoReflect.Descriptor instead.
func (*SendCardActionRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{21}
}

func (x *SendCardActionRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SendCardActionRequest) GetSendCard() *Card {
	if x != nil {
		return x.SendCard
	}
	return nil
}

func (x *SendCardActionRequest) GetAction() SendCardActions {
	if x != nil {
		return x.Action
	}
	return SendCardActions_Send
}

type SendCardActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err          *Errors                                 `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	NextOperator *PlayerInfo                             `protobuf:"bytes,2,opt,name=NextOperator,proto3" json:"NextOperator,omitempty"`
	SenderCard   []*Card                                 `protobuf:"bytes,4,rep,name=SenderCard,proto3" json:"SenderCard,omitempty"`
	GameFinish   bool                                    `protobuf:"varint,5,opt,name=GameFinish,proto3" json:"GameFinish,omitempty"`
	GameFinishE  *SendCardActionResponse_GameFinishEvent `protobuf:"bytes,3,opt,name=GameFinishE,proto3,oneof" json:"GameFinishE,omitempty"`
}

func (x *SendCardActionResponse) Reset() {
	*x = SendCardActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCardActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardActionResponse) ProtoMessage() {}

func (x *SendCardActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardActionResponse.ProtoReflect.Descriptor instead.
func (*SendCardActionResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{22}
}

func (x *SendCardActionResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *SendCardActionResponse) GetNextOperator() *PlayerInfo {
	if x != nil {
		return x.NextOperator
	}
	return nil
}

func (x *SendCardActionResponse) GetSenderCard() []*Card {
	if x != nil {
		return x.SenderCard
	}
	return nil
}

func (x *SendCardActionResponse) GetGameFinish() bool {
	if x != nil {
		return x.GameFinish
	}
	return false
}

func (x *SendCardActionResponse) GetGameFinishE() *SendCardActionResponse_GameFinishEvent {
	if x != nil {
		return x.GameFinishE
	}
	return nil
}

type CallUNORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
}

func (x *CallUNORequest) Reset() {
	*x = CallUNORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallUNORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallUNORequest) ProtoMessage() {}

func (x *CallUNORequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallUNORequest.ProtoReflect.Descriptor instead.
func (*CallUNORequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{23}
}

func (x *CallUNORequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type CallUNOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *Errors `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	PlayerCard []*Card `protobuf:"bytes,2,rep,name=PlayerCard,proto3" json:"PlayerCard,omitempty"`
}

func (x *CallUNOResponse) Reset() {
	*x = CallUNOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallUNOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallUNOResponse) ProtoMessage() {}

func (x *CallUNOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallUNOResponse.ProtoReflect.Descriptor instead.
func (*CallUNOResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{24}
}

func (x *CallUNOResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *CallUNOResponse) GetPlayerCard() []*Card {
	if x != nil {
		return x.PlayerCard
	}
	return nil
}

type ChallengeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
}

func (x *ChallengeRequest) Reset() {
	*x = ChallengeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeRequest) ProtoMessage() {}

func (x *ChallengeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeRequest.ProtoReflect.Descriptor instead.
func (*ChallengeRequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{25}
}

func (x *ChallengeRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type ChallengeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *Errors     `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	Win        bool        `protobuf:"varint,2,opt,name=Win,proto3" json:"Win,omitempty"`
	LastPlayer *PlayerInfo `protobuf:"bytes,3,opt,name=LastPlayer,proto3,oneof" json:"LastPlayer,omitempty"`
}

func (x *ChallengeResponse) Reset() {
	*x = ChallengeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeResponse) ProtoMessage() {}

func (x *ChallengeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeResponse.ProtoReflect.Descriptor instead.
func (*ChallengeResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{26}
}

func (x *ChallengeResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *ChallengeResponse) GetWin() bool {
	if x != nil {
		return x.Win
	}
	return false
}

func (x *ChallengeResponse) GetLastPlayer() *PlayerInfo {
	if x != nil {
		return x.LastPlayer
	}
	return nil
}

type IndicateUNORequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string PlayerId = 1;
	TargetId string `protobuf:"bytes,2,opt,name=TargetId,proto3" json:"TargetId,omitempty"`
}

func (x *IndicateUNORequest) Reset() {
	*x = IndicateUNORequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicateUNORequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicateUNORequest) ProtoMessage() {}

func (x *IndicateUNORequest) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicateUNORequest.ProtoReflect.Descriptor instead.
func (*IndicateUNORequest) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{27}
}

func (x *IndicateUNORequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

type IndicateUNOResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        *Errors     `protobuf:"varint,1,opt,name=err,proto3,enum=susubot.plugin.uno.Errors,oneof" json:"err,omitempty"`
	IndicateOK bool        `protobuf:"varint,2,opt,name=IndicateOK,proto3" json:"IndicateOK,omitempty"`
	Punished   *PlayerInfo `protobuf:"bytes,3,opt,name=Punished,proto3,oneof" json:"Punished,omitempty"`
}

func (x *IndicateUNOResponse) Reset() {
	*x = IndicateUNOResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicateUNOResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicateUNOResponse) ProtoMessage() {}

func (x *IndicateUNOResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicateUNOResponse.ProtoReflect.Descriptor instead.
func (*IndicateUNOResponse) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{28}
}

func (x *IndicateUNOResponse) GetErr() Errors {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return Errors_Unexpected
}

func (x *IndicateUNOResponse) GetIndicateOK() bool {
	if x != nil {
		return x.IndicateOK
	}
	return false
}

func (x *IndicateUNOResponse) GetPunished() *PlayerInfo {
	if x != nil {
		return x.Punished
	}
	return nil
}

type DrawCardResponse_IntoSendCardEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players  []*PlayerInfo `protobuf:"bytes,1,rep,name=Players,proto3" json:"Players,omitempty"`
	Banker   *PlayerInfo   `protobuf:"bytes,2,opt,name=Banker,proto3" json:"Banker,omitempty"`     //
	LeadCard *Card         `protobuf:"bytes,3,opt,name=LeadCard,proto3" json:"LeadCard,omitempty"` //引牌
}

func (x *DrawCardResponse_IntoSendCardEvent) Reset() {
	*x = DrawCardResponse_IntoSendCardEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawCardResponse_IntoSendCardEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardResponse_IntoSendCardEvent) ProtoMessage() {}

func (x *DrawCardResponse_IntoSendCardEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardResponse_IntoSendCardEvent.ProtoReflect.Descriptor instead.
func (*DrawCardResponse_IntoSendCardEvent) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{20, 0}
}

func (x *DrawCardResponse_IntoSendCardEvent) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *DrawCardResponse_IntoSendCardEvent) GetBanker() *PlayerInfo {
	if x != nil {
		return x.Banker
	}
	return nil
}

func (x *DrawCardResponse_IntoSendCardEvent) GetLeadCard() *Card {
	if x != nil {
		return x.LeadCard
	}
	return nil
}

type DrawCardResponse_SkippedEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextOperator *PlayerInfo `protobuf:"bytes,1,opt,name=NextOperator,proto3" json:"NextOperator,omitempty"`
}

func (x *DrawCardResponse_SkippedEvent) Reset() {
	*x = DrawCardResponse_SkippedEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DrawCardResponse_SkippedEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardResponse_SkippedEvent) ProtoMessage() {}

func (x *DrawCardResponse_SkippedEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardResponse_SkippedEvent.ProtoReflect.Descriptor instead.
func (*DrawCardResponse_SkippedEvent) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{20, 1}
}

func (x *DrawCardResponse_SkippedEvent) GetNextOperator() *PlayerInfo {
	if x != nil {
		return x.NextOperator
	}
	return nil
}

type SendCardActionResponse_GameFinishEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*PlayerInfo `protobuf:"bytes,1,rep,name=Players,proto3" json:"Players,omitempty"`
	Winner  *PlayerInfo   `protobuf:"bytes,2,opt,name=Winner,proto3" json:"Winner,omitempty"`
}

func (x *SendCardActionResponse_GameFinishEvent) Reset() {
	*x = SendCardActionResponse_GameFinishEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCardActionResponse_GameFinishEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardActionResponse_GameFinishEvent) ProtoMessage() {}

func (x *SendCardActionResponse_GameFinishEvent) ProtoReflect() protoreflect.Message {
	mi := &file_plugin_uno_protos_uno_uno_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardActionResponse_GameFinishEvent.ProtoReflect.Descriptor instead.
func (*SendCardActionResponse_GameFinishEvent) Descriptor() ([]byte, []int) {
	return file_plugin_uno_protos_uno_uno_proto_rawDescGZIP(), []int{22, 0}
}

func (x *SendCardActionResponse_GameFinishEvent) GetPlayers() []*PlayerInfo {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *SendCardActionResponse_GameFinishEvent) GetWinner() *PlayerInfo {
	if x != nil {
		return x.Winner
	}
	return nil
}

var File_plugin_uno_protos_uno_uno_proto protoreflect.FileDescriptor

var file_plugin_uno_protos_uno_uno_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x75, 0x6e, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x75, 0x6e, 0x6f, 0x2f, 0x75, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x12, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x22, 0xfa, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x5b, 0x0a, 0x12, 0x57, 0x69, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77,
	0x46, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x57, 0x69, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x46, 0x6f,
	0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x12, 0x57, 0x69, 0x6c, 0x64,
	0x44, 0x72, 0x61, 0x77, 0x46, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x45, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x57, 0x69, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x46, 0x6f, 0x75, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x43, 0x0a, 0x0a, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x48,
	0x00, 0x52, 0x0a, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x46, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x48, 0x01, 0x52, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4e,
	0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x22, 0x79, 0x0a, 0x0a, 0x4e, 0x6f, 0x72,
	0x6d, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74,
	0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x36, 0x0a, 0x06,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73,
	0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x0b, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x75, 0x6e, 0x6f, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x52, 0x0b, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x72, 0x64, 0x22, 0x37, 0x0a,
	0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f,
	0x6d, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f,
	0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2e, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05,
	0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x48, 0x00, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x22, 0xc5, 0x01,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x53, 0x0a, 0x11,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x88,
	0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x94, 0x03, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x19, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x48, 0x65, 0x61, 0x70, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x43, 0x61,
	0x72, 0x64, 0x48, 0x65, 0x61, 0x70, 0x12, 0x38, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f,
	0x6f, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x6f, 0x6c,
	0x12, 0x45, 0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x77, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x0b, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4e, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x77, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x4a, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48,
	0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0x30, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x2c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x42, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2e, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x69, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x22, 0x87, 0x01, 0x0a,
	0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72,
	0x72, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x06,
	0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22, 0x2d, 0x0a, 0x0f, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a,
	0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x22,
	0x6e, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61,
	0x73, 0x68, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x52, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x2d, 0x0a, 0x0f, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x83,
	0x07, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x12, 0x47, 0x0a, 0x0f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x42,
	0x61, 0x6e, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x48, 0x01, 0x52, 0x0f, 0x45, 0x6c, 0x65,
	0x63, 0x74, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x44, 0x72, 0x61,
	0x77, 0x43, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x48, 0x02, 0x52, 0x08, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x6f, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x6e, 0x74,
	0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x61, 0x0a, 0x0d, 0x49, 0x6e, 0x74,
	0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x45, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x03, 0x52, 0x0d, 0x49, 0x6e, 0x74, 0x6f,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x45, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07,
	0x53, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x12, 0x52, 0x0a, 0x08, 0x53, 0x6b, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x45, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x44, 0x72,
	0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x04, 0x52, 0x08, 0x53,
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x45, 0x88, 0x01, 0x01, 0x1a, 0xbb, 0x01, 0x0a, 0x11, 0x49,
	0x6e, 0x74, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x42, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73,
	0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6b,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x08, 0x4c, 0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08,
	0x4c, 0x65, 0x61, 0x64, 0x43, 0x61, 0x72, 0x64, 0x1a, 0x52, 0x0a, 0x0c, 0x53, 0x6b, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0c, 0x4e, 0x65, 0x78, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x4e, 0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x65, 0x72, 0x72, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61,
	0x6e, 0x6b, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x44, 0x72, 0x61,
	0x77, 0x43, 0x61, 0x72, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x49, 0x6e, 0x74, 0x6f, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x45, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x53, 0x6b, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x45, 0x22, 0xa6, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e,
	0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x3b, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x23, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xea, 0x03,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x4e,
	0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x4e, 0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x38, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x53,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x61, 0x0a, 0x0b, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x0b, 0x47, 0x61,
	0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x88, 0x01, 0x01, 0x1a, 0x83, 0x01, 0x0a,
	0x0f, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x38, 0x0a, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x57, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73,
	0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x47,
	0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x45, 0x22, 0x2c, 0x0a, 0x0e, 0x43, 0x61,
	0x6c, 0x6c, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x43, 0x61, 0x6c,
	0x6c, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x38, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0a, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72,
	0x72, 0x22, 0x2e, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72, 0x88, 0x01, 0x01, 0x12, 0x10, 0x0a, 0x03, 0x57, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x57, 0x69, 0x6e, 0x12, 0x43, 0x0a, 0x0a,
	0x4c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x01, 0x52, 0x0a, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x4c, 0x61,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x30, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x65, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x13, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x4f, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x4f, 0x4b, 0x12, 0x3f, 0x0a, 0x08, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x08, 0x50, 0x75, 0x6e, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x50, 0x75, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x2a, 0x3e, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6b, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x10, 0x02, 0x2a, 0xf0, 0x04, 0x0a, 0x06,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x46,
	0x75, 0x6c, 0x6c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x6f,
	0x6f, 0x6d, 0x4e, 0x6f, 0x52, 0x65, 0x61, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x05, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x6f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x77,
	0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x4e, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x10, 0x08, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4f, 0x52, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x45, 0x4c, 0x61,
	0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x10, 0x09, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x6d,
	0x4e, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x10, 0x0a, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61,
	0x72, 0x64, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f,
	0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x4e, 0x6f, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x64, 0x10, 0x0e, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x55, 0x4e, 0x4f, 0x10, 0x0f, 0x12,
	0x14, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x6e, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x10, 0x11, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x6f,
	0x6f, 0x6d, 0x4e, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x10,
	0x12, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x55, 0x4e, 0x4f, 0x10, 0x13, 0x12, 0x0f, 0x0a, 0x0b, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x6f, 0x45, 0x78, 0x69, 0x73, 0x74, 0x41, 0x6e, 0x79,
	0x52, 0x6f, 0x6f, 0x6d, 0x10, 0x15, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x10, 0x16,
	0x12, 0x24, 0x0a, 0x20, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x48, 0x61, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x10, 0x17, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x43,
	0x61, 0x72, 0x64, 0x4e, 0x6f, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x10, 0x18, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x77, 0x10, 0x19, 0x2a, 0x40,
	0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x08, 0x0a, 0x04, 0x42,
	0x6c, 0x75, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x65, 0x64, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x72,
	0x65, 0x65, 0x6e, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x10, 0x04,
	0x2a, 0x70, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x08,
	0x0a, 0x04, 0x5a, 0x65, 0x72, 0x6f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x6e, 0x65, 0x10,
	0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x68,
	0x72, 0x65, 0x65, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x6f, 0x75, 0x72, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x69, 0x78,
	0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x10, 0x07, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x69, 0x67, 0x68, 0x74, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x69, 0x6e, 0x65,
	0x10, 0x09, 0x2a, 0x4e, 0x0a, 0x0c, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x6b, 0x69, 0x70, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x72, 0x61,
	0x77, 0x54, 0x77, 0x6f, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x69, 0x6c, 0x64, 0x10, 0x03,
	0x12, 0x10, 0x0a, 0x0c, 0x57, 0x69, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x46, 0x6f, 0x75, 0x72,
	0x10, 0x04, 0x2a, 0x27, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x10, 0x01, 0x2a, 0x23, 0x0a, 0x08, 0x43,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x10, 0x01,
	0x2a, 0x3c, 0x0a, 0x12, 0x57, 0x69, 0x6c, 0x64, 0x44, 0x72, 0x61, 0x77, 0x46, 0x6f, 0x75, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x72, 0x4c, 0x6f, 0x73, 0x65, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x64, 0x4c, 0x6f, 0x73, 0x65, 0x10, 0x01, 0x32, 0xc9,
	0x07, 0x0a, 0x03, 0x75, 0x6e, 0x6f, 0x12, 0x4f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x19, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x26, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24,
	0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x75, 0x6e, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12,
	0x22, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e,
	0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x23, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x55, 0x0a, 0x08, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x23, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f,
	0x2e, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x12, 0x24, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x08,
	0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62,
	0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x44, 0x72,
	0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75,
	0x6e, 0x6f, 0x2e, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x07,
	0x43, 0x61, 0x6c, 0x6c, 0x55, 0x4e, 0x4f, 0x12, 0x22, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f,
	0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x75,
	0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x24, 0x2e,
	0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75,
	0x6e, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x0b, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x4e, 0x4f, 0x12, 0x26, 0x2e, 0x73, 0x75, 0x73, 0x75,
	0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x4e, 0x4f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x73, 0x75, 0x73, 0x75, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x2e, 0x75, 0x6e, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55,
	0x4e, 0x4f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x75, 0x6e, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plugin_uno_protos_uno_uno_proto_rawDescOnce sync.Once
	file_plugin_uno_protos_uno_uno_proto_rawDescData = file_plugin_uno_protos_uno_uno_proto_rawDesc
)

func file_plugin_uno_protos_uno_uno_proto_rawDescGZIP() []byte {
	file_plugin_uno_protos_uno_uno_proto_rawDescOnce.Do(func() {
		file_plugin_uno_protos_uno_uno_proto_rawDescData = protoimpl.X.CompressGZIP(file_plugin_uno_protos_uno_uno_proto_rawDescData)
	})
	return file_plugin_uno_protos_uno_uno_proto_rawDescData
}

var file_plugin_uno_protos_uno_uno_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_plugin_uno_protos_uno_uno_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_plugin_uno_protos_uno_uno_proto_goTypes = []any{
	(Stage)(0),                                     // 0: susubot.plugin.uno.Stage
	(Errors)(0),                                    // 1: susubot.plugin.uno.Errors
	(CardColor)(0),                                 // 2: susubot.plugin.uno.CardColor
	(CardNumber)(0),                                // 3: susubot.plugin.uno.CardNumber
	(FeatureCards)(0),                              // 4: susubot.plugin.uno.FeatureCards
	(SendCardActions)(0),                           // 5: susubot.plugin.uno.SendCardActions
	(CardType)(0),                                  // 6: susubot.plugin.uno.CardType
	(WildDrawFourStatus)(0),                        // 7: susubot.plugin.uno.WildDrawFourStatus
	(*SendCard)(nil),                               // 8: susubot.plugin.uno.SendCard
	(*Card)(nil),                                   // 9: susubot.plugin.uno.Card
	(*NormalCard)(nil),                             // 10: susubot.plugin.uno.NormalCard
	(*FeatureCard)(nil),                            // 11: susubot.plugin.uno.FeatureCard
	(*PlayerAccountInfo)(nil),                      // 12: susubot.plugin.uno.PlayerAccountInfo
	(*PlayerRoomInfo)(nil),                         // 13: susubot.plugin.uno.PlayerRoomInfo
	(*PlayerInfo)(nil),                             // 14: susubot.plugin.uno.PlayerInfo
	(*Room)(nil),                                   // 15: susubot.plugin.uno.Room
	(*Empty)(nil),                                  // 16: susubot.plugin.uno.Empty
	(*BasicResponse)(nil),                          // 17: susubot.plugin.uno.BasicResponse
	(*CreateRoomResponse)(nil),                     // 18: susubot.plugin.uno.CreateRoomResponse
	(*GetRoomRequest)(nil),                         // 19: susubot.plugin.uno.GetRoomRequest
	(*GetRoomResponse)(nil),                        // 20: susubot.plugin.uno.GetRoomResponse
	(*GetRoomsResponse)(nil),                       // 21: susubot.plugin.uno.GetRoomsResponse
	(*JoinRoomRequest)(nil),                        // 22: susubot.plugin.uno.JoinRoomRequest
	(*JoinRoomResponse)(nil),                       // 23: susubot.plugin.uno.JoinRoomResponse
	(*ExitRoomRequest)(nil),                        // 24: susubot.plugin.uno.ExitRoomRequest
	(*ExitRoomResponse)(nil),                       // 25: susubot.plugin.uno.ExitRoomResponse
	(*StartRoomRequest)(nil),                       // 26: susubot.plugin.uno.StartRoomRequest
	(*DrawCardRequest)(nil),                        // 27: susubot.plugin.uno.DrawCardRequest
	(*DrawCardResponse)(nil),                       // 28: susubot.plugin.uno.DrawCardResponse
	(*SendCardActionRequest)(nil),                  // 29: susubot.plugin.uno.SendCardActionRequest
	(*SendCardActionResponse)(nil),                 // 30: susubot.plugin.uno.SendCardActionResponse
	(*CallUNORequest)(nil),                         // 31: susubot.plugin.uno.CallUNORequest
	(*CallUNOResponse)(nil),                        // 32: susubot.plugin.uno.CallUNOResponse
	(*ChallengeRequest)(nil),                       // 33: susubot.plugin.uno.ChallengeRequest
	(*ChallengeResponse)(nil),                      // 34: susubot.plugin.uno.ChallengeResponse
	(*IndicateUNORequest)(nil),                     // 35: susubot.plugin.uno.IndicateUNORequest
	(*IndicateUNOResponse)(nil),                    // 36: susubot.plugin.uno.IndicateUNOResponse
	(*DrawCardResponse_IntoSendCardEvent)(nil),     // 37: susubot.plugin.uno.DrawCardResponse.IntoSendCardEvent
	(*DrawCardResponse_SkippedEvent)(nil),          // 38: susubot.plugin.uno.DrawCardResponse.SkippedEvent
	(*SendCardActionResponse_GameFinishEvent)(nil), // 39: susubot.plugin.uno.SendCardActionResponse.GameFinishEvent
}
var file_plugin_uno_protos_uno_uno_proto_depIdxs = []int32{
	9,  // 0: susubot.plugin.uno.SendCard.SendCard:type_name -> susubot.plugin.uno.Card
	7,  // 1: susubot.plugin.uno.SendCard.WildDrawFourStatus:type_name -> susubot.plugin.uno.WildDrawFourStatus
	10, // 2: susubot.plugin.uno.Card.NormalCard:type_name -> susubot.plugin.uno.NormalCard
	11, // 3: susubot.plugin.uno.Card.FeatureCard:type_name -> susubot.plugin.uno.FeatureCard
	6,  // 4: susubot.plugin.uno.Card.Type:type_name -> susubot.plugin.uno.CardType
	2,  // 5: susubot.plugin.uno.NormalCard.Color:type_name -> susubot.plugin.uno.CardColor
	3,  // 6: susubot.plugin.uno.NormalCard.Number:type_name -> susubot.plugin.uno.CardNumber
	2,  // 7: susubot.plugin.uno.FeatureCard.Color:type_name -> susubot.plugin.uno.CardColor
	4,  // 8: susubot.plugin.uno.FeatureCard.FeatureCard:type_name -> susubot.plugin.uno.FeatureCards
	9,  // 9: susubot.plugin.uno.PlayerRoomInfo.Cards:type_name -> susubot.plugin.uno.Card
	9,  // 10: susubot.plugin.uno.PlayerRoomInfo.DrawCard:type_name -> susubot.plugin.uno.Card
	12, // 11: susubot.plugin.uno.PlayerInfo.PlayerAccountInfo:type_name -> susubot.plugin.uno.PlayerAccountInfo
	13, // 12: susubot.plugin.uno.PlayerInfo.PlayerRoomInfo:type_name -> susubot.plugin.uno.PlayerRoomInfo
	0,  // 13: susubot.plugin.uno.Room.Stage:type_name -> susubot.plugin.uno.Stage
	14, // 14: susubot.plugin.uno.Room.Banker:type_name -> susubot.plugin.uno.PlayerInfo
	9,  // 15: susubot.plugin.uno.Room.CardHeap:type_name -> susubot.plugin.uno.Card
	8,  // 16: susubot.plugin.uno.Room.CardPool:type_name -> susubot.plugin.uno.SendCard
	14, // 17: susubot.plugin.uno.Room.OperatorNow:type_name -> susubot.plugin.uno.PlayerInfo
	14, // 18: susubot.plugin.uno.Room.Players:type_name -> susubot.plugin.uno.PlayerInfo
	1,  // 19: susubot.plugin.uno.BasicResponse.err:type_name -> susubot.plugin.uno.Errors
	1,  // 20: susubot.plugin.uno.GetRoomResponse.err:type_name -> susubot.plugin.uno.Errors
	15, // 21: susubot.plugin.uno.GetRoomResponse.Info:type_name -> susubot.plugin.uno.Room
	15, // 22: susubot.plugin.uno.GetRoomsResponse.Infos:type_name -> susubot.plugin.uno.Room
	1,  // 23: susubot.plugin.uno.JoinRoomResponse.err:type_name -> susubot.plugin.uno.Errors
	14, // 24: susubot.plugin.uno.JoinRoomResponse.Players:type_name -> susubot.plugin.uno.PlayerInfo
	1,  // 25: susubot.plugin.uno.ExitRoomResponse.err:type_name -> susubot.plugin.uno.Errors
	14, // 26: susubot.plugin.uno.ExitRoomResponse.Players:type_name -> susubot.plugin.uno.PlayerInfo
	1,  // 27: susubot.plugin.uno.DrawCardResponse.err:type_name -> susubot.plugin.uno.Errors
	9,  // 28: susubot.plugin.uno.DrawCardResponse.ElectBankerCard:type_name -> susubot.plugin.uno.Card
	9,  // 29: susubot.plugin.uno.DrawCardResponse.PlayerCard:type_name -> susubot.plugin.uno.Card
	9,  // 30: susubot.plugin.uno.DrawCardResponse.DrawCard:type_name -> susubot.plugin.uno.Card
	0,  // 31: susubot.plugin.uno.DrawCardResponse.Stage:type_name -> susubot.plugin.uno.Stage
	37, // 32: susubot.plugin.uno.DrawCardResponse.IntoSendCardE:type_name -> susubot.plugin.uno.DrawCardResponse.IntoSendCardEvent
	38, // 33: susubot.plugin.uno.DrawCardResponse.SkippedE:type_name -> susubot.plugin.uno.DrawCardResponse.SkippedEvent
	9,  // 34: susubot.plugin.uno.SendCardActionRequest.SendCard:type_name -> susubot.plugin.uno.Card
	5,  // 35: susubot.plugin.uno.SendCardActionRequest.Action:type_name -> susubot.plugin.uno.SendCardActions
	1,  // 36: susubot.plugin.uno.SendCardActionResponse.err:type_name -> susubot.plugin.uno.Errors
	14, // 37: susubot.plugin.uno.SendCardActionResponse.NextOperator:type_name -> susubot.plugin.uno.PlayerInfo
	9,  // 38: susubot.plugin.uno.SendCardActionResponse.SenderCard:type_name -> susubot.plugin.uno.Card
	39, // 39: susubot.plugin.uno.SendCardActionResponse.GameFinishE:type_name -> susubot.plugin.uno.SendCardActionResponse.GameFinishEvent
	1,  // 40: susubot.plugin.uno.CallUNOResponse.err:type_name -> susubot.plugin.uno.Errors
	9,  // 41: susubot.plugin.uno.CallUNOResponse.PlayerCard:type_name -> susubot.plugin.uno.Card
	1,  // 42: susubot.plugin.uno.ChallengeResponse.err:type_name -> susubot.plugin.uno.Errors
	14, // 43: susubot.plugin.uno.ChallengeResponse.LastPlayer:type_name -> susubot.plugin.uno.PlayerInfo
	1,  // 44: susubot.plugin.uno.IndicateUNOResponse.err:type_name -> susubot.plugin.uno.Errors
	14, // 45: susubot.plugin.uno.IndicateUNOResponse.Punished:type_name -> susubot.plugin.uno.PlayerInfo
	14, // 46: susubot.plugin.uno.DrawCardResponse.IntoSendCardEvent.Players:type_name -> susubot.plugin.uno.PlayerInfo
	14, // 47: susubot.plugin.uno.DrawCardResponse.IntoSendCardEvent.Banker:type_name -> susubot.plugin.uno.PlayerInfo
	9,  // 48: susubot.plugin.uno.DrawCardResponse.IntoSendCardEvent.LeadCard:type_name -> susubot.plugin.uno.Card
	14, // 49: susubot.plugin.uno.DrawCardResponse.SkippedEvent.NextOperator:type_name -> susubot.plugin.uno.PlayerInfo
	14, // 50: susubot.plugin.uno.SendCardActionResponse.GameFinishEvent.Players:type_name -> susubot.plugin.uno.PlayerInfo
	14, // 51: susubot.plugin.uno.SendCardActionResponse.GameFinishEvent.Winner:type_name -> susubot.plugin.uno.PlayerInfo
	16, // 52: susubot.plugin.uno.uno.CreateRoom:input_type -> susubot.plugin.uno.Empty
	16, // 53: susubot.plugin.uno.uno.GetRooms:input_type -> susubot.plugin.uno.Empty
	19, // 54: susubot.plugin.uno.uno.GetRoom:input_type -> susubot.plugin.uno.GetRoomRequest
	22, // 55: susubot.plugin.uno.uno.JoinRoom:input_type -> susubot.plugin.uno.JoinRoomRequest
	24, // 56: susubot.plugin.uno.uno.ExitRoom:input_type -> susubot.plugin.uno.ExitRoomRequest
	26, // 57: susubot.plugin.uno.uno.StartRoom:input_type -> susubot.plugin.uno.StartRoomRequest
	27, // 58: susubot.plugin.uno.uno.DrawCard:input_type -> susubot.plugin.uno.DrawCardRequest
	29, // 59: susubot.plugin.uno.uno.SendCardAction:input_type -> susubot.plugin.uno.SendCardActionRequest
	31, // 60: susubot.plugin.uno.uno.CallUNO:input_type -> susubot.plugin.uno.CallUNORequest
	33, // 61: susubot.plugin.uno.uno.Challenge:input_type -> susubot.plugin.uno.ChallengeRequest
	35, // 62: susubot.plugin.uno.uno.IndicateUNO:input_type -> susubot.plugin.uno.IndicateUNORequest
	18, // 63: susubot.plugin.uno.uno.CreateRoom:output_type -> susubot.plugin.uno.CreateRoomResponse
	21, // 64: susubot.plugin.uno.uno.GetRooms:output_type -> susubot.plugin.uno.GetRoomsResponse
	20, // 65: susubot.plugin.uno.uno.GetRoom:output_type -> susubot.plugin.uno.GetRoomResponse
	23, // 66: susubot.plugin.uno.uno.JoinRoom:output_type -> susubot.plugin.uno.JoinRoomResponse
	25, // 67: susubot.plugin.uno.uno.ExitRoom:output_type -> susubot.plugin.uno.ExitRoomResponse
	17, // 68: susubot.plugin.uno.uno.StartRoom:output_type -> susubot.plugin.uno.BasicResponse
	28, // 69: susubot.plugin.uno.uno.DrawCard:output_type -> susubot.plugin.uno.DrawCardResponse
	30, // 70: susubot.plugin.uno.uno.SendCardAction:output_type -> susubot.plugin.uno.SendCardActionResponse
	32, // 71: susubot.plugin.uno.uno.CallUNO:output_type -> susubot.plugin.uno.CallUNOResponse
	34, // 72: susubot.plugin.uno.uno.Challenge:output_type -> susubot.plugin.uno.ChallengeResponse
	36, // 73: susubot.plugin.uno.uno.IndicateUNO:output_type -> susubot.plugin.uno.IndicateUNOResponse
	63, // [63:74] is the sub-list for method output_type
	52, // [52:63] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_plugin_uno_protos_uno_uno_proto_init() }
func file_plugin_uno_protos_uno_uno_proto_init() {
	if File_plugin_uno_protos_uno_uno_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plugin_uno_protos_uno_uno_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SendCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NormalCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*FeatureCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerAccountInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerRoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Room); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*BasicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CreateRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoomsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*JoinRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*JoinRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ExitRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ExitRoomResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*StartRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*DrawCardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*DrawCardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*SendCardActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*SendCardActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*CallUNORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*CallUNOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ChallengeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*ChallengeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*IndicateUNORequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*IndicateUNOResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*DrawCardResponse_IntoSendCardEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*DrawCardResponse_SkippedEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plugin_uno_protos_uno_uno_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*SendCardActionResponse_GameFinishEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[0].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[1].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[5].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[6].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[7].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[9].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[12].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[15].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[17].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[18].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[20].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[22].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[24].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[26].OneofWrappers = []any{}
	file_plugin_uno_protos_uno_uno_proto_msgTypes[28].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plugin_uno_protos_uno_uno_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plugin_uno_protos_uno_uno_proto_goTypes,
		DependencyIndexes: file_plugin_uno_protos_uno_uno_proto_depIdxs,
		EnumInfos:         file_plugin_uno_protos_uno_uno_proto_enumTypes,
		MessageInfos:      file_plugin_uno_protos_uno_uno_proto_msgTypes,
	}.Build()
	File_plugin_uno_protos_uno_uno_proto = out.File
	file_plugin_uno_protos_uno_uno_proto_rawDesc = nil
	file_plugin_uno_protos_uno_uno_proto_goTypes = nil
	file_plugin_uno_protos_uno_uno_proto_depIdxs = nil
}
