// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: randomanimal.proto

package server

import (
	"context"

	"github.com/nanachi-sh/susubot-code/plugin/randomanimal/pkg/protos/randomanimal"
	"github.com/nanachi-sh/susubot-code/plugin/randomanimal/service/internal/logic"
	"github.com/nanachi-sh/susubot-code/plugin/randomanimal/service/internal/svc"
)

type RandomAnimalServer struct {
	svcCtx *svc.ServiceContext
	randomanimal.UnimplementedRandomAnimalServer
}

func NewRandomAnimalServer(svcCtx *svc.ServiceContext) *RandomAnimalServer {
	return &RandomAnimalServer{
		svcCtx: svcCtx,
	}
}

func (s *RandomAnimalServer) GetDog(ctx context.Context, in *randomanimal.BasicRequest) (*randomanimal.BasicResponse, error) {
	l := logic.NewGetDogLogic(ctx, s.svcCtx)
	return l.GetDog(in)
}

func (s *RandomAnimalServer) GetFox(ctx context.Context, in *randomanimal.BasicRequest) (*randomanimal.BasicResponse, error) {
	l := logic.NewGetFoxLogic(ctx, s.svcCtx)
	return l.GetFox(in)
}

func (s *RandomAnimalServer) GetDuck(ctx context.Context, in *randomanimal.BasicRequest) (*randomanimal.BasicResponse, error) {
	l := logic.NewGetDuckLogic(ctx, s.svcCtx)
	return l.GetDuck(in)
}

func (s *RandomAnimalServer) GetCat(ctx context.Context, in *randomanimal.BasicRequest) (*randomanimal.BasicResponse, error) {
	l := logic.NewGetCatLogic(ctx, s.svcCtx)
	return l.GetCat(in)
}

func (s *RandomAnimalServer) GetChiken_CXK(ctx context.Context, in *randomanimal.BasicRequest) (*randomanimal.BasicResponse, error) {
	l := logic.NewGetChikenCXKLogic(ctx, s.svcCtx)
	return l.GetChiken_CXK(in)
}
