// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: fileweb.proto

package filewebclient

import (
	"context"

	"github.com/nanachi-sh/susubot-code/plugin/randomanimal/pkg/protos/fileweb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UploadRequest  = fileweb.UploadRequest
	UploadResponse = fileweb.UploadResponse

	FileWeb interface {
		Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error)
	}

	defaultFileWeb struct {
		cli zrpc.Client
	}
)

func NewFileWeb(cli zrpc.Client) FileWeb {
	return &defaultFileWeb{
		cli: cli,
	}
}

func (m *defaultFileWeb) Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error) {
	client := fileweb.NewFileWebClient(m.cli.Conn())
	return client.Upload(ctx, in, opts...)
}
