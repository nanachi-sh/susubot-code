// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.28.2
// source: pkg/protos/twoonone/twoonone.proto

package twoonone

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_ROLE_UNKNOWN   Role = 0
	Role_ROLE_LANDOWNER Role = 1
	Role_ROLE_FARMER    Role = 2
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "ROLE_UNKNOWN",
		1: "ROLE_LANDOWNER",
		2: "ROLE_FARMER",
	}
	Role_value = map[string]int32{
		"ROLE_UNKNOWN":   0,
		"ROLE_LANDOWNER": 1,
		"ROLE_FARMER":    2,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_twoonone_twoonone_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_pkg_protos_twoonone_twoonone_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{0}
}

type CardType int32

const (
	CardType_CARD_TYPE_UNKNOWN                      CardType = 0  //未知
	CardType_CARD_TYPE_KING_BOOM                    CardType = 1  //王炸
	CardType_CARD_TYPE_SINGLE                       CardType = 2  //单牌
	CardType_CARD_TYPE_DOUBLE                       CardType = 3  //双牌
	CardType_CARD_TYPE_THREE_CARD                   CardType = 4  //三牌
	CardType_CARD_TYPE_THREE_WITH_SINGLE            CardType = 5  //三带一
	CardType_CARD_TYPE_THREE_WITH_DOUBLE            CardType = 6  //三带一对
	CardType_CARD_TYPE_BOOM                         CardType = 7  //炸弹
	CardType_CARD_TYPE_FOUR_WITH_TWO_SINGLE         CardType = 8  //四带两
	CardType_CARD_TYPE_FOUR_WITH_TWO_DOUBLE         CardType = 9  //四带两对
	CardType_CARD_TYPE_SINGLE_SEQUENCE              CardType = 10 //顺子
	CardType_CARD_TYPE_DOUBLE_SEQUENCE              CardType = 11 //连对
	CardType_CARD_TYPE_AIR_SEQUENCE                 CardType = 12 //纯飞机
	CardType_CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE CardType = 13 //飞机带两
	CardType_CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE CardType = 14 //飞机带两对
)

// Enum value maps for CardType.
var (
	CardType_name = map[int32]string{
		0:  "CARD_TYPE_UNKNOWN",
		1:  "CARD_TYPE_KING_BOOM",
		2:  "CARD_TYPE_SINGLE",
		3:  "CARD_TYPE_DOUBLE",
		4:  "CARD_TYPE_THREE_CARD",
		5:  "CARD_TYPE_THREE_WITH_SINGLE",
		6:  "CARD_TYPE_THREE_WITH_DOUBLE",
		7:  "CARD_TYPE_BOOM",
		8:  "CARD_TYPE_FOUR_WITH_TWO_SINGLE",
		9:  "CARD_TYPE_FOUR_WITH_TWO_DOUBLE",
		10: "CARD_TYPE_SINGLE_SEQUENCE",
		11: "CARD_TYPE_DOUBLE_SEQUENCE",
		12: "CARD_TYPE_AIR_SEQUENCE",
		13: "CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE",
		14: "CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE",
	}
	CardType_value = map[string]int32{
		"CARD_TYPE_UNKNOWN":                      0,
		"CARD_TYPE_KING_BOOM":                    1,
		"CARD_TYPE_SINGLE":                       2,
		"CARD_TYPE_DOUBLE":                       3,
		"CARD_TYPE_THREE_CARD":                   4,
		"CARD_TYPE_THREE_WITH_SINGLE":            5,
		"CARD_TYPE_THREE_WITH_DOUBLE":            6,
		"CARD_TYPE_BOOM":                         7,
		"CARD_TYPE_FOUR_WITH_TWO_SINGLE":         8,
		"CARD_TYPE_FOUR_WITH_TWO_DOUBLE":         9,
		"CARD_TYPE_SINGLE_SEQUENCE":              10,
		"CARD_TYPE_DOUBLE_SEQUENCE":              11,
		"CARD_TYPE_AIR_SEQUENCE":                 12,
		"CARD_TYPE_AIR_SEQUENCE_WITH_TWO_SINGLE": 13,
		"CARD_TYPE_AIR_SEQUENCE_WITH_TWO_DOUBLE": 14,
	}
)

func (x CardType) Enum() *CardType {
	p := new(CardType)
	*p = x
	return p
}

func (x CardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CardType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_twoonone_twoonone_proto_enumTypes[1].Descriptor()
}

func (CardType) Type() protoreflect.EnumType {
	return &file_pkg_protos_twoonone_twoonone_proto_enumTypes[1]
}

func (x CardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CardType.Descriptor instead.
func (CardType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{1}
}

type RoomStage int32

const (
	RoomStage_ROOM_STAGE_UNKNOWN          RoomStage = 0
	RoomStage_ROOM_STAGE_WAITTING_START   RoomStage = 1
	RoomStage_ROOM_STAGE_ROB_LANDOWNERING RoomStage = 2
	RoomStage_ROOM_STAGE_SENDING_CARD     RoomStage = 3
)

// Enum value maps for RoomStage.
var (
	RoomStage_name = map[int32]string{
		0: "ROOM_STAGE_UNKNOWN",
		1: "ROOM_STAGE_WAITTING_START",
		2: "ROOM_STAGE_ROB_LANDOWNERING",
		3: "ROOM_STAGE_SENDING_CARD",
	}
	RoomStage_value = map[string]int32{
		"ROOM_STAGE_UNKNOWN":          0,
		"ROOM_STAGE_WAITTING_START":   1,
		"ROOM_STAGE_ROB_LANDOWNERING": 2,
		"ROOM_STAGE_SENDING_CARD":     3,
	}
)

func (x RoomStage) Enum() *RoomStage {
	p := new(RoomStage)
	*p = x
	return p
}

func (x RoomStage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomStage) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_twoonone_twoonone_proto_enumTypes[2].Descriptor()
}

func (RoomStage) Type() protoreflect.EnumType {
	return &file_pkg_protos_twoonone_twoonone_proto_enumTypes[2]
}

func (x RoomStage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomStage.Descriptor instead.
func (RoomStage) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{2}
}

type Card_Number int32

const (
	Card_THREE Card_Number = 0
	Card_FOUR  Card_Number = 1
	Card_FIVE  Card_Number = 2
	Card_SIX   Card_Number = 3
	Card_SEVEN Card_Number = 4
	Card_EIGHT Card_Number = 5
	Card_NINE  Card_Number = 6
	Card_TEN   Card_Number = 7
	Card_J     Card_Number = 8
	Card_Q     Card_Number = 9
	Card_K     Card_Number = 10
	Card_A     Card_Number = 11
	Card_TWO   Card_Number = 12
	Card_JOKER Card_Number = 13
	Card_KING  Card_Number = 14
)

// Enum value maps for Card_Number.
var (
	Card_Number_name = map[int32]string{
		0:  "THREE",
		1:  "FOUR",
		2:  "FIVE",
		3:  "SIX",
		4:  "SEVEN",
		5:  "EIGHT",
		6:  "NINE",
		7:  "TEN",
		8:  "J",
		9:  "Q",
		10: "K",
		11: "A",
		12: "TWO",
		13: "JOKER",
		14: "KING",
	}
	Card_Number_value = map[string]int32{
		"THREE": 0,
		"FOUR":  1,
		"FIVE":  2,
		"SIX":   3,
		"SEVEN": 4,
		"EIGHT": 5,
		"NINE":  6,
		"TEN":   7,
		"J":     8,
		"Q":     9,
		"K":     10,
		"A":     11,
		"TWO":   12,
		"JOKER": 13,
		"KING":  14,
	}
)

func (x Card_Number) Enum() *Card_Number {
	p := new(Card_Number)
	*p = x
	return p
}

func (x Card_Number) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Card_Number) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_twoonone_twoonone_proto_enumTypes[3].Descriptor()
}

func (Card_Number) Type() protoreflect.EnumType {
	return &file_pkg_protos_twoonone_twoonone_proto_enumTypes[3]
}

func (x Card_Number) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Card_Number.Descriptor instead.
func (Card_Number) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{0, 0}
}

type RobLandownerInfo_Action int32

const (
	RobLandownerInfo_ACTION_EMPTY  RobLandownerInfo_Action = 0
	RobLandownerInfo_ACTION_ROB    RobLandownerInfo_Action = 1
	RobLandownerInfo_ACTION_NO_ROB RobLandownerInfo_Action = 2
)

// Enum value maps for RobLandownerInfo_Action.
var (
	RobLandownerInfo_Action_name = map[int32]string{
		0: "ACTION_EMPTY",
		1: "ACTION_ROB",
		2: "ACTION_NO_ROB",
	}
	RobLandownerInfo_Action_value = map[string]int32{
		"ACTION_EMPTY":  0,
		"ACTION_ROB":    1,
		"ACTION_NO_ROB": 2,
	}
)

func (x RobLandownerInfo_Action) Enum() *RobLandownerInfo_Action {
	p := new(RobLandownerInfo_Action)
	*p = x
	return p
}

func (x RobLandownerInfo_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RobLandownerInfo_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_protos_twoonone_twoonone_proto_enumTypes[4].Descriptor()
}

func (RobLandownerInfo_Action) Type() protoreflect.EnumType {
	return &file_pkg_protos_twoonone_twoonone_proto_enumTypes[4]
}

func (x RobLandownerInfo_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RobLandownerInfo_Action.Descriptor instead.
func (RobLandownerInfo_Action) EnumDescriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{1, 0}
}

type Card struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Number        Card_Number            `protobuf:"varint,1,opt,name=number,proto3,enum=twoonone.Card_Number" json:"number,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Card) Reset() {
	*x = Card{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetNumber() Card_Number {
	if x != nil {
		return x.Number
	}
	return Card_THREE
}

type RobLandownerInfo struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Action        RobLandownerInfo_Action `protobuf:"varint,1,opt,name=action,proto3,enum=twoonone.RobLandownerInfo_Action" json:"action,omitempty"`
	ActionTime    int64                   `protobuf:"varint,2,opt,name=action_time,json=actionTime,proto3" json:"action_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobLandownerInfo) Reset() {
	*x = RobLandownerInfo{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobLandownerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobLandownerInfo) ProtoMessage() {}

func (x *RobLandownerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobLandownerInfo.ProtoReflect.Descriptor instead.
func (*RobLandownerInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{1}
}

func (x *RobLandownerInfo) GetAction() RobLandownerInfo_Action {
	if x != nil {
		return x.Action
	}
	return RobLandownerInfo_ACTION_EMPTY
}

func (x *RobLandownerInfo) GetActionTime() int64 {
	if x != nil {
		return x.ActionTime
	}
	return 0
}

type SendCard struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SenderInfo         *PlayerInfo            `protobuf:"bytes,1,opt,name=sender_info,json=senderInfo,proto3" json:"sender_info,omitempty"`
	Sendcards          []*Card                `protobuf:"bytes,2,rep,name=sendcards,proto3" json:"sendcards,omitempty"`
	SendcardType       CardType               `protobuf:"varint,3,opt,name=sendcard_type,json=sendcardType,proto3,enum=twoonone.CardType" json:"sendcard_type,omitempty"`
	SendcardSize       int32                  `protobuf:"varint,4,opt,name=sendcard_size,json=sendcardSize,proto3" json:"sendcard_size,omitempty"`
	SendcardContinuous int32                  `protobuf:"varint,5,opt,name=sendcard_continuous,json=sendcardContinuous,proto3" json:"sendcard_continuous,omitempty"` //顺子，连对等牌型有效
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SendCard) Reset() {
	*x = SendCard{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCard) ProtoMessage() {}

func (x *SendCard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCard.ProtoReflect.Descriptor instead.
func (*SendCard) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{2}
}

func (x *SendCard) GetSenderInfo() *PlayerInfo {
	if x != nil {
		return x.SenderInfo
	}
	return nil
}

func (x *SendCard) GetSendcards() []*Card {
	if x != nil {
		return x.Sendcards
	}
	return nil
}

func (x *SendCard) GetSendcardType() CardType {
	if x != nil {
		return x.SendcardType
	}
	return CardType_CARD_TYPE_UNKNOWN
}

func (x *SendCard) GetSendcardSize() int32 {
	if x != nil {
		return x.SendcardSize
	}
	return 0
}

func (x *SendCard) GetSendcardContinuous() int32 {
	if x != nil {
		return x.SendcardContinuous
	}
	return 0
}

type PlayerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *PlayerInfo_UserInfo   `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Table         *PlayerInfo_TableInfo  `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInfo) Reset() {
	*x = PlayerInfo{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo) ProtoMessage() {}

func (x *PlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerInfo) GetUser() *PlayerInfo_UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PlayerInfo) GetTable() *PlayerInfo_TableInfo {
	if x != nil {
		return x.Table
	}
	return nil
}

type RoomInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PlayerInfos   []*PlayerInfo          `protobuf:"bytes,2,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"`
	BasicCoin     float64                `protobuf:"fixed64,3,opt,name=basic_coin,json=basicCoin,proto3" json:"basic_coin,omitempty"`
	Multiple      int32                  `protobuf:"varint,4,opt,name=multiple,proto3" json:"multiple,omitempty"`
	Stage         RoomStage              `protobuf:"varint,5,opt,name=stage,proto3,enum=twoonone.RoomStage" json:"stage,omitempty"`
	Sendcards     []*SendCard            `protobuf:"bytes,6,rep,name=sendcards,proto3" json:"sendcards,omitempty"`
	OperatorNow   *PlayerInfo            `protobuf:"bytes,7,opt,name=operator_now,json=operatorNow,proto3,oneof" json:"operator_now,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{4}
}

func (x *RoomInfo) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *RoomInfo) GetPlayerInfos() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

func (x *RoomInfo) GetBasicCoin() float64 {
	if x != nil {
		return x.BasicCoin
	}
	return 0
}

func (x *RoomInfo) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *RoomInfo) GetStage() RoomStage {
	if x != nil {
		return x.Stage
	}
	return RoomStage_ROOM_STAGE_UNKNOWN
}

func (x *RoomInfo) GetSendcards() []*SendCard {
	if x != nil {
		return x.Sendcards
	}
	return nil
}

func (x *RoomInfo) GetOperatorNow() *PlayerInfo {
	if x != nil {
		return x.OperatorNow
	}
	return nil
}

type GetRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomHash      string                 `protobuf:"bytes,1,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomRequest) Reset() {
	*x = GetRoomRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomRequest) ProtoMessage() {}

func (x *GetRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomRequest.ProtoReflect.Descriptor instead.
func (*GetRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoomRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type GetRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RoomInfo      *RoomInfo              `protobuf:"bytes,1,opt,name=room_info,json=roomInfo,proto3" json:"room_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomResponse) Reset() {
	*x = GetRoomResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomResponse) ProtoMessage() {}

func (x *GetRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomResponse.ProtoReflect.Descriptor instead.
func (*GetRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoomResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *GetRoomResponse) GetRoomInfo() *RoomInfo {
	if x != nil {
		return x.RoomInfo
	}
	return nil
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{7}
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RoomHash      string                 `protobuf:"bytes,1,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRoomResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *CreateRoomResponse) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type JoinRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomHash      string                 `protobuf:"bytes,1,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{9}
}

func (x *JoinRoomRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

func (x *JoinRoomRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type JoinRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRoomResponse) Reset() {
	*x = JoinRoomResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomResponse) ProtoMessage() {}

func (x *JoinRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{10}
}

func (x *JoinRoomResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type ExitRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomHash      string                 `protobuf:"bytes,2,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExitRoomRequest) Reset() {
	*x = ExitRoomRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomRequest) ProtoMessage() {}

func (x *ExitRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomRequest.ProtoReflect.Descriptor instead.
func (*ExitRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{11}
}

func (x *ExitRoomRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ExitRoomRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type ExitRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExitRoomResponse) Reset() {
	*x = ExitRoomResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExitRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRoomResponse) ProtoMessage() {}

func (x *ExitRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRoomResponse.ProtoReflect.Descriptor instead.
func (*ExitRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{12}
}

func (x *ExitRoomResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type RobLandownerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomHash      string                 `protobuf:"bytes,2,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobLandownerRequest) Reset() {
	*x = RobLandownerRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobLandownerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobLandownerRequest) ProtoMessage() {}

func (x *RobLandownerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobLandownerRequest.ProtoReflect.Descriptor instead.
func (*RobLandownerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{13}
}

func (x *RobLandownerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RobLandownerRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type RobLandownerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobLandownerResponse) Reset() {
	*x = RobLandownerResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobLandownerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobLandownerResponse) ProtoMessage() {}

func (x *RobLandownerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobLandownerResponse.ProtoReflect.Descriptor instead.
func (*RobLandownerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{14}
}

func (x *RobLandownerResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type NoRobLandownerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomHash      string                 `protobuf:"bytes,2,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoRobLandownerRequest) Reset() {
	*x = NoRobLandownerRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoRobLandownerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoRobLandownerRequest) ProtoMessage() {}

func (x *NoRobLandownerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoRobLandownerRequest.ProtoReflect.Descriptor instead.
func (*NoRobLandownerRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{15}
}

func (x *NoRobLandownerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NoRobLandownerRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type NoRobLandownerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoRobLandownerResponse) Reset() {
	*x = NoRobLandownerResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoRobLandownerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoRobLandownerResponse) ProtoMessage() {}

func (x *NoRobLandownerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoRobLandownerResponse.ProtoReflect.Descriptor instead.
func (*NoRobLandownerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{16}
}

func (x *NoRobLandownerResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type SendCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomHash      string                 `protobuf:"bytes,2,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	Sendcards     []*Card                `protobuf:"bytes,3,rep,name=sendcards,proto3" json:"sendcards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCardRequest) Reset() {
	*x = SendCardRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardRequest) ProtoMessage() {}

func (x *SendCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardRequest.ProtoReflect.Descriptor instead.
func (*SendCardRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{17}
}

func (x *SendCardRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendCardRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

func (x *SendCardRequest) GetSendcards() []*Card {
	if x != nil {
		return x.Sendcards
	}
	return nil
}

type SendCardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCardResponse) Reset() {
	*x = SendCardResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCardResponse) ProtoMessage() {}

func (x *SendCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCardResponse.ProtoReflect.Descriptor instead.
func (*SendCardResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{18}
}

func (x *SendCardResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type NoSendCardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoomHash      string                 `protobuf:"bytes,2,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoSendCardRequest) Reset() {
	*x = NoSendCardRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoSendCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoSendCardRequest) ProtoMessage() {}

func (x *NoSendCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoSendCardRequest.ProtoReflect.Descriptor instead.
func (*NoSendCardRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{19}
}

func (x *NoSendCardRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *NoSendCardRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

type NoSendCardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NoSendCardResponse) Reset() {
	*x = NoSendCardResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NoSendCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoSendCardResponse) ProtoMessage() {}

func (x *NoSendCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoSendCardResponse.ProtoReflect.Descriptor instead.
func (*NoSendCardResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{20}
}

func (x *NoSendCardResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetDailyCoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDailyCoinRequest) Reset() {
	*x = GetDailyCoinRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailyCoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyCoinRequest) ProtoMessage() {}

func (x *GetDailyCoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyCoinRequest.ProtoReflect.Descriptor instead.
func (*GetDailyCoinRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{21}
}

func (x *GetDailyCoinRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetDailyCoinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDailyCoinResponse) Reset() {
	*x = GetDailyCoinResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDailyCoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyCoinResponse) ProtoMessage() {}

func (x *GetDailyCoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyCoinResponse.ProtoReflect.Descriptor instead.
func (*GetDailyCoinResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{22}
}

func (x *GetDailyCoinResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type StartRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomHash      string                 `protobuf:"bytes,1,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRoomRequest) Reset() {
	*x = StartRoomRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRoomRequest) ProtoMessage() {}

func (x *StartRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRoomRequest.ProtoReflect.Descriptor instead.
func (*StartRoomRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{23}
}

func (x *StartRoomRequest) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

func (x *StartRoomRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type StartRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRoomResponse) Reset() {
	*x = StartRoomResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRoomResponse) ProtoMessage() {}

func (x *StartRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRoomResponse.ProtoReflect.Descriptor instead.
func (*StartRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{24}
}

func (x *StartRoomResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type GetRoomsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomsRequest) Reset() {
	*x = GetRoomsRequest{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomsRequest) ProtoMessage() {}

func (x *GetRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomsRequest.ProtoReflect.Descriptor instead.
func (*GetRoomsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{25}
}

type GetRoomsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Extra         map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RoomInfos     []*RoomInfo            `protobuf:"bytes,1,rep,name=room_infos,json=roomInfos,proto3" json:"room_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoomsResponse) Reset() {
	*x = GetRoomsResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomsResponse) ProtoMessage() {}

func (x *GetRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomsResponse.ProtoReflect.Descriptor instead.
func (*GetRoomsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{26}
}

func (x *GetRoomsResponse) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

func (x *GetRoomsResponse) GetRoomInfos() []*RoomInfo {
	if x != nil {
		return x.RoomInfos
	}
	return nil
}

type RoomEventHandshake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomHash      string                 `protobuf:"bytes,1,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomEventHandshake) Reset() {
	*x = RoomEventHandshake{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomEventHandshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEventHandshake) ProtoMessage() {}

func (x *RoomEventHandshake) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEventHandshake.ProtoReflect.Descriptor instead.
func (*RoomEventHandshake) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{27}
}

func (x *RoomEventHandshake) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

func (x *RoomEventHandshake) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type EventRoomResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Body:
	//
	//	*EventRoomResponse_RoblandownerIntoSendingcard
	//	*EventRoomResponse_RoblandownerContinuousRob
	//	*EventRoomResponse_SendcardSpringNotice
	//	*EventRoomResponse_SendcardBoomNotice
	//	*EventRoomResponse_SendcardKingboomNotice
	//	*EventRoomResponse_GameFinish_
	//	*EventRoomResponse_SendcardCardnumberNotice
	//	*EventRoomResponse_RoomJoinPlayer_
	//	*EventRoomResponse_RoomExitPlayer_
	//	*EventRoomResponse_RoomStarted_
	//	*EventRoomResponse_RoomRobLandowner_
	//	*EventRoomResponse_RoomNorobLandowner
	//	*EventRoomResponse_RoomSendcard
	//	*EventRoomResponse_RoomNoSendcard
	Body          isEventRoomResponse_Body `protobuf_oneof:"Body"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse) Reset() {
	*x = EventRoomResponse{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse) ProtoMessage() {}

func (x *EventRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse.ProtoReflect.Descriptor instead.
func (*EventRoomResponse) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28}
}

func (x *EventRoomResponse) GetBody() isEventRoomResponse_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *EventRoomResponse) GetRoblandownerIntoSendingcard() *EventRoomResponse_RobLandownerIntoSendingCard {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoblandownerIntoSendingcard); ok {
			return x.RoblandownerIntoSendingcard
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoblandownerContinuousRob() *EventRoomResponse_RobLandownerContinuousRob {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoblandownerContinuousRob); ok {
			return x.RoblandownerContinuousRob
		}
	}
	return nil
}

func (x *EventRoomResponse) GetSendcardSpringNotice() *EventRoomResponse_SendCardSpringNotice {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_SendcardSpringNotice); ok {
			return x.SendcardSpringNotice
		}
	}
	return nil
}

func (x *EventRoomResponse) GetSendcardBoomNotice() *EventRoomResponse_SendCardBoomNotice {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_SendcardBoomNotice); ok {
			return x.SendcardBoomNotice
		}
	}
	return nil
}

func (x *EventRoomResponse) GetSendcardKingboomNotice() *EventRoomResponse_SendCardKingBoomNotice {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_SendcardKingboomNotice); ok {
			return x.SendcardKingboomNotice
		}
	}
	return nil
}

func (x *EventRoomResponse) GetGameFinish() *EventRoomResponse_GameFinish {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_GameFinish_); ok {
			return x.GameFinish
		}
	}
	return nil
}

func (x *EventRoomResponse) GetSendcardCardnumberNotice() *EventRoomResponse_SendCardCardNumberNotice {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_SendcardCardnumberNotice); ok {
			return x.SendcardCardnumberNotice
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomJoinPlayer() *EventRoomResponse_RoomJoinPlayer {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomJoinPlayer_); ok {
			return x.RoomJoinPlayer
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomExitPlayer() *EventRoomResponse_RoomExitPlayer {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomExitPlayer_); ok {
			return x.RoomExitPlayer
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomStarted() *EventRoomResponse_RoomStarted {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomStarted_); ok {
			return x.RoomStarted
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomRobLandowner() *EventRoomResponse_RoomRobLandowner {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomRobLandowner_); ok {
			return x.RoomRobLandowner
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomNorobLandowner() *EventRoomResponse_RoomNoRobLandowner {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomNorobLandowner); ok {
			return x.RoomNorobLandowner
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomSendcard() *EventRoomResponse_RoomSendCard {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomSendcard); ok {
			return x.RoomSendcard
		}
	}
	return nil
}

func (x *EventRoomResponse) GetRoomNoSendcard() *EventRoomResponse_RoomNoSendCard {
	if x != nil {
		if x, ok := x.Body.(*EventRoomResponse_RoomNoSendcard); ok {
			return x.RoomNoSendcard
		}
	}
	return nil
}

type isEventRoomResponse_Body interface {
	isEventRoomResponse_Body()
}

type EventRoomResponse_RoblandownerIntoSendingcard struct {
	RoblandownerIntoSendingcard *EventRoomResponse_RobLandownerIntoSendingCard `protobuf:"bytes,1,opt,name=roblandowner_into_sendingcard,json=roblandownerIntoSendingcard,proto3,oneof"`
}

type EventRoomResponse_RoblandownerContinuousRob struct {
	RoblandownerContinuousRob *EventRoomResponse_RobLandownerContinuousRob `protobuf:"bytes,2,opt,name=roblandowner_continuous_rob,json=roblandownerContinuousRob,proto3,oneof"`
}

type EventRoomResponse_SendcardSpringNotice struct {
	SendcardSpringNotice *EventRoomResponse_SendCardSpringNotice `protobuf:"bytes,3,opt,name=sendcard_spring_notice,json=sendcardSpringNotice,proto3,oneof"`
}

type EventRoomResponse_SendcardBoomNotice struct {
	SendcardBoomNotice *EventRoomResponse_SendCardBoomNotice `protobuf:"bytes,4,opt,name=sendcard_boom_notice,json=sendcardBoomNotice,proto3,oneof"`
}

type EventRoomResponse_SendcardKingboomNotice struct {
	SendcardKingboomNotice *EventRoomResponse_SendCardKingBoomNotice `protobuf:"bytes,5,opt,name=sendcard_kingboom_notice,json=sendcardKingboomNotice,proto3,oneof"`
}

type EventRoomResponse_GameFinish_ struct {
	GameFinish *EventRoomResponse_GameFinish `protobuf:"bytes,6,opt,name=game_finish,json=gameFinish,proto3,oneof"`
}

type EventRoomResponse_SendcardCardnumberNotice struct {
	SendcardCardnumberNotice *EventRoomResponse_SendCardCardNumberNotice `protobuf:"bytes,7,opt,name=sendcard_cardnumber_notice,json=sendcardCardnumberNotice,proto3,oneof"`
}

type EventRoomResponse_RoomJoinPlayer_ struct {
	RoomJoinPlayer *EventRoomResponse_RoomJoinPlayer `protobuf:"bytes,8,opt,name=room_join_player,json=roomJoinPlayer,proto3,oneof"`
}

type EventRoomResponse_RoomExitPlayer_ struct {
	RoomExitPlayer *EventRoomResponse_RoomExitPlayer `protobuf:"bytes,9,opt,name=room_exit_player,json=roomExitPlayer,proto3,oneof"`
}

type EventRoomResponse_RoomStarted_ struct {
	RoomStarted *EventRoomResponse_RoomStarted `protobuf:"bytes,10,opt,name=room_started,json=roomStarted,proto3,oneof"`
}

type EventRoomResponse_RoomRobLandowner_ struct {
	RoomRobLandowner *EventRoomResponse_RoomRobLandowner `protobuf:"bytes,11,opt,name=room_rob_landowner,json=roomRobLandowner,proto3,oneof"`
}

type EventRoomResponse_RoomNorobLandowner struct {
	RoomNorobLandowner *EventRoomResponse_RoomNoRobLandowner `protobuf:"bytes,12,opt,name=room_norob_landowner,json=roomNorobLandowner,proto3,oneof"`
}

type EventRoomResponse_RoomSendcard struct {
	RoomSendcard *EventRoomResponse_RoomSendCard `protobuf:"bytes,13,opt,name=room_sendcard,json=roomSendcard,proto3,oneof"`
}

type EventRoomResponse_RoomNoSendcard struct {
	RoomNoSendcard *EventRoomResponse_RoomNoSendCard `protobuf:"bytes,14,opt,name=room_no_sendcard,json=roomNoSendcard,proto3,oneof"`
}

func (*EventRoomResponse_RoblandownerIntoSendingcard) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoblandownerContinuousRob) isEventRoomResponse_Body() {}

func (*EventRoomResponse_SendcardSpringNotice) isEventRoomResponse_Body() {}

func (*EventRoomResponse_SendcardBoomNotice) isEventRoomResponse_Body() {}

func (*EventRoomResponse_SendcardKingboomNotice) isEventRoomResponse_Body() {}

func (*EventRoomResponse_GameFinish_) isEventRoomResponse_Body() {}

func (*EventRoomResponse_SendcardCardnumberNotice) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomJoinPlayer_) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomExitPlayer_) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomStarted_) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomRobLandowner_) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomNorobLandowner) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomSendcard) isEventRoomResponse_Body() {}

func (*EventRoomResponse_RoomNoSendcard) isEventRoomResponse_Body() {}

type PlayerInfo_TableInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RoomHash         string                 `protobuf:"bytes,1,opt,name=room_hash,json=roomHash,proto3" json:"room_hash,omitempty"`
	RoblandownerInfo *RobLandownerInfo      `protobuf:"bytes,2,opt,name=roblandowner_info,json=roblandownerInfo,proto3" json:"roblandowner_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PlayerInfo_TableInfo) Reset() {
	*x = PlayerInfo_TableInfo{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo_TableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo_TableInfo) ProtoMessage() {}

func (x *PlayerInfo_TableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo_TableInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo_TableInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PlayerInfo_TableInfo) GetRoomHash() string {
	if x != nil {
		return x.RoomHash
	}
	return ""
}

func (x *PlayerInfo_TableInfo) GetRoblandownerInfo() *RobLandownerInfo {
	if x != nil {
		return x.RoblandownerInfo
	}
	return nil
}

type PlayerInfo_UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerInfo_UserInfo) Reset() {
	*x = PlayerInfo_UserInfo{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInfo_UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInfo_UserInfo) ProtoMessage() {}

func (x *PlayerInfo_UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInfo_UserInfo.ProtoReflect.Descriptor instead.
func (*PlayerInfo_UserInfo) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{3, 1}
}

func (x *PlayerInfo_UserInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlayerInfo_UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type EventRoomResponse_RoomJoinPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JoinerInfo    *PlayerInfo            `protobuf:"bytes,1,opt,name=joiner_info,json=joinerInfo,proto3" json:"joiner_info,omitempty"`
	PlayerInfos   []*PlayerInfo          `protobuf:"bytes,2,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomJoinPlayer) Reset() {
	*x = EventRoomResponse_RoomJoinPlayer{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomJoinPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomJoinPlayer) ProtoMessage() {}

func (x *EventRoomResponse_RoomJoinPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomJoinPlayer.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomJoinPlayer) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 0}
}

func (x *EventRoomResponse_RoomJoinPlayer) GetJoinerInfo() *PlayerInfo {
	if x != nil {
		return x.JoinerInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomJoinPlayer) GetPlayerInfos() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

type EventRoomResponse_RoomExitPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LeaverInfo    *PlayerInfo            `protobuf:"bytes,1,opt,name=leaver_info,json=leaverInfo,proto3" json:"leaver_info,omitempty"`
	PlayerInfos   []*PlayerInfo          `protobuf:"bytes,2,rep,name=player_infos,json=playerInfos,proto3" json:"player_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomExitPlayer) Reset() {
	*x = EventRoomResponse_RoomExitPlayer{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomExitPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomExitPlayer) ProtoMessage() {}

func (x *EventRoomResponse_RoomExitPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomExitPlayer.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomExitPlayer) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 1}
}

func (x *EventRoomResponse_RoomExitPlayer) GetLeaverInfo() *PlayerInfo {
	if x != nil {
		return x.LeaverInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomExitPlayer) GetPlayerInfos() []*PlayerInfo {
	if x != nil {
		return x.PlayerInfos
	}
	return nil
}

type EventRoomResponse_RoomStarted struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	NextOperatorInfo *PlayerInfo            `protobuf:"bytes,1,opt,name=next_operator_info,json=nextOperatorInfo,proto3" json:"next_operator_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomStarted) Reset() {
	*x = EventRoomResponse_RoomStarted{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomStarted) ProtoMessage() {}

func (x *EventRoomResponse_RoomStarted) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomStarted.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomStarted) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 2}
}

func (x *EventRoomResponse_RoomStarted) GetNextOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.NextOperatorInfo
	}
	return nil
}

type EventRoomResponse_RoomRobLandowner struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorInfo     *PlayerInfo            `protobuf:"bytes,1,opt,name=operator_info,json=operatorInfo,proto3" json:"operator_info,omitempty"`
	NextOperatorInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=next_operator_info,json=nextOperatorInfo,proto3" json:"next_operator_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomRobLandowner) Reset() {
	*x = EventRoomResponse_RoomRobLandowner{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomRobLandowner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomRobLandowner) ProtoMessage() {}

func (x *EventRoomResponse_RoomRobLandowner) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomRobLandowner.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomRobLandowner) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 3}
}

func (x *EventRoomResponse_RoomRobLandowner) GetOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.OperatorInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomRobLandowner) GetNextOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.NextOperatorInfo
	}
	return nil
}

type EventRoomResponse_RoomNoRobLandowner struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorInfo     *PlayerInfo            `protobuf:"bytes,1,opt,name=operator_info,json=operatorInfo,proto3" json:"operator_info,omitempty"`
	NextOperatorInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=next_operator_info,json=nextOperatorInfo,proto3" json:"next_operator_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomNoRobLandowner) Reset() {
	*x = EventRoomResponse_RoomNoRobLandowner{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomNoRobLandowner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomNoRobLandowner) ProtoMessage() {}

func (x *EventRoomResponse_RoomNoRobLandowner) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomNoRobLandowner.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomNoRobLandowner) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 4}
}

func (x *EventRoomResponse_RoomNoRobLandowner) GetOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.OperatorInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomNoRobLandowner) GetNextOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.NextOperatorInfo
	}
	return nil
}

type EventRoomResponse_RoomSendCard struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorInfo     *PlayerInfo            `protobuf:"bytes,1,opt,name=operator_info,json=operatorInfo,proto3" json:"operator_info,omitempty"`
	NextOperatorInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=next_operator_info,json=nextOperatorInfo,proto3" json:"next_operator_info,omitempty"`
	Sendcards        []*Card                `protobuf:"bytes,3,rep,name=sendcards,proto3" json:"sendcards,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomSendCard) Reset() {
	*x = EventRoomResponse_RoomSendCard{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomSendCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomSendCard) ProtoMessage() {}

func (x *EventRoomResponse_RoomSendCard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomSendCard.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomSendCard) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 5}
}

func (x *EventRoomResponse_RoomSendCard) GetOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.OperatorInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomSendCard) GetNextOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.NextOperatorInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomSendCard) GetSendcards() []*Card {
	if x != nil {
		return x.Sendcards
	}
	return nil
}

type EventRoomResponse_RoomNoSendCard struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OperatorInfo     *PlayerInfo            `protobuf:"bytes,1,opt,name=operator_info,json=operatorInfo,proto3" json:"operator_info,omitempty"`
	NextOperatorInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=next_operator_info,json=nextOperatorInfo,proto3" json:"next_operator_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRoomResponse_RoomNoSendCard) Reset() {
	*x = EventRoomResponse_RoomNoSendCard{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RoomNoSendCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RoomNoSendCard) ProtoMessage() {}

func (x *EventRoomResponse_RoomNoSendCard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RoomNoSendCard.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RoomNoSendCard) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 6}
}

func (x *EventRoomResponse_RoomNoSendCard) GetOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.OperatorInfo
	}
	return nil
}

func (x *EventRoomResponse_RoomNoSendCard) GetNextOperatorInfo() *PlayerInfo {
	if x != nil {
		return x.NextOperatorInfo
	}
	return nil
}

type EventRoomResponse_RobLandownerIntoSendingCard struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SendcarderInfo *PlayerInfo            `protobuf:"bytes,1,opt,name=sendcarder_info,json=sendcarderInfo,proto3" json:"sendcarder_info,omitempty"`
	LandownerCards []*Card                `protobuf:"bytes,2,rep,name=landowner_cards,json=landownerCards,proto3" json:"landowner_cards,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventRoomResponse_RobLandownerIntoSendingCard) Reset() {
	*x = EventRoomResponse_RobLandownerIntoSendingCard{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RobLandownerIntoSendingCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RobLandownerIntoSendingCard) ProtoMessage() {}

func (x *EventRoomResponse_RobLandownerIntoSendingCard) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RobLandownerIntoSendingCard.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RobLandownerIntoSendingCard) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 7}
}

func (x *EventRoomResponse_RobLandownerIntoSendingCard) GetSendcarderInfo() *PlayerInfo {
	if x != nil {
		return x.SendcarderInfo
	}
	return nil
}

func (x *EventRoomResponse_RobLandownerIntoSendingCard) GetLandownerCards() []*Card {
	if x != nil {
		return x.LandownerCards
	}
	return nil
}

type EventRoomResponse_RobLandownerContinuousRob struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Multiple      int32                  `protobuf:"varint,1,opt,name=multiple,proto3" json:"multiple,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse_RobLandownerContinuousRob) Reset() {
	*x = EventRoomResponse_RobLandownerContinuousRob{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_RobLandownerContinuousRob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_RobLandownerContinuousRob) ProtoMessage() {}

func (x *EventRoomResponse_RobLandownerContinuousRob) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_RobLandownerContinuousRob.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_RobLandownerContinuousRob) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 8}
}

func (x *EventRoomResponse_RobLandownerContinuousRob) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

type EventRoomResponse_SendCardSpringNotice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Multiple      int32                  `protobuf:"varint,1,opt,name=multiple,proto3" json:"multiple,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse_SendCardSpringNotice) Reset() {
	*x = EventRoomResponse_SendCardSpringNotice{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_SendCardSpringNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_SendCardSpringNotice) ProtoMessage() {}

func (x *EventRoomResponse_SendCardSpringNotice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_SendCardSpringNotice.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_SendCardSpringNotice) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 9}
}

func (x *EventRoomResponse_SendCardSpringNotice) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

type EventRoomResponse_SendCardBoomNotice struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Multiple       int32                  `protobuf:"varint,1,opt,name=multiple,proto3" json:"multiple,omitempty"`
	SendcarderInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=sendcarder_info,json=sendcarderInfo,proto3" json:"sendcarder_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventRoomResponse_SendCardBoomNotice) Reset() {
	*x = EventRoomResponse_SendCardBoomNotice{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_SendCardBoomNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_SendCardBoomNotice) ProtoMessage() {}

func (x *EventRoomResponse_SendCardBoomNotice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_SendCardBoomNotice.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_SendCardBoomNotice) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 10}
}

func (x *EventRoomResponse_SendCardBoomNotice) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *EventRoomResponse_SendCardBoomNotice) GetSendcarderInfo() *PlayerInfo {
	if x != nil {
		return x.SendcarderInfo
	}
	return nil
}

type EventRoomResponse_SendCardKingBoomNotice struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Multiple       int32                  `protobuf:"varint,1,opt,name=multiple,proto3" json:"multiple,omitempty"`
	SendcarderInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=sendcarder_info,json=sendcarderInfo,proto3" json:"sendcarder_info,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventRoomResponse_SendCardKingBoomNotice) Reset() {
	*x = EventRoomResponse_SendCardKingBoomNotice{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_SendCardKingBoomNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_SendCardKingBoomNotice) ProtoMessage() {}

func (x *EventRoomResponse_SendCardKingBoomNotice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_SendCardKingBoomNotice.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_SendCardKingBoomNotice) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 11}
}

func (x *EventRoomResponse_SendCardKingBoomNotice) GetMultiple() int32 {
	if x != nil {
		return x.Multiple
	}
	return 0
}

func (x *EventRoomResponse_SendCardKingBoomNotice) GetSendcarderInfo() *PlayerInfo {
	if x != nil {
		return x.SendcarderInfo
	}
	return nil
}

type EventRoomResponse_SendCardCardNumberNotice struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Number           int32                  `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	NoticeTargetInfo *PlayerInfo            `protobuf:"bytes,2,opt,name=notice_target_info,json=noticeTargetInfo,proto3" json:"notice_target_info,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EventRoomResponse_SendCardCardNumberNotice) Reset() {
	*x = EventRoomResponse_SendCardCardNumberNotice{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_SendCardCardNumberNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_SendCardCardNumberNotice) ProtoMessage() {}

func (x *EventRoomResponse_SendCardCardNumberNotice) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_SendCardCardNumberNotice.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_SendCardCardNumberNotice) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 12}
}

func (x *EventRoomResponse_SendCardCardNumberNotice) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *EventRoomResponse_SendCardCardNumberNotice) GetNoticeTargetInfo() *PlayerInfo {
	if x != nil {
		return x.NoticeTargetInfo
	}
	return nil
}

type EventRoomResponse_GameFinish struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	LandownerInfo *EventRoomResponse_GameFinish_PlayerInfoExtra `protobuf:"bytes,1,opt,name=landowner_info,json=landownerInfo,proto3" json:"landowner_info,omitempty"`
	Farmer1Info   *EventRoomResponse_GameFinish_PlayerInfoExtra `protobuf:"bytes,2,opt,name=farmer1_info,json=farmer1Info,proto3" json:"farmer1_info,omitempty"`
	Farmer2Info   *EventRoomResponse_GameFinish_PlayerInfoExtra `protobuf:"bytes,3,opt,name=farmer2_info,json=farmer2Info,proto3" json:"farmer2_info,omitempty"`
	Winner        Role                                          `protobuf:"varint,4,opt,name=Winner,proto3,enum=twoonone.Role" json:"Winner,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse_GameFinish) Reset() {
	*x = EventRoomResponse_GameFinish{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_GameFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_GameFinish) ProtoMessage() {}

func (x *EventRoomResponse_GameFinish) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_GameFinish.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_GameFinish) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 13}
}

func (x *EventRoomResponse_GameFinish) GetLandownerInfo() *EventRoomResponse_GameFinish_PlayerInfoExtra {
	if x != nil {
		return x.LandownerInfo
	}
	return nil
}

func (x *EventRoomResponse_GameFinish) GetFarmer1Info() *EventRoomResponse_GameFinish_PlayerInfoExtra {
	if x != nil {
		return x.Farmer1Info
	}
	return nil
}

func (x *EventRoomResponse_GameFinish) GetFarmer2Info() *EventRoomResponse_GameFinish_PlayerInfoExtra {
	if x != nil {
		return x.Farmer2Info
	}
	return nil
}

func (x *EventRoomResponse_GameFinish) GetWinner() Role {
	if x != nil {
		return x.Winner
	}
	return Role_ROLE_UNKNOWN
}

type EventRoomResponse_GameFinish_PlayerInfoExtra struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerInfo    *PlayerInfo            `protobuf:"bytes,1,opt,name=player_info,json=playerInfo,proto3" json:"player_info,omitempty"`
	HandCards     []*Card                `protobuf:"bytes,2,rep,name=hand_cards,json=handCards,proto3" json:"hand_cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventRoomResponse_GameFinish_PlayerInfoExtra) Reset() {
	*x = EventRoomResponse_GameFinish_PlayerInfoExtra{}
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventRoomResponse_GameFinish_PlayerInfoExtra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventRoomResponse_GameFinish_PlayerInfoExtra) ProtoMessage() {}

func (x *EventRoomResponse_GameFinish_PlayerInfoExtra) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_protos_twoonone_twoonone_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventRoomResponse_GameFinish_PlayerInfoExtra.ProtoReflect.Descriptor instead.
func (*EventRoomResponse_GameFinish_PlayerInfoExtra) Descriptor() ([]byte, []int) {
	return file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP(), []int{28, 13, 0}
}

func (x *EventRoomResponse_GameFinish_PlayerInfoExtra) GetPlayerInfo() *PlayerInfo {
	if x != nil {
		return x.PlayerInfo
	}
	return nil
}

func (x *EventRoomResponse_GameFinish_PlayerInfoExtra) GetHandCards() []*Card {
	if x != nil {
		return x.HandCards
	}
	return nil
}

var File_pkg_protos_twoonone_twoonone_proto protoreflect.FileDescriptor

var file_pkg_protos_twoonone_twoonone_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2f, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x22, 0xcb,
	0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f,
	0x6e, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x93, 0x01, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x46, 0x4f, 0x55, 0x52, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x56, 0x45, 0x10, 0x02,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x49, 0x58, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x45, 0x56,
	0x45, 0x4e, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x05, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x49, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x45, 0x4e,
	0x10, 0x07, 0x12, 0x05, 0x0a, 0x01, 0x4a, 0x10, 0x08, 0x12, 0x05, 0x0a, 0x01, 0x51, 0x10, 0x09,
	0x12, 0x05, 0x0a, 0x01, 0x4b, 0x10, 0x0a, 0x12, 0x05, 0x0a, 0x01, 0x41, 0x10, 0x0b, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x57, 0x4f, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05, 0x4a, 0x4f, 0x4b, 0x45, 0x52,
	0x10, 0x0d, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x0e, 0x22, 0xad, 0x01, 0x0a,
	0x10, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x39, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x21, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x62,
	0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3d, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x4f, 0x42, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x4f, 0x42, 0x10, 0x02, 0x22, 0xfe, 0x01, 0x0a,
	0x08, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x37,
	0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x13,
	0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x6f, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x22, 0x98, 0x02,
	0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x71, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x47, 0x0a, 0x11, 0x72, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x72, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x64, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x2e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbe, 0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6f,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x69,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x74,
	0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x77,
	0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x09, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x6f, 0x77, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x6f, 0x77, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x22, 0xb8, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x77,
	0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x2f, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x77,
	0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x89,
	0x01, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x47, 0x0a, 0x0f, 0x45, 0x78,
	0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48,
	0x61, 0x73, 0x68, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f,
	0x6e, 0x65, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x4b, 0x0a, 0x13, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x22, 0x91, 0x01, 0x0a,
	0x14, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e,
	0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x4d, 0x0a, 0x15, 0x4e, 0x6f, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x95, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x77, 0x6f, 0x6f,
	0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x4e, 0x6f, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a,
	0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x2c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x49, 0x0a, 0x11, 0x4e, 0x6f,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f,
	0x6d, 0x48, 0x61, 0x73, 0x68, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x4e, 0x6f, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x77,
	0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x4e, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x10, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x6f, 0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e,
	0x6f, 0x6e, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e,
	0x6f, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x12, 0x31, 0x0a, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x4a, 0x0a, 0x12, 0x52, 0x6f, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f,
	0x6d, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6f, 0x6d, 0x48, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xf6, 0x1a, 0x0a, 0x11, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1d, 0x72, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x64,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x74,
	0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e,
	0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x1b, 0x72, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x64,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x63, 0x61, 0x72, 0x64, 0x12, 0x77, 0x0a, 0x1b, 0x72, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x64, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x5f,
	0x72, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x74, 0x77, 0x6f, 0x6f,
	0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x52, 0x6f, 0x62,
	0x48, 0x00, 0x52, 0x19, 0x72, 0x6f, 0x62, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x52, 0x6f, 0x62, 0x12, 0x68, 0x0a,
	0x16, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x70, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x53, 0x70, 0x72, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x62, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x6f, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x42, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x18, 0x73,
	0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6b, 0x69, 0x6e, 0x67, 0x62, 0x6f, 0x6f, 0x6d,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f,
	0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e,
	0x67, 0x62, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x67,
	0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x74, 0x0a, 0x1a, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x48, 0x00, 0x52, 0x18, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x10,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x4a, 0x6f, 0x69, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x65, 0x78, 0x69,
	0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x45, 0x78, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x6f,
	0x6f, 0x6d, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0c,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x72,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x5c, 0x0a, 0x12, 0x72, 0x6f,
	0x6f, 0x6d, 0x5f, 0x72, 0x6f, 0x62, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x4c,
	0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x62, 0x0a, 0x14, 0x72, 0x6f, 0x6f, 0x6d,
	0x5f, 0x6e, 0x6f, 0x72, 0x6f, 0x62, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e,
	0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e,
	0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x12, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f,
	0x72, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x0d,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x12, 0x56, 0x0a,
	0x10, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f,
	0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x53, 0x65, 0x6e,
	0x64, 0x63, 0x61, 0x72, 0x64, 0x1a, 0x80, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x4a, 0x6f,
	0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x37, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x80, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f,
	0x6d, 0x45, 0x78, 0x69, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x0b, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e,
	0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x51, 0x0a, 0x0b, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x12, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6e, 0x65,
	0x78, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x91,
	0x01, 0x0a, 0x10, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42,
	0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x93, 0x01, 0x0a, 0x12, 0x52, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x52, 0x6f, 0x62,
	0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xbb, 0x01, 0x0a, 0x0c, 0x52, 0x6f, 0x6f,
	0x6d, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x77,
	0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x63, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x8f, 0x01, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x4e,
	0x6f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x12, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x95, 0x01, 0x0a, 0x1b, 0x52, 0x6f, 0x62,
	0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x6f, 0x53, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64,
	0x63, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0f, 0x6c, 0x61, 0x6e, 0x64, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x0e, 0x6c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x1a, 0x37, 0x0a, 0x19, 0x52, 0x6f, 0x62, 0x4c, 0x61, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x6f, 0x75, 0x73, 0x52, 0x6f, 0x62, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x1a, 0x32, 0x0a, 0x14, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x53, 0x70, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x1a, 0x6f, 0x0a,
	0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x42, 0x6f, 0x6f, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12,
	0x3d, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e,
	0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x73,
	0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x4b, 0x69, 0x6e, 0x67, 0x42, 0x6f,
	0x6f, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x63, 0x61, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x76, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x12, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xc2, 0x03, 0x0a, 0x0a,
	0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x5d, 0x0a, 0x0e, 0x6c, 0x61,
	0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x0d, 0x6c, 0x61, 0x6e, 0x64,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x0c, 0x66, 0x61, 0x72,
	0x6d, 0x65, 0x72, 0x31, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x52, 0x0b, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x31,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x0c, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x32, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x74, 0x77, 0x6f,
	0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x0b, 0x66, 0x61, 0x72, 0x6d, 0x65, 0x72, 0x32, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x77, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x78, 0x74, 0x72, 0x61, 0x12, 0x35, 0x0a, 0x0b, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2d, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65,
	0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x2a, 0x3d, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x4c, 0x41, 0x4e, 0x44, 0x4f,
	0x57, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x46,
	0x41, 0x52, 0x4d, 0x45, 0x52, 0x10, 0x02, 0x2a, 0xd0, 0x03, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x4f,
	0x4f, 0x4d, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x41,
	0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x48,
	0x52, 0x45, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x41,
	0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x57, 0x49,
	0x54, 0x48, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x43,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x57,
	0x49, 0x54, 0x48, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4d, 0x10, 0x07,
	0x12, 0x22, 0x0a, 0x1e, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4f,
	0x55, 0x52, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x53, 0x49, 0x4e, 0x47,
	0x4c, 0x45, 0x10, 0x08, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x46, 0x4f, 0x55, 0x52, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x54, 0x57, 0x4f, 0x5f,
	0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x41, 0x52, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x51,
	0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x0a, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x41, 0x52, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x51, 0x55,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x49, 0x52, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45,
	0x10, 0x0c, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x49, 0x52, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x54, 0x57, 0x4f, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x0d, 0x12, 0x2a,
	0x0a, 0x26, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x49, 0x52, 0x5f,
	0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x54, 0x57,
	0x4f, 0x5f, 0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x0e, 0x2a, 0x80, 0x01, 0x0a, 0x09, 0x52,
	0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x4f, 0x4f, 0x4d,
	0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x1d, 0x0a, 0x19, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12,
	0x1f, 0x0a, 0x1b, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x4f,
	0x42, 0x5f, 0x4c, 0x41, 0x4e, 0x44, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x53,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03, 0x42, 0x11, 0x5a,
	0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x77, 0x6f, 0x6f, 0x6e, 0x6f, 0x6e, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_protos_twoonone_twoonone_proto_rawDescOnce sync.Once
	file_pkg_protos_twoonone_twoonone_proto_rawDescData = file_pkg_protos_twoonone_twoonone_proto_rawDesc
)

func file_pkg_protos_twoonone_twoonone_proto_rawDescGZIP() []byte {
	file_pkg_protos_twoonone_twoonone_proto_rawDescOnce.Do(func() {
		file_pkg_protos_twoonone_twoonone_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_protos_twoonone_twoonone_proto_rawDescData)
	})
	return file_pkg_protos_twoonone_twoonone_proto_rawDescData
}

var file_pkg_protos_twoonone_twoonone_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pkg_protos_twoonone_twoonone_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_pkg_protos_twoonone_twoonone_proto_goTypes = []any{
	(Role)(0),                                // 0: twoonone.Role
	(CardType)(0),                            // 1: twoonone.CardType
	(RoomStage)(0),                           // 2: twoonone.RoomStage
	(Card_Number)(0),                         // 3: twoonone.Card.Number
	(RobLandownerInfo_Action)(0),             // 4: twoonone.RobLandownerInfo.Action
	(*Card)(nil),                             // 5: twoonone.Card
	(*RobLandownerInfo)(nil),                 // 6: twoonone.RobLandownerInfo
	(*SendCard)(nil),                         // 7: twoonone.SendCard
	(*PlayerInfo)(nil),                       // 8: twoonone.PlayerInfo
	(*RoomInfo)(nil),                         // 9: twoonone.RoomInfo
	(*GetRoomRequest)(nil),                   // 10: twoonone.GetRoomRequest
	(*GetRoomResponse)(nil),                  // 11: twoonone.GetRoomResponse
	(*CreateRoomRequest)(nil),                // 12: twoonone.CreateRoomRequest
	(*CreateRoomResponse)(nil),               // 13: twoonone.CreateRoomResponse
	(*JoinRoomRequest)(nil),                  // 14: twoonone.JoinRoomRequest
	(*JoinRoomResponse)(nil),                 // 15: twoonone.JoinRoomResponse
	(*ExitRoomRequest)(nil),                  // 16: twoonone.ExitRoomRequest
	(*ExitRoomResponse)(nil),                 // 17: twoonone.ExitRoomResponse
	(*RobLandownerRequest)(nil),              // 18: twoonone.RobLandownerRequest
	(*RobLandownerResponse)(nil),             // 19: twoonone.RobLandownerResponse
	(*NoRobLandownerRequest)(nil),            // 20: twoonone.NoRobLandownerRequest
	(*NoRobLandownerResponse)(nil),           // 21: twoonone.NoRobLandownerResponse
	(*SendCardRequest)(nil),                  // 22: twoonone.SendCardRequest
	(*SendCardResponse)(nil),                 // 23: twoonone.SendCardResponse
	(*NoSendCardRequest)(nil),                // 24: twoonone.NoSendCardRequest
	(*NoSendCardResponse)(nil),               // 25: twoonone.NoSendCardResponse
	(*GetDailyCoinRequest)(nil),              // 26: twoonone.GetDailyCoinRequest
	(*GetDailyCoinResponse)(nil),             // 27: twoonone.GetDailyCoinResponse
	(*StartRoomRequest)(nil),                 // 28: twoonone.StartRoomRequest
	(*StartRoomResponse)(nil),                // 29: twoonone.StartRoomResponse
	(*GetRoomsRequest)(nil),                  // 30: twoonone.GetRoomsRequest
	(*GetRoomsResponse)(nil),                 // 31: twoonone.GetRoomsResponse
	(*RoomEventHandshake)(nil),               // 32: twoonone.RoomEventHandshake
	(*EventRoomResponse)(nil),                // 33: twoonone.EventRoomResponse
	(*PlayerInfo_TableInfo)(nil),             // 34: twoonone.PlayerInfo.TableInfo
	(*PlayerInfo_UserInfo)(nil),              // 35: twoonone.PlayerInfo.UserInfo
	nil,                                      // 36: twoonone.GetRoomResponse.ExtraEntry
	nil,                                      // 37: twoonone.CreateRoomResponse.ExtraEntry
	nil,                                      // 38: twoonone.JoinRoomResponse.ExtraEntry
	nil,                                      // 39: twoonone.ExitRoomResponse.ExtraEntry
	nil,                                      // 40: twoonone.RobLandownerResponse.ExtraEntry
	nil,                                      // 41: twoonone.NoRobLandownerResponse.ExtraEntry
	nil,                                      // 42: twoonone.SendCardResponse.ExtraEntry
	nil,                                      // 43: twoonone.NoSendCardResponse.ExtraEntry
	nil,                                      // 44: twoonone.GetDailyCoinResponse.ExtraEntry
	nil,                                      // 45: twoonone.StartRoomResponse.ExtraEntry
	nil,                                      // 46: twoonone.GetRoomsResponse.ExtraEntry
	(*EventRoomResponse_RoomJoinPlayer)(nil), // 47: twoonone.EventRoomResponse.RoomJoinPlayer
	(*EventRoomResponse_RoomExitPlayer)(nil), // 48: twoonone.EventRoomResponse.RoomExitPlayer
	(*EventRoomResponse_RoomStarted)(nil),    // 49: twoonone.EventRoomResponse.RoomStarted
	(*EventRoomResponse_RoomRobLandowner)(nil),            // 50: twoonone.EventRoomResponse.RoomRobLandowner
	(*EventRoomResponse_RoomNoRobLandowner)(nil),          // 51: twoonone.EventRoomResponse.RoomNoRobLandowner
	(*EventRoomResponse_RoomSendCard)(nil),                // 52: twoonone.EventRoomResponse.RoomSendCard
	(*EventRoomResponse_RoomNoSendCard)(nil),              // 53: twoonone.EventRoomResponse.RoomNoSendCard
	(*EventRoomResponse_RobLandownerIntoSendingCard)(nil), // 54: twoonone.EventRoomResponse.RobLandownerIntoSendingCard
	(*EventRoomResponse_RobLandownerContinuousRob)(nil),   // 55: twoonone.EventRoomResponse.RobLandownerContinuousRob
	(*EventRoomResponse_SendCardSpringNotice)(nil),        // 56: twoonone.EventRoomResponse.SendCardSpringNotice
	(*EventRoomResponse_SendCardBoomNotice)(nil),          // 57: twoonone.EventRoomResponse.SendCardBoomNotice
	(*EventRoomResponse_SendCardKingBoomNotice)(nil),      // 58: twoonone.EventRoomResponse.SendCardKingBoomNotice
	(*EventRoomResponse_SendCardCardNumberNotice)(nil),    // 59: twoonone.EventRoomResponse.SendCardCardNumberNotice
	(*EventRoomResponse_GameFinish)(nil),                  // 60: twoonone.EventRoomResponse.GameFinish
	(*EventRoomResponse_GameFinish_PlayerInfoExtra)(nil),  // 61: twoonone.EventRoomResponse.GameFinish.PlayerInfoExtra
}
var file_pkg_protos_twoonone_twoonone_proto_depIdxs = []int32{
	3,  // 0: twoonone.Card.number:type_name -> twoonone.Card.Number
	4,  // 1: twoonone.RobLandownerInfo.action:type_name -> twoonone.RobLandownerInfo.Action
	8,  // 2: twoonone.SendCard.sender_info:type_name -> twoonone.PlayerInfo
	5,  // 3: twoonone.SendCard.sendcards:type_name -> twoonone.Card
	1,  // 4: twoonone.SendCard.sendcard_type:type_name -> twoonone.CardType
	35, // 5: twoonone.PlayerInfo.user:type_name -> twoonone.PlayerInfo.UserInfo
	34, // 6: twoonone.PlayerInfo.table:type_name -> twoonone.PlayerInfo.TableInfo
	8,  // 7: twoonone.RoomInfo.player_infos:type_name -> twoonone.PlayerInfo
	2,  // 8: twoonone.RoomInfo.stage:type_name -> twoonone.RoomStage
	7,  // 9: twoonone.RoomInfo.sendcards:type_name -> twoonone.SendCard
	8,  // 10: twoonone.RoomInfo.operator_now:type_name -> twoonone.PlayerInfo
	36, // 11: twoonone.GetRoomResponse.extra:type_name -> twoonone.GetRoomResponse.ExtraEntry
	9,  // 12: twoonone.GetRoomResponse.room_info:type_name -> twoonone.RoomInfo
	37, // 13: twoonone.CreateRoomResponse.extra:type_name -> twoonone.CreateRoomResponse.ExtraEntry
	38, // 14: twoonone.JoinRoomResponse.extra:type_name -> twoonone.JoinRoomResponse.ExtraEntry
	39, // 15: twoonone.ExitRoomResponse.extra:type_name -> twoonone.ExitRoomResponse.ExtraEntry
	40, // 16: twoonone.RobLandownerResponse.extra:type_name -> twoonone.RobLandownerResponse.ExtraEntry
	41, // 17: twoonone.NoRobLandownerResponse.extra:type_name -> twoonone.NoRobLandownerResponse.ExtraEntry
	5,  // 18: twoonone.SendCardRequest.sendcards:type_name -> twoonone.Card
	42, // 19: twoonone.SendCardResponse.extra:type_name -> twoonone.SendCardResponse.ExtraEntry
	43, // 20: twoonone.NoSendCardResponse.extra:type_name -> twoonone.NoSendCardResponse.ExtraEntry
	44, // 21: twoonone.GetDailyCoinResponse.extra:type_name -> twoonone.GetDailyCoinResponse.ExtraEntry
	45, // 22: twoonone.StartRoomResponse.extra:type_name -> twoonone.StartRoomResponse.ExtraEntry
	46, // 23: twoonone.GetRoomsResponse.extra:type_name -> twoonone.GetRoomsResponse.ExtraEntry
	9,  // 24: twoonone.GetRoomsResponse.room_infos:type_name -> twoonone.RoomInfo
	54, // 25: twoonone.EventRoomResponse.roblandowner_into_sendingcard:type_name -> twoonone.EventRoomResponse.RobLandownerIntoSendingCard
	55, // 26: twoonone.EventRoomResponse.roblandowner_continuous_rob:type_name -> twoonone.EventRoomResponse.RobLandownerContinuousRob
	56, // 27: twoonone.EventRoomResponse.sendcard_spring_notice:type_name -> twoonone.EventRoomResponse.SendCardSpringNotice
	57, // 28: twoonone.EventRoomResponse.sendcard_boom_notice:type_name -> twoonone.EventRoomResponse.SendCardBoomNotice
	58, // 29: twoonone.EventRoomResponse.sendcard_kingboom_notice:type_name -> twoonone.EventRoomResponse.SendCardKingBoomNotice
	60, // 30: twoonone.EventRoomResponse.game_finish:type_name -> twoonone.EventRoomResponse.GameFinish
	59, // 31: twoonone.EventRoomResponse.sendcard_cardnumber_notice:type_name -> twoonone.EventRoomResponse.SendCardCardNumberNotice
	47, // 32: twoonone.EventRoomResponse.room_join_player:type_name -> twoonone.EventRoomResponse.RoomJoinPlayer
	48, // 33: twoonone.EventRoomResponse.room_exit_player:type_name -> twoonone.EventRoomResponse.RoomExitPlayer
	49, // 34: twoonone.EventRoomResponse.room_started:type_name -> twoonone.EventRoomResponse.RoomStarted
	50, // 35: twoonone.EventRoomResponse.room_rob_landowner:type_name -> twoonone.EventRoomResponse.RoomRobLandowner
	51, // 36: twoonone.EventRoomResponse.room_norob_landowner:type_name -> twoonone.EventRoomResponse.RoomNoRobLandowner
	52, // 37: twoonone.EventRoomResponse.room_sendcard:type_name -> twoonone.EventRoomResponse.RoomSendCard
	53, // 38: twoonone.EventRoomResponse.room_no_sendcard:type_name -> twoonone.EventRoomResponse.RoomNoSendCard
	6,  // 39: twoonone.PlayerInfo.TableInfo.roblandowner_info:type_name -> twoonone.RobLandownerInfo
	8,  // 40: twoonone.EventRoomResponse.RoomJoinPlayer.joiner_info:type_name -> twoonone.PlayerInfo
	8,  // 41: twoonone.EventRoomResponse.RoomJoinPlayer.player_infos:type_name -> twoonone.PlayerInfo
	8,  // 42: twoonone.EventRoomResponse.RoomExitPlayer.leaver_info:type_name -> twoonone.PlayerInfo
	8,  // 43: twoonone.EventRoomResponse.RoomExitPlayer.player_infos:type_name -> twoonone.PlayerInfo
	8,  // 44: twoonone.EventRoomResponse.RoomStarted.next_operator_info:type_name -> twoonone.PlayerInfo
	8,  // 45: twoonone.EventRoomResponse.RoomRobLandowner.operator_info:type_name -> twoonone.PlayerInfo
	8,  // 46: twoonone.EventRoomResponse.RoomRobLandowner.next_operator_info:type_name -> twoonone.PlayerInfo
	8,  // 47: twoonone.EventRoomResponse.RoomNoRobLandowner.operator_info:type_name -> twoonone.PlayerInfo
	8,  // 48: twoonone.EventRoomResponse.RoomNoRobLandowner.next_operator_info:type_name -> twoonone.PlayerInfo
	8,  // 49: twoonone.EventRoomResponse.RoomSendCard.operator_info:type_name -> twoonone.PlayerInfo
	8,  // 50: twoonone.EventRoomResponse.RoomSendCard.next_operator_info:type_name -> twoonone.PlayerInfo
	5,  // 51: twoonone.EventRoomResponse.RoomSendCard.sendcards:type_name -> twoonone.Card
	8,  // 52: twoonone.EventRoomResponse.RoomNoSendCard.operator_info:type_name -> twoonone.PlayerInfo
	8,  // 53: twoonone.EventRoomResponse.RoomNoSendCard.next_operator_info:type_name -> twoonone.PlayerInfo
	8,  // 54: twoonone.EventRoomResponse.RobLandownerIntoSendingCard.sendcarder_info:type_name -> twoonone.PlayerInfo
	5,  // 55: twoonone.EventRoomResponse.RobLandownerIntoSendingCard.landowner_cards:type_name -> twoonone.Card
	8,  // 56: twoonone.EventRoomResponse.SendCardBoomNotice.sendcarder_info:type_name -> twoonone.PlayerInfo
	8,  // 57: twoonone.EventRoomResponse.SendCardKingBoomNotice.sendcarder_info:type_name -> twoonone.PlayerInfo
	8,  // 58: twoonone.EventRoomResponse.SendCardCardNumberNotice.notice_target_info:type_name -> twoonone.PlayerInfo
	61, // 59: twoonone.EventRoomResponse.GameFinish.landowner_info:type_name -> twoonone.EventRoomResponse.GameFinish.PlayerInfoExtra
	61, // 60: twoonone.EventRoomResponse.GameFinish.farmer1_info:type_name -> twoonone.EventRoomResponse.GameFinish.PlayerInfoExtra
	61, // 61: twoonone.EventRoomResponse.GameFinish.farmer2_info:type_name -> twoonone.EventRoomResponse.GameFinish.PlayerInfoExtra
	0,  // 62: twoonone.EventRoomResponse.GameFinish.Winner:type_name -> twoonone.Role
	8,  // 63: twoonone.EventRoomResponse.GameFinish.PlayerInfoExtra.player_info:type_name -> twoonone.PlayerInfo
	5,  // 64: twoonone.EventRoomResponse.GameFinish.PlayerInfoExtra.hand_cards:type_name -> twoonone.Card
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_pkg_protos_twoonone_twoonone_proto_init() }
func file_pkg_protos_twoonone_twoonone_proto_init() {
	if File_pkg_protos_twoonone_twoonone_proto != nil {
		return
	}
	file_pkg_protos_twoonone_twoonone_proto_msgTypes[4].OneofWrappers = []any{}
	file_pkg_protos_twoonone_twoonone_proto_msgTypes[28].OneofWrappers = []any{
		(*EventRoomResponse_RoblandownerIntoSendingcard)(nil),
		(*EventRoomResponse_RoblandownerContinuousRob)(nil),
		(*EventRoomResponse_SendcardSpringNotice)(nil),
		(*EventRoomResponse_SendcardBoomNotice)(nil),
		(*EventRoomResponse_SendcardKingboomNotice)(nil),
		(*EventRoomResponse_GameFinish_)(nil),
		(*EventRoomResponse_SendcardCardnumberNotice)(nil),
		(*EventRoomResponse_RoomJoinPlayer_)(nil),
		(*EventRoomResponse_RoomExitPlayer_)(nil),
		(*EventRoomResponse_RoomStarted_)(nil),
		(*EventRoomResponse_RoomRobLandowner_)(nil),
		(*EventRoomResponse_RoomNorobLandowner)(nil),
		(*EventRoomResponse_RoomSendcard)(nil),
		(*EventRoomResponse_RoomNoSendcard)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_protos_twoonone_twoonone_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_protos_twoonone_twoonone_proto_goTypes,
		DependencyIndexes: file_pkg_protos_twoonone_twoonone_proto_depIdxs,
		EnumInfos:         file_pkg_protos_twoonone_twoonone_proto_enumTypes,
		MessageInfos:      file_pkg_protos_twoonone_twoonone_proto_msgTypes,
	}.Build()
	File_pkg_protos_twoonone_twoonone_proto = out.File
	file_pkg_protos_twoonone_twoonone_proto_rawDesc = nil
	file_pkg_protos_twoonone_twoonone_proto_goTypes = nil
	file_pkg_protos_twoonone_twoonone_proto_depIdxs = nil
}
